{
  "version": 3,
  "sources": ["../../../../../../node_modules/error-stack-parser-es/dist/index.mjs"],
  "sourcesContent": ["const FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+:\\d+/;\nconst CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+:\\d+|\\(native\\))/m;\nconst SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code])?$/;\nfunction parse(error) {\n  if (typeof error.stacktrace !== \"undefined\" || typeof error[\"opera#sourceloc\"] !== \"undefined\")\n    return parseOpera(error);\n  else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP))\n    return parseV8OrIE(error);\n  else if (error.stack)\n    return parseFFOrSafari(error);\n  else\n    throw new Error(\"Cannot parse given Error object\");\n}\nfunction extractLocation(urlLike) {\n  if (!urlLike.includes(\":\"))\n    return [urlLike];\n  const regExp = /(.+?)(?::(\\d+))?(?::(\\d+))?$/;\n  const parts = regExp.exec(urlLike.replace(/[()]/g, \"\"));\n  return [parts[1], parts[2] || void 0, parts[3] || void 0];\n}\nfunction parseV8OrIE(error) {\n  const filtered = error.stack.split(\"\\n\").filter((line) => {\n    return !!line.match(CHROME_IE_STACK_REGEXP);\n  });\n  return filtered.map((line) => {\n    if (line.includes(\"(eval \")) {\n      line = line.replace(/eval code/g, \"eval\").replace(/(\\(eval at [^()]*)|(,.*$)/g, \"\");\n    }\n    let sanitizedLine = line.replace(/^\\s+/, \"\").replace(/\\(eval code/g, \"(\").replace(/^.*?\\s+/, \"\");\n    const location = sanitizedLine.match(/ (\\(.+\\)$)/);\n    sanitizedLine = location ? sanitizedLine.replace(location[0], \"\") : sanitizedLine;\n    const locationParts = extractLocation(location ? location[1] : sanitizedLine);\n    const functionName = location && sanitizedLine || void 0;\n    const fileName = [\"eval\", \"<anonymous>\"].includes(locationParts[0]) ? void 0 : locationParts[0];\n    return {\n      functionName,\n      fileName,\n      lineNumber: locationParts[1] ? +locationParts[1] : void 0,\n      columnNumber: locationParts[2] ? +locationParts[2] : void 0,\n      source: line\n    };\n  });\n}\nfunction parseFFOrSafari(error) {\n  const filtered = error.stack.split(\"\\n\").filter((line) => {\n    return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n  });\n  return filtered.map((line) => {\n    if (line.includes(\" > eval\"))\n      line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval:\\d+:\\d+/g, \":$1\");\n    if (!line.includes(\"@\") && !line.includes(\":\")) {\n      return {\n        functionName: line\n      };\n    } else {\n      const functionNameRegex = /((.*\".+\"[^@]*)?[^@]*)(?:@)/;\n      const matches = line.match(functionNameRegex);\n      const functionName = matches && matches[1] ? matches[1] : void 0;\n      const locationParts = extractLocation(line.replace(functionNameRegex, \"\"));\n      return {\n        functionName,\n        fileName: locationParts[0],\n        lineNumber: locationParts[1] ? +locationParts[1] : void 0,\n        columnNumber: locationParts[2] ? +locationParts[2] : void 0,\n        source: line\n      };\n    }\n  });\n}\nfunction parseOpera(e) {\n  if (!e.stacktrace || e.message.includes(\"\\n\") && e.message.split(\"\\n\").length > e.stacktrace.split(\"\\n\").length)\n    return parseOpera9(e);\n  else if (!e.stack)\n    return parseOpera10(e);\n  else\n    return parseOpera11(e);\n}\nfunction parseOpera9(e) {\n  const lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n  const lines = e.message.split(\"\\n\");\n  const result = [];\n  for (let i = 2, len = lines.length; i < len; i += 2) {\n    const match = lineRE.exec(lines[i]);\n    if (match) {\n      result.push({\n        fileName: match[2],\n        lineNumber: +match[1],\n        source: lines[i]\n      });\n    }\n  }\n  return result;\n}\nfunction parseOpera10(e) {\n  const lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n  const lines = e.stacktrace.split(\"\\n\");\n  const result = [];\n  for (let i = 0, len = lines.length; i < len; i += 2) {\n    const match = lineRE.exec(lines[i]);\n    if (match) {\n      result.push({\n        functionName: match[3] || void 0,\n        fileName: match[2],\n        lineNumber: match[1] ? +match[1] : void 0,\n        source: lines[i]\n      });\n    }\n  }\n  return result;\n}\nfunction parseOpera11(error) {\n  const filtered = error.stack.split(\"\\n\").filter((line) => {\n    return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n  });\n  return filtered.map((line) => {\n    const tokens = line.split(\"@\");\n    const locationParts = extractLocation(tokens.pop());\n    const functionCall = tokens.shift() || \"\";\n    const functionName = functionCall.replace(/<anonymous function(: (\\w+))?>/, \"$2\").replace(/\\([^)]*\\)/g, \"\") || void 0;\n    let argsRaw;\n    if (functionCall.match(/\\(([^)]*)\\)/))\n      argsRaw = functionCall.replace(/^[^(]+\\(([^)]*)\\)$/, \"$1\");\n    const args = argsRaw === void 0 || argsRaw === \"[arguments not available]\" ? void 0 : argsRaw.split(\",\");\n    return {\n      functionName,\n      args,\n      fileName: locationParts[0],\n      lineNumber: locationParts[1] ? +locationParts[1] : void 0,\n      columnNumber: locationParts[2] ? +locationParts[2] : void 0,\n      source: line\n    };\n  });\n}\n\nexport { extractLocation, parse, parseFFOrSafari, parseOpera, parseOpera10, parseOpera11, parseOpera9, parseV8OrIE };\n"],
  "mappings": "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",
  "names": []
}
