{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/node_modules/graphql/jsutils/safeArrayFrom.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport { SYMBOL_ITERATOR } from \"../polyfills/symbols.mjs\";\n/**\n * Safer version of `Array.from` that return `null` if value isn't convertible to array.\n * Also protects against Array-like objects without items.\n *\n * @example\n *\n * safeArrayFrom([ 1, 2, 3 ]) // [1, 2, 3]\n * safeArrayFrom('ABC') // null\n * safeArrayFrom({ length: 1 }) // null\n * safeArrayFrom({ length: 1, 0: 'Alpha' }) // ['Alpha']\n * safeArrayFrom({ key: 'value' }) // null\n * safeArrayFrom(new Map()) // []\n *\n */\n\nexport default function safeArrayFrom(collection) {\n  var mapFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (item) {\n    return item;\n  };\n\n  if (collection == null || _typeof(collection) !== 'object') {\n    return null;\n  }\n\n  if (Array.isArray(collection)) {\n    return collection.map(mapFn);\n  } // Is Iterable?\n\n\n  var iteratorMethod = collection[SYMBOL_ITERATOR];\n\n  if (typeof iteratorMethod === 'function') {\n    // $FlowFixMe[incompatible-use]\n    var iterator = iteratorMethod.call(collection);\n    var result = [];\n    var step;\n\n    for (var i = 0; !(step = iterator.next()).done; ++i) {\n      result.push(mapFn(step.value, i));\n    }\n\n    return result;\n  } // Is Array like?\n\n\n  var length = collection.length;\n\n  if (typeof length === 'number' && length >= 0 && length % 1 === 0) {\n    var _result = [];\n\n    for (var _i = 0; _i < length; ++_i) {\n      if (!Object.prototype.hasOwnProperty.call(collection, _i)) {\n        return null;\n      }\n\n      _result.push(mapFn(collection[String(_i)], _i));\n    }\n\n    return _result;\n  }\n\n  return null;\n}\n",
      "start": 1716330189493,
      "end": 1716330189501,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716330189501,
      "end": 1716330189501,
      "order": "normal"
    }
  ]
}
