{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/node_modules/graphql/utilities/index.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// Produce the GraphQL query recommended for a full schema introspection.\n// Accepts optional IntrospectionOptions.\nexport { getIntrospectionQuery } from \"./getIntrospectionQuery.mjs\";\n// Gets the target Operation from a Document.\nexport { getOperationAST } from \"./getOperationAST.mjs\"; // Gets the Type for the target Operation AST.\n\nexport { getOperationRootType } from \"./getOperationRootType.mjs\"; // Convert a GraphQLSchema to an IntrospectionQuery.\n\nexport { introspectionFromSchema } from \"./introspectionFromSchema.mjs\"; // Build a GraphQLSchema from an introspection result.\n\nexport { buildClientSchema } from \"./buildClientSchema.mjs\"; // Build a GraphQLSchema from GraphQL Schema language.\n\nexport { buildASTSchema, buildSchema } from \"./buildASTSchema.mjs\";\n// Extends an existing GraphQLSchema from a parsed GraphQL Schema language AST.\nexport { extendSchema // @deprecated: Get the description from a schema AST node and supports legacy\n// syntax for specifying descriptions - will be removed in v16.\n, getDescription } from \"./extendSchema.mjs\"; // Sort a GraphQLSchema.\n\nexport { lexicographicSortSchema } from \"./lexicographicSortSchema.mjs\"; // Print a GraphQLSchema to GraphQL Schema language.\n\nexport { printSchema, printType, printIntrospectionSchema } from \"./printSchema.mjs\"; // Create a GraphQLType from a GraphQL language AST.\n\nexport { typeFromAST } from \"./typeFromAST.mjs\"; // Create a JavaScript value from a GraphQL language AST with a type.\n\nexport { valueFromAST } from \"./valueFromAST.mjs\"; // Create a JavaScript value from a GraphQL language AST without a type.\n\nexport { valueFromASTUntyped } from \"./valueFromASTUntyped.mjs\"; // Create a GraphQL language AST from a JavaScript value.\n\nexport { astFromValue } from \"./astFromValue.mjs\"; // A helper to use within recursive-descent visitors which need to be aware of\n// the GraphQL type system.\n\nexport { TypeInfo, visitWithTypeInfo } from \"./TypeInfo.mjs\"; // Coerces a JavaScript value to a GraphQL type, or produces errors.\n\nexport { coerceInputValue } from \"./coerceInputValue.mjs\"; // Concatenates multiple AST together.\n\nexport { concatAST } from \"./concatAST.mjs\"; // Separates an AST into an AST per Operation.\n\nexport { separateOperations } from \"./separateOperations.mjs\"; // Strips characters that are not significant to the validity or execution\n// of a GraphQL document.\n\nexport { stripIgnoredCharacters } from \"./stripIgnoredCharacters.mjs\"; // Comparators for types\n\nexport { isEqualType, isTypeSubTypeOf, doTypesOverlap } from \"./typeComparators.mjs\"; // Asserts that a string is a valid GraphQL name\n\nexport { assertValidName, isValidNameError } from \"./assertValidName.mjs\"; // Compares two GraphQLSchemas and detects breaking changes.\n\nexport { BreakingChangeType, DangerousChangeType, findBreakingChanges, findDangerousChanges } from \"./findBreakingChanges.mjs\";\n// @deprecated: Report all deprecated usage within a GraphQL document.\nexport { findDeprecatedUsages } from \"./findDeprecatedUsages.mjs\";\n",
      "start": 1710863481088,
      "end": 1710863481097,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1710863481098,
      "end": 1710863481098,
      "order": "normal"
    }
  ]
}
