{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/stores/auth.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// stores/auth.js\nimport { defineStore } from 'pinia';\n\nexport const useAuthStore = defineStore('auth', {\n  state: () => ({\n    user: null,\n    token: null,\n    refreshToken: null,\n  }),\n  actions: {\n    setUser(user) {\n      this.user = user;\n      sessionStorage.setItem('username', user);\n    },\n    setToken(token) {\n      this.token = token;\n      sessionStorage.setItem('authToken', token);\n    },\n    setRToken(refreshToken) {\n      this.refreshToken = refreshToken;\n      sessionStorage.setItem('refreshToken', refreshToken);\n    },\n    initialize() {\n      // Retrieve authentication state from sessionStorage\n      const storedUser = sessionStorage.getItem('username');\n      const storedToken = sessionStorage.getItem('authToken');\n      const storedRefreshToken = sessionStorage.getItem('refreshToken');\n\n      // Set store state\n      this.user = storedUser;\n      this.token = storedToken;\n      this.refreshToken = storedRefreshToken;\n    },\n    logout() {\n      // Clear store state\n      this.user = null;\n      this.token = null;\n      this.refreshToken = null;\n\n      // Remove stored data from sessionStorage\n      sessionStorage.removeItem('username');\n      sessionStorage.removeItem('authToken');\n      sessionStorage.removeItem('refreshToken');\n    }\n  },\n  getters: {\n    isAuthenticated: (state) => !!state.user,\n  },\n});\n",
      "start": 1716330188621,
      "end": 1716330188646,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716330188646,
      "end": 1716330188646,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716330188646,
      "end": 1716330188646,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1716330188646,
      "end": 1716330188646,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716330188646,
      "end": 1716330188646,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716330188646,
      "end": 1716330188646,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineStore } from \"pinia\";\nexport const useAuthStore = defineStore(\"auth\", {\n  state: () => ({\n    user: null,\n    token: null,\n    refreshToken: null\n  }),\n  actions: {\n    setUser(user) {\n      this.user = user;\n      sessionStorage.setItem(\"username\", user);\n    },\n    setToken(token) {\n      this.token = token;\n      sessionStorage.setItem(\"authToken\", token);\n    },\n    setRToken(refreshToken) {\n      this.refreshToken = refreshToken;\n      sessionStorage.setItem(\"refreshToken\", refreshToken);\n    },\n    initialize() {\n      const storedUser = sessionStorage.getItem(\"username\");\n      const storedToken = sessionStorage.getItem(\"authToken\");\n      const storedRefreshToken = sessionStorage.getItem(\"refreshToken\");\n      this.user = storedUser;\n      this.token = storedToken;\n      this.refreshToken = storedRefreshToken;\n    },\n    logout() {\n      this.user = null;\n      this.token = null;\n      this.refreshToken = null;\n      sessionStorage.removeItem(\"username\");\n      sessionStorage.removeItem(\"authToken\");\n      sessionStorage.removeItem(\"refreshToken\");\n    }\n  },\n  getters: {\n    isAuthenticated: (state) => !!state.user\n  }\n});\n",
      "start": 1716330188646,
      "end": 1716330188661,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/shubhamsingh/namma/importedProds/stores/auth.ts"
        ],
        "sourcesContent": [
          "// stores/auth.js\nimport { defineStore } from 'pinia';\n\nexport const useAuthStore = defineStore('auth', {\n  state: () => ({\n    user: null,\n    token: null,\n    refreshToken: null,\n  }),\n  actions: {\n    setUser(user) {\n      this.user = user;\n      sessionStorage.setItem('username', user);\n    },\n    setToken(token) {\n      this.token = token;\n      sessionStorage.setItem('authToken', token);\n    },\n    setRToken(refreshToken) {\n      this.refreshToken = refreshToken;\n      sessionStorage.setItem('refreshToken', refreshToken);\n    },\n    initialize() {\n      // Retrieve authentication state from sessionStorage\n      const storedUser = sessionStorage.getItem('username');\n      const storedToken = sessionStorage.getItem('authToken');\n      const storedRefreshToken = sessionStorage.getItem('refreshToken');\n\n      // Set store state\n      this.user = storedUser;\n      this.token = storedToken;\n      this.refreshToken = storedRefreshToken;\n    },\n    logout() {\n      // Clear store state\n      this.user = null;\n      this.token = null;\n      this.refreshToken = null;\n\n      // Remove stored data from sessionStorage\n      sessionStorage.removeItem('username');\n      sessionStorage.removeItem('authToken');\n      sessionStorage.removeItem('refreshToken');\n    }\n  },\n  getters: {\n    isAuthenticated: (state) => !!state.user,\n  },\n});\n"
        ],
        "mappings": "AACA,SAAS,mBAAmB;AAErB,aAAM,eAAe,YAAY,QAAQ;AAAA,EAC9C,OAAO,OAAO;AAAA,IACZ,MAAM;AAAA,IACN,OAAO;AAAA,IACP,cAAc;AAAA,EAChB;AAAA,EACA,SAAS;AAAA,IACP,QAAQ,MAAM;AACZ,WAAK,OAAO;AACZ,qBAAe,QAAQ,YAAY,IAAI;AAAA,IACzC;AAAA,IACA,SAAS,OAAO;AACd,WAAK,QAAQ;AACb,qBAAe,QAAQ,aAAa,KAAK;AAAA,IAC3C;AAAA,IACA,UAAU,cAAc;AACtB,WAAK,eAAe;AACpB,qBAAe,QAAQ,gBAAgB,YAAY;AAAA,IACrD;AAAA,IACA,aAAa;AAEX,YAAM,aAAa,eAAe,QAAQ,UAAU;AACpD,YAAM,cAAc,eAAe,QAAQ,WAAW;AACtD,YAAM,qBAAqB,eAAe,QAAQ,cAAc;AAGhE,WAAK,OAAO;AACZ,WAAK,QAAQ;AACb,WAAK,eAAe;AAAA,IACtB;AAAA,IACA,SAAS;AAEP,WAAK,OAAO;AACZ,WAAK,QAAQ;AACb,WAAK,eAAe;AAGpB,qBAAe,WAAW,UAAU;AACpC,qBAAe,WAAW,WAAW;AACrC,qBAAe,WAAW,cAAc;AAAA,IAC1C;AAAA,EACF;AAAA,EACA,SAAS;AAAA,IACP,iBAAiB,CAAC,UAAU,CAAC,CAAC,MAAM;AAAA,EACtC;AACF,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1716330188661,
      "end": 1716330188661,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716330188661,
      "end": 1716330188661,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1716330188661,
      "end": 1716330188661,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716330188661,
      "end": 1716330188661,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716330188661,
      "end": 1716330188661,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716330188661,
      "end": 1716330188661,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1716330188661,
      "end": 1716330188661,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1716330188661,
      "end": 1716330188661,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716330188661,
      "end": 1716330188661,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716330188661,
      "end": 1716330188661,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716330188661,
      "end": 1716330188661,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716330188661,
      "end": 1716330188661,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716330188661,
      "end": 1716330188661,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716330188661,
      "end": 1716330188661,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716330188661,
      "end": 1716330188661,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716330188661,
      "end": 1716330188661,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716330188661,
      "end": 1716330188661,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716330188661,
      "end": 1716330188661,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716330188661,
      "end": 1716330188661,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716330188661,
      "end": 1716330188661,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import logout from '/Users/shubhamsingh/namma/importedProds/stores/logout.js';\nimport { defineStore } from \"pinia\";\nexport const useAuthStore = defineStore(\"auth\", {\n  state: () => ({\n    user: null,\n    token: null,\n    refreshToken: null\n  }),\n  actions: {\n    setUser(user) {\n      this.user = user;\n      sessionStorage.setItem(\"username\", user);\n    },\n    setToken(token) {\n      this.token = token;\n      sessionStorage.setItem(\"authToken\", token);\n    },\n    setRToken(refreshToken) {\n      this.refreshToken = refreshToken;\n      sessionStorage.setItem(\"refreshToken\", refreshToken);\n    },\n    initialize() {\n      const storedUser = sessionStorage.getItem(\"username\");\n      const storedToken = sessionStorage.getItem(\"authToken\");\n      const storedRefreshToken = sessionStorage.getItem(\"refreshToken\");\n      this.user = storedUser;\n      this.token = storedToken;\n      this.refreshToken = storedRefreshToken;\n    },\n    logout() {\n      this.user = null;\n      this.token = null;\n      this.refreshToken = null;\n      sessionStorage.removeItem(\"username\");\n      sessionStorage.removeItem(\"authToken\");\n      sessionStorage.removeItem(\"refreshToken\");\n    }\n  },\n  getters: {\n    isAuthenticated: (state) => !!state.user\n  }\n});\n",
      "start": 1716330188661,
      "end": 1716330188661,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClxd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxhD,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1716330188661,
      "end": 1716330188661,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716330188661,
      "end": 1716330188661,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1716330188661,
      "end": 1716330188661,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1716330188661,
      "end": 1716330188661,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716330188661,
      "end": 1716330188661,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716330188661,
      "end": 1716330188661,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716330188661,
      "end": 1716330188661,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716330188661,
      "end": 1716330188661,
      "order": "normal"
    }
  ]
}
