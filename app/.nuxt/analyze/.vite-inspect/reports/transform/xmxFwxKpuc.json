{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/node_modules/@apollo/client/link/http/rewriteURIForGET.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { serializeFetchParameter } from \"./serializeFetchParameter.js\";\n// For GET operations, returns the given URI rewritten with parameters, or a\n// parse error.\nexport function rewriteURIForGET(chosenURI, body) {\n    // Implement the standard HTTP GET serialization, plus 'extensions'. Note\n    // the extra level of JSON serialization!\n    var queryParams = [];\n    var addQueryParam = function (key, value) {\n        queryParams.push(\"\".concat(key, \"=\").concat(encodeURIComponent(value)));\n    };\n    if (\"query\" in body) {\n        addQueryParam(\"query\", body.query);\n    }\n    if (body.operationName) {\n        addQueryParam(\"operationName\", body.operationName);\n    }\n    if (body.variables) {\n        var serializedVariables = void 0;\n        try {\n            serializedVariables = serializeFetchParameter(body.variables, \"Variables map\");\n        }\n        catch (parseError) {\n            return { parseError: parseError };\n        }\n        addQueryParam(\"variables\", serializedVariables);\n    }\n    if (body.extensions) {\n        var serializedExtensions = void 0;\n        try {\n            serializedExtensions = serializeFetchParameter(body.extensions, \"Extensions map\");\n        }\n        catch (parseError) {\n            return { parseError: parseError };\n        }\n        addQueryParam(\"extensions\", serializedExtensions);\n    }\n    // Reconstruct the URI with added query params.\n    // XXX This assumes that the URI is well-formed and that it doesn't\n    //     already contain any of these query params. We could instead use the\n    //     URL API and take a polyfill (whatwg-url@6) for older browsers that\n    //     don't support URLSearchParams. Note that some browsers (and\n    //     versions of whatwg-url) support URL but not URLSearchParams!\n    var fragment = \"\", preFragment = chosenURI;\n    var fragmentStart = chosenURI.indexOf(\"#\");\n    if (fragmentStart !== -1) {\n        fragment = chosenURI.substr(fragmentStart);\n        preFragment = chosenURI.substr(0, fragmentStart);\n    }\n    var queryParamsPrefix = preFragment.indexOf(\"?\") === -1 ? \"?\" : \"&\";\n    var newURI = preFragment + queryParamsPrefix + queryParams.join(\"&\") + fragment;\n    return { newURI: newURI };\n}\n//# sourceMappingURL=rewriteURIForGET.js.map",
      "start": 1716304639843,
      "end": 1716304639856,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716304639856,
      "end": 1716304639856,
      "order": "normal"
    }
  ]
}
