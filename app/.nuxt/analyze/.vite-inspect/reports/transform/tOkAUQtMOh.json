{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/components/awesome/Cardstest.vue?nuxt_component=async&nuxt_component_name=AwesomeCardstest",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n  <swiper\n    :effect=\"'cards'\"\n    :grabCursor=\"true\"\n    :modules=\"modules\"\n    :loop=\"true\"\n    class=\"mySwiper\"\n  >\n    <swiper-slide\n      v-for=\"(product, index) in products\"\n      :key=\"index\"\n      :style=\"{\n        'background-image': `url(${product.img})`,\n      }\"\n    >\n      <div class=\"bg-transparent\">\n        <img\n          :src=\"product.img ? product.img : ''\"\n          alt=\"Product Image\"\n          class=\"bg-transparent transition-all ease-in-out\"\n        />\n      </div>\n    </swiper-slide>\n  </swiper>\n</template>\n\n<script>\nimport { ref, onMounted } from \"vue\";\nimport gql from \"graphql-tag\";\nconst selectedProductId = ref(0);\nimport { Swiper, SwiperSlide } from \"swiper/vue\";\nimport \"swiper/css\";\nimport \"swiper/css/effect-cards\";\nimport { EffectCards } from \"swiper/modules\";\nexport default {\n  components: {\n    Swiper,\n    SwiperSlide,\n  },\n\n  setup() {\n    const products = ref([]);\n    const fetchData = async () => {\n      const query = gql`\n        query MyQuery {\n          products(where: { category: \"cases\" }) {\n            edges {\n              node {\n                image {\n                  link\n                }\n                name\n                id\n                databaseId\n              }\n            }\n          }\n        }\n      `;\n      const data = useQuery(query);\n      console.log(data.result, \"hi here is dfata\");\n      if (data) {\n        products.value = data.result._value.products.edges.map((edges) => ({\n          name: edges.node.name,\n          img: edges.node.image.link,\n        }));\n        console.log(products.value, \"hi here is object\");\n      }\n    };\n    onMounted(() => {\n      fetchData();\n    });\n    return {\n      modules: [EffectCards],\n      products,\n    };\n  },\n};\n</script>\n\n<style scoped>\n.img {\n  background-color: none;\n}\n\n.swiper {\n  width: 240px;\n  height: 320px;\n  background: none !important;\n}\n.swiper-slide-shadow {\n  background: none;\n}\n.swiper-3d .swiper-slide-shadow {\n  background: none !;\n}\n\n.swiper-cards {\n  border: none;\n  background: none;\n}\n.swiper-slide-shadow .swiper-slide-shadow-cards {\n  background: none;\n}\n.swiper-slide {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 22px;\n  font-weight: bold;\n}\n</style>\n",
      "start": 1716330188123,
      "end": 1716330188360,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716330188360,
      "end": 1716330188360,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716330188360,
      "end": 1716330188360,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1716330188360,
      "end": 1716330188360,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716330188360,
      "end": 1716330188360,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716330188360,
      "end": 1716330188360,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716330188360,
      "end": 1716330188360,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716330188360,
      "end": 1716330188360,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716330188360,
      "end": 1716330188360,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "\nimport { ref, onMounted } from \"vue\";\nimport gql from \"graphql-tag\";\nconst selectedProductId = ref(0);\nimport { Swiper, SwiperSlide } from \"swiper/vue\";\nimport \"swiper/css\";\nimport \"swiper/css/effect-cards\";\nimport { EffectCards } from \"swiper/modules\";\nconst _sfc_main = {\n  components: {\n    Swiper,\n    SwiperSlide,\n  },\n\n  setup() {\n    const products = ref([]);\n    const fetchData = async () => {\n      const query = gql`\n        query MyQuery {\n          products(where: { category: \"cases\" }) {\n            edges {\n              node {\n                image {\n                  link\n                }\n                name\n                id\n                databaseId\n              }\n            }\n          }\n        }\n      `;\n      const data = useQuery(query);\n      console.log(data.result, \"hi here is dfata\");\n      if (data) {\n        products.value = data.result._value.products.edges.map((edges) => ({\n          name: edges.node.name,\n          img: edges.node.image.link,\n        }));\n        console.log(products.value, \"hi here is object\");\n      }\n    };\n    onMounted(() => {\n      fetchData();\n    });\n    return {\n      modules: [EffectCards],\n      products,\n    };\n  },\n};\n\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, normalizeStyle as _normalizeStyle, withCtx as _withCtx, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-9f9c5d58\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"bg-transparent\" }\nconst _hoisted_2 = [\"src\"]\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_swiper_slide = _resolveComponent(\"swiper-slide\")\n  const _component_swiper = _resolveComponent(\"swiper\")\n\n  return (_openBlock(), _createBlock(_component_swiper, {\n    effect: 'cards',\n    grabCursor: true,\n    modules: $setup.modules,\n    loop: true,\n    class: \"mySwiper\"\n  }, {\n    default: _withCtx(() => [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.products, (product, index) => {\n        return (_openBlock(), _createBlock(_component_swiper_slide, {\n          key: index,\n          style: _normalizeStyle({\n        'background-image': `url(${product.img})`,\n      })\n        }, {\n          default: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_1, [\n              _createElementVNode(\"img\", {\n                src: product.img ? product.img : '',\n                alt: \"Product Image\",\n                class: \"bg-transparent transition-all ease-in-out\"\n              }, null, 8, _hoisted_2)\n            ])\n          ]),\n          _: 2\n        }, 1032, [\"style\"]))\n      }), 128))\n    ]),\n    _: 1\n  }, 8, [\"modules\"]))\n}\n\nimport \"/Users/shubhamsingh/namma/importedProds/components/awesome/Cardstest.vue?vue&type=style&index=0&scoped=9f9c5d58&lang.css\"\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['render',_sfc_render],['__scopeId',\"data-v-9f9c5d58\"]])",
      "start": 1716330188360,
      "end": 1716330188361,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716330188361,
      "end": 1716330188361,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716330188361,
      "end": 1716330188361,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716330188361,
      "end": 1716330188361,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1716330188361,
      "end": 1716330188361,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1716330188361,
      "end": 1716330188361,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "result": "import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => import(\"/Users/shubhamsingh/namma/importedProds/components/awesome/Cardstest.vue\").then(r => r.default))",
      "start": 1716330188361,
      "end": 1716330188362,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "replace",
      "start": 1716330188362,
      "end": 1716330188362,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716330188362,
      "end": 1716330188362,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716330188362,
      "end": 1716330188362,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716330188362,
      "end": 1716330188362,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716330188362,
      "end": 1716330188362,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716330188362,
      "end": 1716330188362,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716330188362,
      "end": 1716330188362,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716330188362,
      "end": 1716330188362,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716330188362,
      "end": 1716330188362,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716330188362,
      "end": 1716330188362,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716330188362,
      "end": 1716330188362,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716330188362,
      "end": 1716330188362,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716330188362,
      "end": 1716330188362,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716330188362,
      "end": 1716330188362,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1716330188362,
      "end": 1716330188362,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1716330188362,
      "end": 1716330188362,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716330188362,
      "end": 1716330188362,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716330188362,
      "end": 1716330188362,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "result": "import { __vitePreload } from \"\u0000vite/preload-helper.js\";import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => __vitePreload(() => import(\"/Users/shubhamsingh/namma/importedProds/components/awesome/Cardstest.vue\"),__VITE_IS_MODERN__?\"__VITE_PRELOAD__\":void 0,import.meta.url).then(r => r.default))",
      "start": 1716330188362,
      "end": 1716330188362,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:reporter",
      "start": 1716330188362,
      "end": 1716330188362,
      "order": "normal"
    }
  ]
}
