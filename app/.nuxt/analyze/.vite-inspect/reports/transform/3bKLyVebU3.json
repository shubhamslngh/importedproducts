{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/node_modules/optimism/node_modules/@wry/trie/lib/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// A [trie](https://en.wikipedia.org/wiki/Trie) data structure that holds\n// object keys weakly, yet can also hold non-object keys, unlike the\n// native `WeakMap`.\n// If no makeData function is supplied, the looked-up data will be an empty,\n// null-prototype Object.\nconst defaultMakeData = () => Object.create(null);\n// Useful for processing arguments objects as well as arrays.\nconst { forEach, slice } = Array.prototype;\nconst { hasOwnProperty } = Object.prototype;\nexport class Trie {\n    constructor(weakness = true, makeData = defaultMakeData) {\n        this.weakness = weakness;\n        this.makeData = makeData;\n    }\n    lookup(...array) {\n        return this.lookupArray(array);\n    }\n    lookupArray(array) {\n        let node = this;\n        forEach.call(array, key => node = node.getChildTrie(key));\n        return hasOwnProperty.call(node, \"data\")\n            ? node.data\n            : node.data = this.makeData(slice.call(array));\n    }\n    peek(...array) {\n        return this.peekArray(array);\n    }\n    peekArray(array) {\n        let node = this;\n        for (let i = 0, len = array.length; node && i < len; ++i) {\n            const map = this.weakness && isObjRef(array[i]) ? node.weak : node.strong;\n            node = map && map.get(array[i]);\n        }\n        return node && node.data;\n    }\n    getChildTrie(key) {\n        const map = this.weakness && isObjRef(key)\n            ? this.weak || (this.weak = new WeakMap())\n            : this.strong || (this.strong = new Map());\n        let child = map.get(key);\n        if (!child)\n            map.set(key, child = new Trie(this.weakness, this.makeData));\n        return child;\n    }\n}\nfunction isObjRef(value) {\n    switch (typeof value) {\n        case \"object\":\n            if (value === null)\n                break;\n        // Fall through to return true...\n        case \"function\":\n            return true;\n    }\n    return false;\n}\n//# sourceMappingURL=index.js.map",
      "start": 1712968594896,
      "end": 1712968594920,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1712968594921,
      "end": 1712968594921,
      "order": "normal"
    }
  ]
}
