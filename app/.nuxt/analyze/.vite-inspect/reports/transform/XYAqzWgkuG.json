{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/components/awesome/Login.vue?nuxt_component=async&nuxt_component_name=AwesomeLogin",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n  <div class=\"login-container\">\n    <form @submit.prevent=\"handleSubmit\" class=\"login-form\">\n      <div class=\"form-group\">\n        <input\n          type=\"text\"\n          v-model=\"username\"\n          placeholder=\"Username or Email\"\n          autocomplete=\"email\"\n          class=\"form-control\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <input\n          type=\"password\"\n          v-model=\"password\"\n          autocomplete=\"current-password\"\n          placeholder=\"Password\"\n          class=\"form-control\"\n        />\n      </div>\n\n      <div class=\"grid gap-4\">\n        <button type=\"submit\" :disabled=\"isLoading\" class=\"btn btn-primary\">\n          Sign in\n        </button>\n        <button type=\"signup\" :disabled=\"isLoading\" class=\"btn btn-primary\">\n          Sign Up\n        </button>\n        \n        <div v-if=\"errors\" class=\"error-message\">{{ errors }}</div>\n        <!-- <AwesomeSignup/> -->\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { useAuthStore } from \"../../stores/auth\";\n\nexport default {\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      isLoading: false,\n      errors: null,\n    };\n  },\n\n  methods: {\n    async handleSubmit() {\n      this.isLoading = true;\n      try {\n        const { data } = await this.$apollo.mutate({\n          mutation: gql`\n            mutation Login($input: LoginInput!) {\n              login(input: $input) {\n                authToken\n                refreshToken\n                user {\n                  id\n                  username\n                  email\n                }\n              }\n            }\n          `,\n          variables: {\n            input: {\n              provider: \"PASSWORD\",\n              credentials: {\n                username: this.username,\n                password: this.password,\n              },\n            },\n          },\n        });\n        const authStore = useAuthStore();\n\n        const { authToken, refreshToken, user } = data.login;\n        localStorage.setItem(\"authToken\", authToken);\n        localStorage.setItem(\"refreshToken\", refreshToken);\n        authStore.setUser(user.username);\n        authStore.setToken(authToken);\n        authStore.setRToken(refreshToken);\n        console.log(\"Auth Token:\", authToken);\n        console.log(\"Refresh Token:\", refreshToken);\n        console.log(user.username, \"user\");\n        await this.$router.push(\"/cart\");\n      } catch (error) {\n        console.error(\"Login failed:\", error.message);\n        this.errors = error.message;\n      } finally {\n        this.isLoading = false;\n      }\n    },\n  },\n};\n</script>\n\n<style >\n.login-container {\n  max-width: 400px;\n  margin: auto;\n  padding: 20px;\n  border: 1px solid rgb(0, 0, 0);\n  border-radius: 5px;\n  background-color: #000000;\n  color: #ff0000;\n}\n\n.login-form {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-group {\n  margin-bottom: 20px;\n}\n\n.form-control {\n  width: 100%;\n  padding: 10px;\n  font-size: 16px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n}\n\n.btn {\n  padding: 10px 20px;\n  font-size: 16px;\n  background-color: #4285f4;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.btn:disabled {\n  background-color: #ccc;\n  cursor: not-allowed;\n}\n\n.error-message {\n  margin-top: 10px;\n  color: #d50000;\n  font-size: 14px;\n}\n</style>\n",
      "start": 1713269985353,
      "end": 1713269985394,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1713269985394,
      "end": 1713269985394,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1713269985394,
      "end": 1713269985394,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1713269985394,
      "end": 1713269985394,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1713269985394,
      "end": 1713269985394,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1713269985394,
      "end": 1713269985394,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1713269985394,
      "end": 1713269985394,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1713269985394,
      "end": 1713269985394,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1713269985394,
      "end": 1713269985394,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "\nimport { useAuthStore } from \"../../stores/auth\";\n\nconst _sfc_main = {\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      isLoading: false,\n      errors: null,\n    };\n  },\n\n  methods: {\n    async handleSubmit() {\n      this.isLoading = true;\n      try {\n        const { data } = await this.$apollo.mutate({\n          mutation: gql`\n            mutation Login($input: LoginInput!) {\n              login(input: $input) {\n                authToken\n                refreshToken\n                user {\n                  id\n                  username\n                  email\n                }\n              }\n            }\n          `,\n          variables: {\n            input: {\n              provider: \"PASSWORD\",\n              credentials: {\n                username: this.username,\n                password: this.password,\n              },\n            },\n          },\n        });\n        const authStore = useAuthStore();\n\n        const { authToken, refreshToken, user } = data.login;\n        localStorage.setItem(\"authToken\", authToken);\n        localStorage.setItem(\"refreshToken\", refreshToken);\n        authStore.setUser(user.username);\n        authStore.setToken(authToken);\n        authStore.setRToken(refreshToken);\n        console.log(\"Auth Token:\", authToken);\n        console.log(\"Refresh Token:\", refreshToken);\n        console.log(user.username, \"user\");\n        await this.$router.push(\"/cart\");\n      } catch (error) {\n        console.error(\"Login failed:\", error.message);\n        this.errors = error.message;\n      } finally {\n        this.isLoading = false;\n      }\n    },\n  },\n};\n\nimport { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\"\n\nconst _hoisted_1 = { class: \"login-container\" }\nconst _hoisted_2 = { class: \"form-group\" }\nconst _hoisted_3 = { class: \"form-group\" }\nconst _hoisted_4 = { class: \"grid gap-4\" }\nconst _hoisted_5 = [\"disabled\"]\nconst _hoisted_6 = [\"disabled\"]\nconst _hoisted_7 = {\n  key: 0,\n  class: \"error-message\"\n}\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"form\", {\n      onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => ($options.handleSubmit && $options.handleSubmit(...args)), [\"prevent\"])),\n      class: \"login-form\"\n    }, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => (($data.username) = $event)),\n          placeholder: \"Username or Email\",\n          autocomplete: \"email\",\n          class: \"form-control\"\n        }, null, 512), [\n          [_vModelText, $data.username]\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"password\",\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => (($data.password) = $event)),\n          autocomplete: \"current-password\",\n          placeholder: \"Password\",\n          class: \"form-control\"\n        }, null, 512), [\n          [_vModelText, $data.password]\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_4, [\n        _createElementVNode(\"button\", {\n          type: \"submit\",\n          disabled: $data.isLoading,\n          class: \"btn btn-primary\"\n        }, \" Sign in \", 8, _hoisted_5),\n        _createElementVNode(\"button\", {\n          type: \"signup\",\n          disabled: $data.isLoading,\n          class: \"btn btn-primary\"\n        }, \" Sign Up \", 8, _hoisted_6),\n        ($data.errors)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _toDisplayString($data.errors), 1))\n          : _createCommentVNode(\"\", true)\n      ])\n    ], 32)\n  ]))\n}\n\nimport \"/Users/shubhamsingh/namma/importedProds/components/awesome/Login.vue?vue&type=style&index=0&lang.css\"\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['render',_sfc_render]])",
      "start": 1713269985394,
      "end": 1713269985395,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1713269985395,
      "end": 1713269985395,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713269985395,
      "end": 1713269985395,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1713269985395,
      "end": 1713269985395,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1713269985395,
      "end": 1713269985395,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1713269985395,
      "end": 1713269985395,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "result": "import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => import(\"/Users/shubhamsingh/namma/importedProds/components/awesome/Login.vue\").then(r => r.default))",
      "start": 1713269985395,
      "end": 1713269985395,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "replace",
      "start": 1713269985395,
      "end": 1713269985395,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1713269985395,
      "end": 1713269985395,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1713269985395,
      "end": 1713269985395,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1713269985395,
      "end": 1713269985395,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1713269985395,
      "end": 1713269985395,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1713269985395,
      "end": 1713269985395,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1713269985395,
      "end": 1713269985395,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1713269985395,
      "end": 1713269985395,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1713269985395,
      "end": 1713269985395,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1713269985395,
      "end": 1713269985395,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1713269985395,
      "end": 1713269985395,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1713269985395,
      "end": 1713269985395,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1713269985395,
      "end": 1713269985395,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1713269985395,
      "end": 1713269985395,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1713269985395,
      "end": 1713269985395,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1713269985395,
      "end": 1713269985395,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1713269985395,
      "end": 1713269985395,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1713269985395,
      "end": 1713269985395,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "result": "import { __vitePreload } from \"\u0000vite/preload-helper.js\";import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => __vitePreload(() => import(\"/Users/shubhamsingh/namma/importedProds/components/awesome/Login.vue\"),__VITE_IS_MODERN__?\"__VITE_PRELOAD__\":void 0,import.meta.url).then(r => r.default))",
      "start": 1713269985395,
      "end": 1713269985395,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:reporter",
      "start": 1713269985395,
      "end": 1713269985395,
      "order": "normal"
    }
  ]
}
