{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/node_modules/graphql/validation/rules/ProvidedRequiredArgumentsRule.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport inspect from \"../../jsutils/inspect.mjs\";\nimport keyMap from \"../../jsutils/keyMap.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\nimport { print } from \"../../language/printer.mjs\";\nimport { specifiedDirectives } from \"../../type/directives.mjs\";\nimport { isType, isRequiredArgument } from \"../../type/definition.mjs\";\n\n/**\n * Provided required arguments\n *\n * A field or directive is only valid if all required (non-null without a\n * default value) field arguments have been provided.\n */\nexport function ProvidedRequiredArgumentsRule(context) {\n  return _objectSpread(_objectSpread({}, ProvidedRequiredArgumentsOnDirectivesRule(context)), {}, {\n    Field: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave: function leave(fieldNode) {\n        var _fieldNode$arguments;\n\n        var fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          return false;\n        } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n\n\n        var argNodes = (_fieldNode$arguments = fieldNode.arguments) !== null && _fieldNode$arguments !== void 0 ? _fieldNode$arguments : [];\n        var argNodeMap = keyMap(argNodes, function (arg) {\n          return arg.name.value;\n        });\n\n        for (var _i2 = 0, _fieldDef$args2 = fieldDef.args; _i2 < _fieldDef$args2.length; _i2++) {\n          var argDef = _fieldDef$args2[_i2];\n          var argNode = argNodeMap[argDef.name];\n\n          if (!argNode && isRequiredArgument(argDef)) {\n            var argTypeStr = inspect(argDef.type);\n            context.reportError(new GraphQLError(\"Field \\\"\".concat(fieldDef.name, \"\\\" argument \\\"\").concat(argDef.name, \"\\\" of type \\\"\").concat(argTypeStr, \"\\\" is required, but it was not provided.\"), fieldNode));\n          }\n        }\n      }\n    }\n  });\n}\n/**\n * @internal\n */\n\nexport function ProvidedRequiredArgumentsOnDirectivesRule(context) {\n  var requiredArgsMap = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n\n  for (var _i4 = 0; _i4 < definedDirectives.length; _i4++) {\n    var directive = definedDirectives[_i4];\n    requiredArgsMap[directive.name] = keyMap(directive.args.filter(isRequiredArgument), function (arg) {\n      return arg.name;\n    });\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i6 = 0; _i6 < astDefinitions.length; _i6++) {\n    var def = astDefinitions[_i6];\n\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n      var argNodes = (_def$arguments = def.arguments) !== null && _def$arguments !== void 0 ? _def$arguments : [];\n      requiredArgsMap[def.name.value] = keyMap(argNodes.filter(isRequiredArgumentNode), function (arg) {\n        return arg.name.value;\n      });\n    }\n  }\n\n  return {\n    Directive: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave: function leave(directiveNode) {\n        var directiveName = directiveNode.name.value;\n        var requiredArgs = requiredArgsMap[directiveName];\n\n        if (requiredArgs) {\n          var _directiveNode$argume;\n\n          // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n          var _argNodes = (_directiveNode$argume = directiveNode.arguments) !== null && _directiveNode$argume !== void 0 ? _directiveNode$argume : [];\n\n          var argNodeMap = keyMap(_argNodes, function (arg) {\n            return arg.name.value;\n          });\n\n          for (var _i8 = 0, _Object$keys2 = Object.keys(requiredArgs); _i8 < _Object$keys2.length; _i8++) {\n            var argName = _Object$keys2[_i8];\n\n            if (!argNodeMap[argName]) {\n              var argType = requiredArgs[argName].type;\n              var argTypeStr = isType(argType) ? inspect(argType) : print(argType);\n              context.reportError(new GraphQLError(\"Directive \\\"@\".concat(directiveName, \"\\\" argument \\\"\").concat(argName, \"\\\" of type \\\"\").concat(argTypeStr, \"\\\" is required, but it was not provided.\"), directiveNode));\n            }\n          }\n        }\n      }\n    }\n  };\n}\n\nfunction isRequiredArgumentNode(arg) {\n  return arg.type.kind === Kind.NON_NULL_TYPE && arg.defaultValue == null;\n}\n",
      "start": 1746507067858,
      "end": 1746507067885,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1746507067885,
      "end": 1746507067885,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1746507067885,
      "end": 1746507067886,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1746507067886,
      "end": 1746507067886,
      "order": "normal"
    }
  ]
}
