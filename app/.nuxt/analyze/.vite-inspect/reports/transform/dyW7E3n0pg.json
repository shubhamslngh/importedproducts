{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/node_modules/@apollo/client/utilities/graphql/getFromAST.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { invariant, newInvariantError } from \"../globals/index.js\";\nimport { valueToObjectRepresentation } from \"./storeUtils.js\";\n// Checks the document for errors and throws an exception if there is an error.\nexport function checkDocument(doc) {\n    invariant(doc && doc.kind === \"Document\", 74);\n    var operations = doc.definitions\n        .filter(function (d) { return d.kind !== \"FragmentDefinition\"; })\n        .map(function (definition) {\n        if (definition.kind !== \"OperationDefinition\") {\n            throw newInvariantError(75, definition.kind);\n        }\n        return definition;\n    });\n    invariant(operations.length <= 1, 76, operations.length);\n    return doc;\n}\nexport function getOperationDefinition(doc) {\n    checkDocument(doc);\n    return doc.definitions.filter(function (definition) {\n        return definition.kind === \"OperationDefinition\";\n    })[0];\n}\nexport function getOperationName(doc) {\n    return (doc.definitions\n        .filter(function (definition) {\n        return definition.kind === \"OperationDefinition\" && !!definition.name;\n    })\n        .map(function (x) { return x.name.value; })[0] || null);\n}\n// Returns the FragmentDefinitions from a particular document as an array\nexport function getFragmentDefinitions(doc) {\n    return doc.definitions.filter(function (definition) {\n        return definition.kind === \"FragmentDefinition\";\n    });\n}\nexport function getQueryDefinition(doc) {\n    var queryDef = getOperationDefinition(doc);\n    invariant(queryDef && queryDef.operation === \"query\", 77);\n    return queryDef;\n}\nexport function getFragmentDefinition(doc) {\n    invariant(doc.kind === \"Document\", 78);\n    invariant(doc.definitions.length <= 1, 79);\n    var fragmentDef = doc.definitions[0];\n    invariant(fragmentDef.kind === \"FragmentDefinition\", 80);\n    return fragmentDef;\n}\n/**\n * Returns the first operation definition found in this document.\n * If no operation definition is found, the first fragment definition will be returned.\n * If no definitions are found, an error will be thrown.\n */\nexport function getMainDefinition(queryDoc) {\n    checkDocument(queryDoc);\n    var fragmentDefinition;\n    for (var _i = 0, _a = queryDoc.definitions; _i < _a.length; _i++) {\n        var definition = _a[_i];\n        if (definition.kind === \"OperationDefinition\") {\n            var operation = definition.operation;\n            if (operation === \"query\" ||\n                operation === \"mutation\" ||\n                operation === \"subscription\") {\n                return definition;\n            }\n        }\n        if (definition.kind === \"FragmentDefinition\" && !fragmentDefinition) {\n            // we do this because we want to allow multiple fragment definitions\n            // to precede an operation definition.\n            fragmentDefinition = definition;\n        }\n    }\n    if (fragmentDefinition) {\n        return fragmentDefinition;\n    }\n    throw newInvariantError(81);\n}\nexport function getDefaultValues(definition) {\n    var defaultValues = Object.create(null);\n    var defs = definition && definition.variableDefinitions;\n    if (defs && defs.length) {\n        defs.forEach(function (def) {\n            if (def.defaultValue) {\n                valueToObjectRepresentation(defaultValues, def.variable.name, def.defaultValue);\n            }\n        });\n    }\n    return defaultValues;\n}\n//# sourceMappingURL=getFromAST.js.map",
      "start": 1713269985608,
      "end": 1713269985622,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1713269985622,
      "end": 1713269985622,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1713269985622,
      "end": 1713269985622,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1713269985623,
      "end": 1713269985623,
      "order": "normal"
    }
  ]
}
