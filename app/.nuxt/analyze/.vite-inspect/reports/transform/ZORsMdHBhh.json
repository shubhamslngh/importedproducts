{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/node_modules/@apollo/client/utilities/caching/getMemoryInternals.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { __assign, __spreadArray } from \"tslib\";\nimport { cacheSizes } from \"./sizes.js\";\nvar globalCaches = {};\nexport function registerGlobalCache(name, getSize) {\n    globalCaches[name] = getSize;\n}\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport var getApolloClientMemoryInternals = globalThis.__DEV__ !== false ?\n    _getApolloClientMemoryInternals\n    : undefined;\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport var getInMemoryCacheMemoryInternals = globalThis.__DEV__ !== false ?\n    _getInMemoryCacheMemoryInternals\n    : undefined;\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport var getApolloCacheMemoryInternals = globalThis.__DEV__ !== false ?\n    _getApolloCacheMemoryInternals\n    : undefined;\nfunction getCurrentCacheSizes() {\n    // `defaultCacheSizes` is a `const enum` that will be inlined during build, so we have to reconstruct it's shape here\n    var defaults = {\n        parser: 1000 /* defaultCacheSizes[\"parser\"] */,\n        canonicalStringify: 1000 /* defaultCacheSizes[\"canonicalStringify\"] */,\n        print: 2000 /* defaultCacheSizes[\"print\"] */,\n        \"documentTransform.cache\": 2000 /* defaultCacheSizes[\"documentTransform.cache\"] */,\n        \"queryManager.getDocumentInfo\": 2000 /* defaultCacheSizes[\"queryManager.getDocumentInfo\"] */,\n        \"PersistedQueryLink.persistedQueryHashes\": 2000 /* defaultCacheSizes[\"PersistedQueryLink.persistedQueryHashes\"] */,\n        \"fragmentRegistry.transform\": 2000 /* defaultCacheSizes[\"fragmentRegistry.transform\"] */,\n        \"fragmentRegistry.lookup\": 1000 /* defaultCacheSizes[\"fragmentRegistry.lookup\"] */,\n        \"fragmentRegistry.findFragmentSpreads\": 4000 /* defaultCacheSizes[\"fragmentRegistry.findFragmentSpreads\"] */,\n        \"cache.fragmentQueryDocuments\": 1000 /* defaultCacheSizes[\"cache.fragmentQueryDocuments\"] */,\n        \"removeTypenameFromVariables.getVariableDefinitions\": 2000 /* defaultCacheSizes[\"removeTypenameFromVariables.getVariableDefinitions\"] */,\n        \"inMemoryCache.maybeBroadcastWatch\": 5000 /* defaultCacheSizes[\"inMemoryCache.maybeBroadcastWatch\"] */,\n        \"inMemoryCache.executeSelectionSet\": 50000 /* defaultCacheSizes[\"inMemoryCache.executeSelectionSet\"] */,\n        \"inMemoryCache.executeSubSelectedArray\": 10000 /* defaultCacheSizes[\"inMemoryCache.executeSubSelectedArray\"] */,\n    };\n    return Object.fromEntries(Object.entries(defaults).map(function (_a) {\n        var k = _a[0], v = _a[1];\n        return [\n            k,\n            cacheSizes[k] || v,\n        ];\n    }));\n}\nfunction _getApolloClientMemoryInternals() {\n    var _a, _b, _c, _d, _e;\n    if (!(globalThis.__DEV__ !== false))\n        throw new Error(\"only supported in development mode\");\n    return {\n        limits: getCurrentCacheSizes(),\n        sizes: __assign({ print: (_a = globalCaches.print) === null || _a === void 0 ? void 0 : _a.call(globalCaches), parser: (_b = globalCaches.parser) === null || _b === void 0 ? void 0 : _b.call(globalCaches), canonicalStringify: (_c = globalCaches.canonicalStringify) === null || _c === void 0 ? void 0 : _c.call(globalCaches), links: linkInfo(this.link), queryManager: {\n                getDocumentInfo: this[\"queryManager\"][\"transformCache\"].size,\n                documentTransforms: transformInfo(this[\"queryManager\"].documentTransform),\n            } }, (_e = (_d = this.cache).getMemoryInternals) === null || _e === void 0 ? void 0 : _e.call(_d)),\n    };\n}\nfunction _getApolloCacheMemoryInternals() {\n    return {\n        cache: {\n            fragmentQueryDocuments: getWrapperInformation(this[\"getFragmentDoc\"]),\n        },\n    };\n}\nfunction _getInMemoryCacheMemoryInternals() {\n    var fragments = this.config.fragments;\n    return __assign(__assign({}, _getApolloCacheMemoryInternals.apply(this)), { addTypenameDocumentTransform: transformInfo(this[\"addTypenameTransform\"]), inMemoryCache: {\n            executeSelectionSet: getWrapperInformation(this[\"storeReader\"][\"executeSelectionSet\"]),\n            executeSubSelectedArray: getWrapperInformation(this[\"storeReader\"][\"executeSubSelectedArray\"]),\n            maybeBroadcastWatch: getWrapperInformation(this[\"maybeBroadcastWatch\"]),\n        }, fragmentRegistry: {\n            findFragmentSpreads: getWrapperInformation(fragments === null || fragments === void 0 ? void 0 : fragments.findFragmentSpreads),\n            lookup: getWrapperInformation(fragments === null || fragments === void 0 ? void 0 : fragments.lookup),\n            transform: getWrapperInformation(fragments === null || fragments === void 0 ? void 0 : fragments.transform),\n        } });\n}\nfunction isWrapper(f) {\n    return !!f && \"dirtyKey\" in f;\n}\nfunction getWrapperInformation(f) {\n    return isWrapper(f) ? f.size : undefined;\n}\nfunction isDefined(value) {\n    return value != null;\n}\nfunction transformInfo(transform) {\n    return recurseTransformInfo(transform).map(function (cache) { return ({ cache: cache }); });\n}\nfunction recurseTransformInfo(transform) {\n    return transform ?\n        __spreadArray(__spreadArray([\n            getWrapperInformation(transform === null || transform === void 0 ? void 0 : transform[\"performWork\"])\n        ], recurseTransformInfo(transform === null || transform === void 0 ? void 0 : transform[\"left\"]), true), recurseTransformInfo(transform === null || transform === void 0 ? void 0 : transform[\"right\"]), true).filter(isDefined)\n        : [];\n}\nfunction linkInfo(link) {\n    var _a;\n    return link ?\n        __spreadArray(__spreadArray([\n            (_a = link === null || link === void 0 ? void 0 : link.getMemoryInternals) === null || _a === void 0 ? void 0 : _a.call(link)\n        ], linkInfo(link === null || link === void 0 ? void 0 : link.left), true), linkInfo(link === null || link === void 0 ? void 0 : link.right), true).filter(isDefined)\n        : [];\n}\n//# sourceMappingURL=getMemoryInternals.js.map",
      "start": 1713304784137,
      "end": 1713304784151,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1713304784151,
      "end": 1713304784151,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1713304784151,
      "end": 1713304784151,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1713304784151,
      "end": 1713304784151,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1713304784151,
      "end": 1713304784151,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1713304784151,
      "end": 1713304784151,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1713304784151,
      "end": 1713304784151,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1713304784151,
      "end": 1713304784151,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1713304784151,
      "end": 1713304784151,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1713304784151,
      "end": 1713304784151,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1713304784151,
      "end": 1713304784151,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713304784151,
      "end": 1713304784151,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1713304784151,
      "end": 1713304784151,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1713304784151,
      "end": 1713304784151,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1713304784151,
      "end": 1713304784151,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1713304784151,
      "end": 1713304784151,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713304784151,
      "end": 1713304784151,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1713304784151,
      "end": 1713304784151,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { __assign, __spreadArray } from \"tslib\";\nimport { cacheSizes } from \"./sizes.js\";\nvar globalCaches = {};\nexport function registerGlobalCache(name, getSize) {\n  globalCaches[name] = getSize;\n}\nexport var getApolloClientMemoryInternals = globalThis.__DEV__ !== false ? _getApolloClientMemoryInternals : void 0;\nexport var getInMemoryCacheMemoryInternals = globalThis.__DEV__ !== false ? _getInMemoryCacheMemoryInternals : void 0;\nexport var getApolloCacheMemoryInternals = globalThis.__DEV__ !== false ? _getApolloCacheMemoryInternals : void 0;\nfunction getCurrentCacheSizes() {\n  var defaults = {\n    parser: 1e3,\n    canonicalStringify: 1e3,\n    print: 2e3,\n    \"documentTransform.cache\": 2e3,\n    \"queryManager.getDocumentInfo\": 2e3,\n    \"PersistedQueryLink.persistedQueryHashes\": 2e3,\n    \"fragmentRegistry.transform\": 2e3,\n    \"fragmentRegistry.lookup\": 1e3,\n    \"fragmentRegistry.findFragmentSpreads\": 4e3,\n    \"cache.fragmentQueryDocuments\": 1e3,\n    \"removeTypenameFromVariables.getVariableDefinitions\": 2e3,\n    \"inMemoryCache.maybeBroadcastWatch\": 5e3,\n    \"inMemoryCache.executeSelectionSet\": 5e4,\n    \"inMemoryCache.executeSubSelectedArray\": 1e4\n  };\n  return Object.fromEntries(Object.entries(defaults).map(function(_a) {\n    var k = _a[0], v = _a[1];\n    return [\n      k,\n      cacheSizes[k] || v\n    ];\n  }));\n}\nfunction _getApolloClientMemoryInternals() {\n  var _a, _b, _c, _d, _e;\n  if (!(globalThis.__DEV__ !== false))\n    throw new Error(\"only supported in development mode\");\n  return {\n    limits: getCurrentCacheSizes(),\n    sizes: __assign({ print: (_a = globalCaches.print) === null || _a === void 0 ? void 0 : _a.call(globalCaches), parser: (_b = globalCaches.parser) === null || _b === void 0 ? void 0 : _b.call(globalCaches), canonicalStringify: (_c = globalCaches.canonicalStringify) === null || _c === void 0 ? void 0 : _c.call(globalCaches), links: linkInfo(this.link), queryManager: {\n      getDocumentInfo: this[\"queryManager\"][\"transformCache\"].size,\n      documentTransforms: transformInfo(this[\"queryManager\"].documentTransform)\n    } }, (_e = (_d = this.cache).getMemoryInternals) === null || _e === void 0 ? void 0 : _e.call(_d))\n  };\n}\nfunction _getApolloCacheMemoryInternals() {\n  return {\n    cache: {\n      fragmentQueryDocuments: getWrapperInformation(this[\"getFragmentDoc\"])\n    }\n  };\n}\nfunction _getInMemoryCacheMemoryInternals() {\n  var fragments = this.config.fragments;\n  return __assign(__assign({}, _getApolloCacheMemoryInternals.apply(this)), { addTypenameDocumentTransform: transformInfo(this[\"addTypenameTransform\"]), inMemoryCache: {\n    executeSelectionSet: getWrapperInformation(this[\"storeReader\"][\"executeSelectionSet\"]),\n    executeSubSelectedArray: getWrapperInformation(this[\"storeReader\"][\"executeSubSelectedArray\"]),\n    maybeBroadcastWatch: getWrapperInformation(this[\"maybeBroadcastWatch\"])\n  }, fragmentRegistry: {\n    findFragmentSpreads: getWrapperInformation(fragments === null || fragments === void 0 ? void 0 : fragments.findFragmentSpreads),\n    lookup: getWrapperInformation(fragments === null || fragments === void 0 ? void 0 : fragments.lookup),\n    transform: getWrapperInformation(fragments === null || fragments === void 0 ? void 0 : fragments.transform)\n  } });\n}\nfunction isWrapper(f) {\n  return !!f && \"dirtyKey\" in f;\n}\nfunction getWrapperInformation(f) {\n  return isWrapper(f) ? f.size : void 0;\n}\nfunction isDefined(value) {\n  return value != null;\n}\nfunction transformInfo(transform) {\n  return recurseTransformInfo(transform).map(function(cache) {\n    return { cache };\n  });\n}\nfunction recurseTransformInfo(transform) {\n  return transform ? __spreadArray(__spreadArray([\n    getWrapperInformation(transform === null || transform === void 0 ? void 0 : transform[\"performWork\"])\n  ], recurseTransformInfo(transform === null || transform === void 0 ? void 0 : transform[\"left\"]), true), recurseTransformInfo(transform === null || transform === void 0 ? void 0 : transform[\"right\"]), true).filter(isDefined) : [];\n}\nfunction linkInfo(link) {\n  var _a;\n  return link ? __spreadArray(__spreadArray([\n    (_a = link === null || link === void 0 ? void 0 : link.getMemoryInternals) === null || _a === void 0 ? void 0 : _a.call(link)\n  ], linkInfo(link === null || link === void 0 ? void 0 : link.left), true), linkInfo(link === null || link === void 0 ? void 0 : link.right), true).filter(isDefined) : [];\n}\n",
      "start": 1713304784151,
      "end": 1713304784405,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1713304784405,
      "end": 1713304784405,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1713304784405,
      "end": 1713304784405,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1713304784405,
      "end": 1713304784405,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1713304784405,
      "end": 1713304784405,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1713304784405,
      "end": 1713304784405,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1713304784405,
      "end": 1713304784405,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1713304784405,
      "end": 1713304784405,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1713304784405,
      "end": 1713304784405,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1713304784405,
      "end": 1713304784405,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1713304784405,
      "end": 1713304784405,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1713304784405,
      "end": 1713304784405,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1713304784405,
      "end": 1713304784405,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1713304784405,
      "end": 1713304784405,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1713304784405,
      "end": 1713304784405,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1713304784405,
      "end": 1713304784405,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1713304784405,
      "end": 1713304784405,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1713304784405,
      "end": 1713304784405,
      "order": "normal"
    }
  ]
}
