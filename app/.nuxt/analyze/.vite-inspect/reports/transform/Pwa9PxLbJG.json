{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/node_modules/@nuxtjs/apollo/node_modules/graphql/validation/rules/FragmentsOnCompositeTypesRule.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { print } from '../../language/printer.mjs';\nimport { isCompositeType } from '../../type/definition.mjs';\nimport { typeFromAST } from '../../utilities/typeFromAST.mjs';\n\n/**\n * Fragments on composite type\n *\n * Fragments use a type condition to determine if they apply, since fragments\n * can only be spread into a composite type (object, interface, or union), the\n * type condition must also be a composite type.\n *\n * See https://spec.graphql.org/draft/#sec-Fragments-On-Composite-Types\n */\nexport function FragmentsOnCompositeTypesRule(context) {\n  return {\n    InlineFragment(node) {\n      const typeCondition = node.typeCondition;\n\n      if (typeCondition) {\n        const type = typeFromAST(context.getSchema(), typeCondition);\n\n        if (type && !isCompositeType(type)) {\n          const typeStr = print(typeCondition);\n          context.reportError(\n            new GraphQLError(\n              `Fragment cannot condition on non composite type \"${typeStr}\".`,\n              {\n                nodes: typeCondition,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    FragmentDefinition(node) {\n      const type = typeFromAST(context.getSchema(), node.typeCondition);\n\n      if (type && !isCompositeType(type)) {\n        const typeStr = print(node.typeCondition);\n        context.reportError(\n          new GraphQLError(\n            `Fragment \"${node.name.value}\" cannot condition on non composite type \"${typeStr}\".`,\n            {\n              nodes: node.typeCondition,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n",
      "start": 1712968595092,
      "end": 1712968595114,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1712968595114,
      "end": 1712968595114,
      "order": "normal"
    }
  ]
}
