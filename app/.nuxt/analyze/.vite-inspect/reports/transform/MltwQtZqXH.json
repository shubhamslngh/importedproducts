{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/node_modules/ts-invariant/lib/invariant.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { __extends } from \"tslib\";\nvar genericMessage = \"Invariant Violation\";\nvar _a = Object.setPrototypeOf, setPrototypeOf = _a === void 0 ? function (obj, proto) {\n    obj.__proto__ = proto;\n    return obj;\n} : _a;\nvar InvariantError = /** @class */ (function (_super) {\n    __extends(InvariantError, _super);\n    function InvariantError(message) {\n        if (message === void 0) { message = genericMessage; }\n        var _this = _super.call(this, typeof message === \"number\"\n            ? genericMessage + \": \" + message + \" (see https://github.com/apollographql/invariant-packages)\"\n            : message) || this;\n        _this.framesToPop = 1;\n        _this.name = genericMessage;\n        setPrototypeOf(_this, InvariantError.prototype);\n        return _this;\n    }\n    return InvariantError;\n}(Error));\nexport { InvariantError };\nexport function invariant(condition, message) {\n    if (!condition) {\n        throw new InvariantError(message);\n    }\n}\nvar verbosityLevels = [\"debug\", \"log\", \"warn\", \"error\", \"silent\"];\nvar verbosityLevel = verbosityLevels.indexOf(\"log\");\nfunction wrapConsoleMethod(name) {\n    return function () {\n        if (verbosityLevels.indexOf(name) >= verbosityLevel) {\n            // Default to console.log if this host environment happens not to provide\n            // all the console.* methods we need.\n            var method = console[name] || console.log;\n            return method.apply(console, arguments);\n        }\n    };\n}\n(function (invariant) {\n    invariant.debug = wrapConsoleMethod(\"debug\");\n    invariant.log = wrapConsoleMethod(\"log\");\n    invariant.warn = wrapConsoleMethod(\"warn\");\n    invariant.error = wrapConsoleMethod(\"error\");\n})(invariant || (invariant = {}));\nexport function setVerbosity(level) {\n    var old = verbosityLevels[verbosityLevel];\n    verbosityLevel = Math.max(0, verbosityLevels.indexOf(level));\n    return old;\n}\nexport default invariant;\n//# sourceMappingURL=invariant.js.map",
      "start": 1712968594611,
      "end": 1712968594666,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1712968594666,
      "end": 1712968594666,
      "order": "normal"
    }
  ]
}
