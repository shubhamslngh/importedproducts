{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/node_modules/@nuxt/content/dist/runtime/components/Markdown.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<script>\nimport ContentSlot from \"./ContentSlot.vue\";\nimport { defineComponent, getCurrentInstance, useSlots, computed } from \"#imports\";\nlet showDeprecatedMessage = true;\nexport default defineComponent({\n  name: \"Markdown\",\n  extends: ContentSlot,\n  setup(props) {\n    if (process.dev && showDeprecatedMessage) {\n      console.warn(\"[deprecation] <Markdown> component is deprecated. Please use <ContentSlot> instead.\");\n      showDeprecatedMessage = false;\n    }\n    const { parent } = getCurrentInstance();\n    const { between, default: fallbackSlot } = useSlots();\n    const tags = computed(() => {\n      if (typeof props.unwrap === \"string\") {\n        return props.unwrap.split(\" \");\n      }\n      return [\"*\"];\n    });\n    return {\n      fallbackSlot,\n      tags,\n      between,\n      parent\n    };\n  }\n});\n</script>\n",
      "start": 1746507066694,
      "end": 1746507066745,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1746507066745,
      "end": 1746507066745,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1746507066745,
      "end": 1746507066745,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "result": "<script>\nimport ContentSlot from \"./ContentSlot.vue\";\nimport { defineComponent, getCurrentInstance, useSlots, computed } from \"#imports\";\nlet showDeprecatedMessage = true;\nexport default defineComponent({\n  name: \"Markdown\",\n  extends: ContentSlot,\n  setup(props) {\n    if (process.dev && showDeprecatedMessage) {\n      console.warn(\"[deprecation] <Markdown> component is deprecated. Please use <MDCSlot> instead.\");\n      showDeprecatedMessage = false;\n    }\n    const { parent } = getCurrentInstance();\n    const { between, default: fallbackSlot } = useSlots();\n    const tags = computed(() => {\n      if (typeof props.unwrap === \"string\") {\n        return props.unwrap.split(\" \");\n      }\n      return [\"*\"];\n    });\n    return {\n      fallbackSlot,\n      tags,\n      between,\n      parent\n    };\n  }\n});\n</script>\n",
      "start": 1746507066745,
      "end": 1746507066745,
      "order": "pre",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1746507066745,
      "end": 1746507066745,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1746507066745,
      "end": 1746507066745,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1746507066745,
      "end": 1746507066745,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1746507066745,
      "end": 1746507066745,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1746507066745,
      "end": 1746507066745,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "\nimport ContentSlot from \"./ContentSlot.vue\";\nimport { defineComponent, getCurrentInstance, useSlots, computed } from \"#imports\";\nlet showDeprecatedMessage = true;\nconst _sfc_main = defineComponent({\n  name: \"Markdown\",\n  extends: ContentSlot,\n  setup(props) {\n    if (process.dev && showDeprecatedMessage) {\n      console.warn(\"[deprecation] <Markdown> component is deprecated. Please use <MDCSlot> instead.\");\n      showDeprecatedMessage = false;\n    }\n    const { parent } = getCurrentInstance();\n    const { between, default: fallbackSlot } = useSlots();\n    const tags = computed(() => {\n      if (typeof props.unwrap === \"string\") {\n        return props.unwrap.split(\" \");\n      }\n      return [\"*\"];\n    });\n    return {\n      fallbackSlot,\n      tags,\n      between,\n      parent\n    };\n  }\n});\n\n\n\n\nexport default _sfc_main",
      "start": 1746507066745,
      "end": 1746507066745,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1746507066745,
      "end": 1746507066745,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746507066745,
      "end": 1746507066745,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1746507066745,
      "end": 1746507066745,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1746507066745,
      "end": 1746507066745,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1746507066745,
      "end": 1746507066745,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1746507066745,
      "end": 1746507066745,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746507066745,
      "end": 1746507066745,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1746507066745,
      "end": 1746507066745,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import ContentSlot from \"./ContentSlot.vue\";\nimport { defineComponent, getCurrentInstance, useSlots, computed } from \"#imports\";\nlet showDeprecatedMessage = true;\nconst _sfc_main = defineComponent({\n  name: \"Markdown\",\n  extends: ContentSlot,\n  setup(props) {\n    if (false) {\n      console.warn(\"[deprecation] <Markdown> component is deprecated. Please use <MDCSlot> instead.\");\n      showDeprecatedMessage = false;\n    }\n    const { parent } = getCurrentInstance();\n    const { between, default: fallbackSlot } = useSlots();\n    const tags = computed(() => {\n      if (typeof props.unwrap === \"string\") {\n        return props.unwrap.split(\" \");\n      }\n      return [\"*\"];\n    });\n    return {\n      fallbackSlot,\n      tags,\n      between,\n      parent\n    };\n  }\n});\nexport default _sfc_main;\n",
      "start": 1746507066745,
      "end": 1746507066812,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1746507066812,
      "end": 1746507066812,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1746507066812,
      "end": 1746507066812,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1746507066812,
      "end": 1746507066812,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1746507066812,
      "end": 1746507066812,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1746507066812,
      "end": 1746507066812,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1746507066812,
      "end": 1746507066812,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1746507066812,
      "end": 1746507066812,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1746507066812,
      "end": 1746507066812,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { defineComponent, getCurrentInstance, useSlots, computed } from 'vue';\nimport ContentSlot from \"./ContentSlot.vue\";\nlet showDeprecatedMessage = true;\nconst _sfc_main = defineComponent({\n  name: \"Markdown\",\n  extends: ContentSlot,\n  setup(props) {\n    if (false) {\n      console.warn(\"[deprecation] <Markdown> component is deprecated. Please use <MDCSlot> instead.\");\n      showDeprecatedMessage = false;\n    }\n    const { parent } = getCurrentInstance();\n    const { between, default: fallbackSlot } = useSlots();\n    const tags = computed(() => {\n      if (typeof props.unwrap === \"string\") {\n        return props.unwrap.split(\" \");\n      }\n      return [\"*\"];\n    });\n    return {\n      fallbackSlot,\n      tags,\n      between,\n      parent\n    };\n  }\n});\nexport default _sfc_main;\n",
      "start": 1746507066812,
      "end": 1746507066813,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1746507066813,
      "end": 1746507066813,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1746507066813,
      "end": 1746507066813,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1746507066813,
      "end": 1746507066813,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1746507066813,
      "end": 1746507066813,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1746507066813,
      "end": 1746507066813,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1746507066813,
      "end": 1746507066813,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1746507066813,
      "end": 1746507066813,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1746507066813,
      "end": 1746507066813,
      "order": "normal"
    }
  ]
}
