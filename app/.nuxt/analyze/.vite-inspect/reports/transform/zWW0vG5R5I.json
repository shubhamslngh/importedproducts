{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/node_modules/graphql/validation/rules/UniqueOperationTypesRule.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Unique operation types\n *\n * A GraphQL document is only valid if it has only one type per operation.\n */\nexport function UniqueOperationTypesRule(context) {\n  var schema = context.getSchema();\n  var definedOperationTypes = Object.create(null);\n  var existingOperationTypes = schema ? {\n    query: schema.getQueryType(),\n    mutation: schema.getMutationType(),\n    subscription: schema.getSubscriptionType()\n  } : {};\n  return {\n    SchemaDefinition: checkOperationTypes,\n    SchemaExtension: checkOperationTypes\n  };\n\n  function checkOperationTypes(node) {\n    var _node$operationTypes;\n\n    // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n    var operationTypesNodes = (_node$operationTypes = node.operationTypes) !== null && _node$operationTypes !== void 0 ? _node$operationTypes : [];\n\n    for (var _i2 = 0; _i2 < operationTypesNodes.length; _i2++) {\n      var operationType = operationTypesNodes[_i2];\n      var operation = operationType.operation;\n      var alreadyDefinedOperationType = definedOperationTypes[operation];\n\n      if (existingOperationTypes[operation]) {\n        context.reportError(new GraphQLError(\"Type for \".concat(operation, \" already defined in the schema. It cannot be redefined.\"), operationType));\n      } else if (alreadyDefinedOperationType) {\n        context.reportError(new GraphQLError(\"There can be only one \".concat(operation, \" type in schema.\"), [alreadyDefinedOperationType, operationType]));\n      } else {\n        definedOperationTypes[operation] = operationType;\n      }\n    }\n\n    return false;\n  }\n}\n",
      "start": 1710863481187,
      "end": 1710863481219,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1710863481219,
      "end": 1710863481219,
      "order": "normal"
    }
  ]
}
