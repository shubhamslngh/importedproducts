{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/node_modules/graphql/language/source.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\nimport instanceOf from \"../jsutils/instanceOf.mjs\";\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nexport var Source = /*#__PURE__*/function () {\n  function Source(body) {\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GraphQL request';\n    var locationOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      line: 1,\n      column: 1\n    };\n    typeof body === 'string' || devAssert(0, \"Body must be a string. Received: \".concat(inspect(body), \".\"));\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 || devAssert(0, 'line in locationOffset is 1-indexed and must be positive.');\n    this.locationOffset.column > 0 || devAssert(0, 'column in locationOffset is 1-indexed and must be positive.');\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n\n\n  _createClass(Source, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Source';\n    }\n  }]);\n\n  return Source;\n}();\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\n// eslint-disable-next-line no-redeclare\nexport function isSource(source) {\n  return instanceOf(source, Source);\n}\n",
      "start": 1716330189347,
      "end": 1716330189372,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716330189372,
      "end": 1716330189372,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716330189372,
      "end": 1716330189372,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1716330189372,
      "end": 1716330189372,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716330189372,
      "end": 1716330189372,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716330189372,
      "end": 1716330189372,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716330189372,
      "end": 1716330189372,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716330189372,
      "end": 1716330189372,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716330189372,
      "end": 1716330189372,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1716330189372,
      "end": 1716330189372,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716330189372,
      "end": 1716330189372,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716330189372,
      "end": 1716330189372,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716330189372,
      "end": 1716330189372,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1716330189373,
      "end": 1716330189373,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1716330189373,
      "end": 1716330189373,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716330189373,
      "end": 1716330189373,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716330189373,
      "end": 1716330189373,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716330189373,
      "end": 1716330189373,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716330189373,
      "end": 1716330189373,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716330189373,
      "end": 1716330189373,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716330189373,
      "end": 1716330189373,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716330189373,
      "end": 1716330189373,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716330189373,
      "end": 1716330189373,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716330189373,
      "end": 1716330189373,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716330189373,
      "end": 1716330189373,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716330189373,
      "end": 1716330189373,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716330189373,
      "end": 1716330189373,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716330189373,
      "end": 1716330189373,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716330189373,
      "end": 1716330189373,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716330189373,
      "end": 1716330189373,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1716330189373,
      "end": 1716330189373,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1716330189373,
      "end": 1716330189373,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716330189373,
      "end": 1716330189373,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716330189373,
      "end": 1716330189373,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716330189373,
      "end": 1716330189373,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716330189373,
      "end": 1716330189373,
      "order": "normal"
    }
  ]
}
