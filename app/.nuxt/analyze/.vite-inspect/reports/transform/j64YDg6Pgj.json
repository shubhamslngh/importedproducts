{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/node_modules/graphql/language/ast.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import defineInspect from \"../jsutils/defineInspect.mjs\";\n\n/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport var Location = /*#__PURE__*/function () {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  function Location(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  var _proto = Location.prototype;\n\n  _proto.toJSON = function toJSON() {\n    return {\n      start: this.start,\n      end: this.end\n    };\n  };\n\n  return Location;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Location);\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport var Token = /*#__PURE__*/function () {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  function Token(kind, start, end, line, column, prev, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column;\n    this.value = value;\n    this.prev = prev;\n    this.next = null;\n  }\n\n  var _proto2 = Token.prototype;\n\n  _proto2.toJSON = function toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column\n    };\n  };\n\n  return Token;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Token);\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  return maybeNode != null && typeof maybeNode.kind === 'string';\n}\n/**\n * The list of all possible AST node types.\n */\n",
      "start": 1712968594985,
      "end": 1712968595012,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1712968595012,
      "end": 1712968595012,
      "order": "normal"
    }
  ]
}
