{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/node_modules/@nuxtjs/apollo/node_modules/graphql/validation/index.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "export { validate } from './validate.mjs';\nexport { ValidationContext } from './ValidationContext.mjs';\n// All validation rules in the GraphQL Specification.\nexport { specifiedRules } from './specifiedRules.mjs'; // Spec Section: \"Executable Definitions\"\n\nexport { ExecutableDefinitionsRule } from './rules/ExecutableDefinitionsRule.mjs'; // Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\n\nexport { FieldsOnCorrectTypeRule } from './rules/FieldsOnCorrectTypeRule.mjs'; // Spec Section: \"Fragments on Composite Types\"\n\nexport { FragmentsOnCompositeTypesRule } from './rules/FragmentsOnCompositeTypesRule.mjs'; // Spec Section: \"Argument Names\"\n\nexport { KnownArgumentNamesRule } from './rules/KnownArgumentNamesRule.mjs'; // Spec Section: \"Directives Are Defined\"\n\nexport { KnownDirectivesRule } from './rules/KnownDirectivesRule.mjs'; // Spec Section: \"Fragment spread target defined\"\n\nexport { KnownFragmentNamesRule } from './rules/KnownFragmentNamesRule.mjs'; // Spec Section: \"Fragment Spread Type Existence\"\n\nexport { KnownTypeNamesRule } from './rules/KnownTypeNamesRule.mjs'; // Spec Section: \"Lone Anonymous Operation\"\n\nexport { LoneAnonymousOperationRule } from './rules/LoneAnonymousOperationRule.mjs'; // Spec Section: \"Fragments must not form cycles\"\n\nexport { NoFragmentCyclesRule } from './rules/NoFragmentCyclesRule.mjs'; // Spec Section: \"All Variable Used Defined\"\n\nexport { NoUndefinedVariablesRule } from './rules/NoUndefinedVariablesRule.mjs'; // Spec Section: \"Fragments must be used\"\n\nexport { NoUnusedFragmentsRule } from './rules/NoUnusedFragmentsRule.mjs'; // Spec Section: \"All Variables Used\"\n\nexport { NoUnusedVariablesRule } from './rules/NoUnusedVariablesRule.mjs'; // Spec Section: \"Field Selection Merging\"\n\nexport { OverlappingFieldsCanBeMergedRule } from './rules/OverlappingFieldsCanBeMergedRule.mjs'; // Spec Section: \"Fragment spread is possible\"\n\nexport { PossibleFragmentSpreadsRule } from './rules/PossibleFragmentSpreadsRule.mjs'; // Spec Section: \"Argument Optionality\"\n\nexport { ProvidedRequiredArgumentsRule } from './rules/ProvidedRequiredArgumentsRule.mjs'; // Spec Section: \"Leaf Field Selections\"\n\nexport { ScalarLeafsRule } from './rules/ScalarLeafsRule.mjs'; // Spec Section: \"Subscriptions with Single Root Field\"\n\nexport { SingleFieldSubscriptionsRule } from './rules/SingleFieldSubscriptionsRule.mjs'; // Spec Section: \"Argument Uniqueness\"\n\nexport { UniqueArgumentNamesRule } from './rules/UniqueArgumentNamesRule.mjs'; // Spec Section: \"Directives Are Unique Per Location\"\n\nexport { UniqueDirectivesPerLocationRule } from './rules/UniqueDirectivesPerLocationRule.mjs'; // Spec Section: \"Fragment Name Uniqueness\"\n\nexport { UniqueFragmentNamesRule } from './rules/UniqueFragmentNamesRule.mjs'; // Spec Section: \"Input Object Field Uniqueness\"\n\nexport { UniqueInputFieldNamesRule } from './rules/UniqueInputFieldNamesRule.mjs'; // Spec Section: \"Operation Name Uniqueness\"\n\nexport { UniqueOperationNamesRule } from './rules/UniqueOperationNamesRule.mjs'; // Spec Section: \"Variable Uniqueness\"\n\nexport { UniqueVariableNamesRule } from './rules/UniqueVariableNamesRule.mjs'; // Spec Section: \"Values Type Correctness\"\n\nexport { ValuesOfCorrectTypeRule } from './rules/ValuesOfCorrectTypeRule.mjs'; // Spec Section: \"Variables are Input Types\"\n\nexport { VariablesAreInputTypesRule } from './rules/VariablesAreInputTypesRule.mjs'; // Spec Section: \"All Variable Usages Are Allowed\"\n\nexport { VariablesInAllowedPositionRule } from './rules/VariablesInAllowedPositionRule.mjs'; // SDL-specific validation rules\n\nexport { LoneSchemaDefinitionRule } from './rules/LoneSchemaDefinitionRule.mjs';\nexport { UniqueOperationTypesRule } from './rules/UniqueOperationTypesRule.mjs';\nexport { UniqueTypeNamesRule } from './rules/UniqueTypeNamesRule.mjs';\nexport { UniqueEnumValueNamesRule } from './rules/UniqueEnumValueNamesRule.mjs';\nexport { UniqueFieldDefinitionNamesRule } from './rules/UniqueFieldDefinitionNamesRule.mjs';\nexport { UniqueArgumentDefinitionNamesRule } from './rules/UniqueArgumentDefinitionNamesRule.mjs';\nexport { UniqueDirectiveNamesRule } from './rules/UniqueDirectiveNamesRule.mjs';\nexport { PossibleTypeExtensionsRule } from './rules/PossibleTypeExtensionsRule.mjs'; // Optional rules not defined by the GraphQL Specification\n\nexport { NoDeprecatedCustomRule } from './rules/custom/NoDeprecatedCustomRule.mjs';\nexport { NoSchemaIntrospectionCustomRule } from './rules/custom/NoSchemaIntrospectionCustomRule.mjs';\n",
      "start": 1746507067490,
      "end": 1746507067609,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1746507067610,
      "end": 1746507067610,
      "order": "normal"
    }
  ]
}
