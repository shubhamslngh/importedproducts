{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/node_modules/graphql/subscription/mapAsyncIterator.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { SYMBOL_ASYNC_ITERATOR } from \"../polyfills/symbols.mjs\";\n\n/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nexport default function mapAsyncIterator(iterable, callback, rejectCallback) {\n  // $FlowFixMe[prop-missing]\n  var iteratorMethod = iterable[SYMBOL_ASYNC_ITERATOR];\n  var iterator = iteratorMethod.call(iterable);\n  var $return;\n  var abruptClose;\n\n  if (typeof iterator.return === 'function') {\n    $return = iterator.return;\n\n    abruptClose = function abruptClose(error) {\n      var rethrow = function rethrow() {\n        return Promise.reject(error);\n      };\n\n      return $return.call(iterator).then(rethrow, rethrow);\n    };\n  }\n\n  function mapResult(result) {\n    return result.done ? result : asyncMapValue(result.value, callback).then(iteratorResult, abruptClose);\n  }\n\n  var mapReject;\n\n  if (rejectCallback) {\n    // Capture rejectCallback to ensure it cannot be null.\n    var reject = rejectCallback;\n\n    mapReject = function mapReject(error) {\n      return asyncMapValue(error, reject).then(iteratorResult, abruptClose);\n    };\n  }\n  /* TODO: Flow doesn't support symbols as keys:\n     https://github.com/facebook/flow/issues/3258 */\n\n\n  return _defineProperty({\n    next: function next() {\n      return iterator.next().then(mapResult, mapReject);\n    },\n    return: function _return() {\n      return $return ? $return.call(iterator).then(mapResult, mapReject) : Promise.resolve({\n        value: undefined,\n        done: true\n      });\n    },\n    throw: function _throw(error) {\n      if (typeof iterator.throw === 'function') {\n        return iterator.throw(error).then(mapResult, mapReject);\n      }\n\n      return Promise.reject(error).catch(abruptClose);\n    }\n  }, SYMBOL_ASYNC_ITERATOR, function () {\n    return this;\n  });\n}\n\nfunction asyncMapValue(value, callback) {\n  return new Promise(function (resolve) {\n    return resolve(callback(value));\n  });\n}\n\nfunction iteratorResult(value) {\n  return {\n    value: value,\n    done: false\n  };\n}\n",
      "start": 1716304640236,
      "end": 1716304640246,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716304640246,
      "end": 1716304640246,
      "order": "normal"
    }
  ]
}
