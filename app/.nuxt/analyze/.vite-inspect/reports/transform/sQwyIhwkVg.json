{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/node_modules/graphql/utilities/getIntrospectionQuery.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport function getIntrospectionQuery(options) {\n  var optionsWithDefault = _objectSpread({\n    descriptions: true,\n    specifiedByUrl: false,\n    directiveIsRepeatable: false,\n    schemaDescription: false,\n    inputValueDeprecation: false\n  }, options);\n\n  var descriptions = optionsWithDefault.descriptions ? 'description' : '';\n  var specifiedByUrl = optionsWithDefault.specifiedByUrl ? 'specifiedByUrl' : '';\n  var directiveIsRepeatable = optionsWithDefault.directiveIsRepeatable ? 'isRepeatable' : '';\n  var schemaDescription = optionsWithDefault.schemaDescription ? descriptions : '';\n\n  function inputDeprecation(str) {\n    return optionsWithDefault.inputValueDeprecation ? str : '';\n  }\n\n  return \"\\n    query IntrospectionQuery {\\n      __schema {\\n        \".concat(schemaDescription, \"\\n        queryType { name }\\n        mutationType { name }\\n        subscriptionType { name }\\n        types {\\n          ...FullType\\n        }\\n        directives {\\n          name\\n          \").concat(descriptions, \"\\n          \").concat(directiveIsRepeatable, \"\\n          locations\\n          args\").concat(inputDeprecation('(includeDeprecated: true)'), \" {\\n            ...InputValue\\n          }\\n        }\\n      }\\n    }\\n\\n    fragment FullType on __Type {\\n      kind\\n      name\\n      \").concat(descriptions, \"\\n      \").concat(specifiedByUrl, \"\\n      fields(includeDeprecated: true) {\\n        name\\n        \").concat(descriptions, \"\\n        args\").concat(inputDeprecation('(includeDeprecated: true)'), \" {\\n          ...InputValue\\n        }\\n        type {\\n          ...TypeRef\\n        }\\n        isDeprecated\\n        deprecationReason\\n      }\\n      inputFields\").concat(inputDeprecation('(includeDeprecated: true)'), \" {\\n        ...InputValue\\n      }\\n      interfaces {\\n        ...TypeRef\\n      }\\n      enumValues(includeDeprecated: true) {\\n        name\\n        \").concat(descriptions, \"\\n        isDeprecated\\n        deprecationReason\\n      }\\n      possibleTypes {\\n        ...TypeRef\\n      }\\n    }\\n\\n    fragment InputValue on __InputValue {\\n      name\\n      \").concat(descriptions, \"\\n      type { ...TypeRef }\\n      defaultValue\\n      \").concat(inputDeprecation('isDeprecated'), \"\\n      \").concat(inputDeprecation('deprecationReason'), \"\\n    }\\n\\n    fragment TypeRef on __Type {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n                ofType {\\n                  kind\\n                  name\\n                  ofType {\\n                    kind\\n                    name\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \");\n}\n",
      "start": 1746507067886,
      "end": 1746507067898,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1746507067898,
      "end": 1746507067898,
      "order": "normal"
    }
  ]
}
