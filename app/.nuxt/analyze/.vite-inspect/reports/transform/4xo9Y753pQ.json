{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/node_modules/graphql/validation/rules/custom/NoDeprecatedCustomRule.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import invariant from \"../../../jsutils/invariant.mjs\";\nimport { GraphQLError } from \"../../../error/GraphQLError.mjs\";\nimport { getNamedType, isInputObjectType } from \"../../../type/definition.mjs\";\n\n/**\n * No deprecated\n *\n * A GraphQL document is only valid if all selected fields and all used enum values have not been\n * deprecated.\n *\n * Note: This rule is optional and is not part of the Validation section of the GraphQL\n * Specification. The main purpose of this rule is detection of deprecated usages and not\n * necessarily to forbid their use when querying a service.\n */\nexport function NoDeprecatedCustomRule(context) {\n  return {\n    Field: function Field(node) {\n      var fieldDef = context.getFieldDef();\n      var deprecationReason = fieldDef === null || fieldDef === void 0 ? void 0 : fieldDef.deprecationReason;\n\n      if (fieldDef && deprecationReason != null) {\n        var parentType = context.getParentType();\n        parentType != null || invariant(0);\n        context.reportError(new GraphQLError(\"The field \".concat(parentType.name, \".\").concat(fieldDef.name, \" is deprecated. \").concat(deprecationReason), node));\n      }\n    },\n    Argument: function Argument(node) {\n      var argDef = context.getArgument();\n      var deprecationReason = argDef === null || argDef === void 0 ? void 0 : argDef.deprecationReason;\n\n      if (argDef && deprecationReason != null) {\n        var directiveDef = context.getDirective();\n\n        if (directiveDef != null) {\n          context.reportError(new GraphQLError(\"Directive \\\"@\".concat(directiveDef.name, \"\\\" argument \\\"\").concat(argDef.name, \"\\\" is deprecated. \").concat(deprecationReason), node));\n        } else {\n          var parentType = context.getParentType();\n          var fieldDef = context.getFieldDef();\n          parentType != null && fieldDef != null || invariant(0);\n          context.reportError(new GraphQLError(\"Field \\\"\".concat(parentType.name, \".\").concat(fieldDef.name, \"\\\" argument \\\"\").concat(argDef.name, \"\\\" is deprecated. \").concat(deprecationReason), node));\n        }\n      }\n    },\n    ObjectField: function ObjectField(node) {\n      var inputObjectDef = getNamedType(context.getParentInputType());\n\n      if (isInputObjectType(inputObjectDef)) {\n        var inputFieldDef = inputObjectDef.getFields()[node.name.value]; // flowlint-next-line unnecessary-optional-chain:off\n\n        var deprecationReason = inputFieldDef === null || inputFieldDef === void 0 ? void 0 : inputFieldDef.deprecationReason;\n\n        if (deprecationReason != null) {\n          context.reportError(new GraphQLError(\"The input field \".concat(inputObjectDef.name, \".\").concat(inputFieldDef.name, \" is deprecated. \").concat(deprecationReason), node));\n        }\n      }\n    },\n    EnumValue: function EnumValue(node) {\n      var enumValueDef = context.getEnumValue();\n      var deprecationReason = enumValueDef === null || enumValueDef === void 0 ? void 0 : enumValueDef.deprecationReason;\n\n      if (enumValueDef && deprecationReason != null) {\n        var enumTypeDef = getNamedType(context.getInputType());\n        enumTypeDef != null || invariant(0);\n        context.reportError(new GraphQLError(\"The enum value \\\"\".concat(enumTypeDef.name, \".\").concat(enumValueDef.name, \"\\\" is deprecated. \").concat(deprecationReason), node));\n      }\n    }\n  };\n}\n",
      "start": 1712968595034,
      "end": 1712968595046,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1712968595046,
      "end": 1712968595046,
      "order": "normal"
    }
  ]
}
