{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/node_modules/graphql/language/printLocation.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { getLocation } from \"./location.mjs\";\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var subLineIndex = Math.floor(columnNum / 80);\n    var subLineColumnNum = columnNum % 80;\n    var subLines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), subLines[0]]].concat(subLines.slice(1, subLineIndex + 1).map(function (subLine) {\n      return ['', subLine];\n    }), [[' ', whitespace(subLineColumnNum - 1) + '^'], ['', subLines[subLineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return leftPad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction leftPad(len, str) {\n  return whitespace(len - str.length) + str;\n}\n",
      "start": 1710864567266,
      "end": 1710864567285,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1710864567285,
      "end": 1710864567285,
      "order": "normal"
    }
  ]
}
