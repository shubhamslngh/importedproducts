{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/node_modules/@wry/caches/lib/strong.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "function defaultDispose() { }\nexport class StrongCache {\n    constructor(max = Infinity, dispose = defaultDispose) {\n        this.max = max;\n        this.dispose = dispose;\n        this.map = new Map();\n        this.newest = null;\n        this.oldest = null;\n    }\n    has(key) {\n        return this.map.has(key);\n    }\n    get(key) {\n        const node = this.getNode(key);\n        return node && node.value;\n    }\n    get size() {\n        return this.map.size;\n    }\n    getNode(key) {\n        const node = this.map.get(key);\n        if (node && node !== this.newest) {\n            const { older, newer } = node;\n            if (newer) {\n                newer.older = older;\n            }\n            if (older) {\n                older.newer = newer;\n            }\n            node.older = this.newest;\n            node.older.newer = node;\n            node.newer = null;\n            this.newest = node;\n            if (node === this.oldest) {\n                this.oldest = newer;\n            }\n        }\n        return node;\n    }\n    set(key, value) {\n        let node = this.getNode(key);\n        if (node) {\n            return node.value = value;\n        }\n        node = {\n            key,\n            value,\n            newer: null,\n            older: this.newest\n        };\n        if (this.newest) {\n            this.newest.newer = node;\n        }\n        this.newest = node;\n        this.oldest = this.oldest || node;\n        this.map.set(key, node);\n        return node.value;\n    }\n    clean() {\n        while (this.oldest && this.map.size > this.max) {\n            this.delete(this.oldest.key);\n        }\n    }\n    delete(key) {\n        const node = this.map.get(key);\n        if (node) {\n            if (node === this.newest) {\n                this.newest = node.older;\n            }\n            if (node === this.oldest) {\n                this.oldest = node.newer;\n            }\n            if (node.newer) {\n                node.newer.older = node.older;\n            }\n            if (node.older) {\n                node.older.newer = node.newer;\n            }\n            this.map.delete(key);\n            this.dispose(node.value, key);\n            return true;\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=strong.js.map",
      "start": 1746507067651,
      "end": 1746507067684,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1746507067684,
      "end": 1746507067684,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1746507067684,
      "end": 1746507067684,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1746507067684,
      "end": 1746507067684,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1746507067684,
      "end": 1746507067684,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1746507067684,
      "end": 1746507067684,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1746507067684,
      "end": 1746507067684,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1746507067684,
      "end": 1746507067684,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1746507067684,
      "end": 1746507067684,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1746507067684,
      "end": 1746507067684,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1746507067684,
      "end": 1746507067684,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746507067684,
      "end": 1746507067684,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1746507067684,
      "end": 1746507067684,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1746507067684,
      "end": 1746507067684,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1746507067684,
      "end": 1746507067684,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1746507067684,
      "end": 1746507067684,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746507067684,
      "end": 1746507067684,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1746507067684,
      "end": 1746507067684,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1746507067684,
      "end": 1746507067684,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1746507067684,
      "end": 1746507067684,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1746507067684,
      "end": 1746507067684,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1746507067684,
      "end": 1746507067684,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1746507067684,
      "end": 1746507067684,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1746507067684,
      "end": 1746507067685,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1746507067685,
      "end": 1746507067685,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1746507067685,
      "end": 1746507067685,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1746507067685,
      "end": 1746507067685,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1746507067685,
      "end": 1746507067685,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1746507067685,
      "end": 1746507067685,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1746507067685,
      "end": 1746507067685,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1746507067685,
      "end": 1746507067685,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1746507067685,
      "end": 1746507067685,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1746507067685,
      "end": 1746507067685,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1746507067685,
      "end": 1746507067685,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1746507067685,
      "end": 1746507067685,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1746507067685,
      "end": 1746507067685,
      "order": "normal"
    }
  ]
}
