{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/plugins/apollo.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { useAuthStore } from \"../stores/auth\"\n\nexport default defineNuxtPlugin((nuxtApp) => {\n  const AuthStore = useAuthStore()\n\n  nuxtApp.hook(\"apollo:auth\", ({ client, token }) => {\n    if (AuthStore.token) {\n      const storedToken = sessionStorage.getItem('authToken')\n      const refreshToken = sessionStorage.getItem('refreshToken')\n        console.log(\"Token set from sessionstorage:\", token.value)\n      \n      if (storedToken) {\n        token.value = storedToken\n        console.log(\"Token set from sessionstorage:\", token.value)\n      } \n      else {\n        console.error(\"Token not stored || found\")\n      }\n    }\n  })\n\n  nuxtApp.hook('apollo:error', (error) => {\n    console.error(\"Apollo error:\", error)\n  })\n})\n",
      "start": 1716330191699,
      "end": 1716330191882,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716330191882,
      "end": 1716330191882,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716330191882,
      "end": 1716330191882,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716330191882,
      "end": 1716330191882,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716330191882,
      "end": 1716330191882,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1716330191882,
      "end": 1716330191882,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1716330191882,
      "end": 1716330191882,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716330191882,
      "end": 1716330191882,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716330191882,
      "end": 1716330191882,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716330191882,
      "end": 1716330191882,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716330191882,
      "end": 1716330191882,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716330191882,
      "end": 1716330191882,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1716330191882,
      "end": 1716330191882,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716330191882,
      "end": 1716330191882,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716330191882,
      "end": 1716330191882,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716330191882,
      "end": 1716330191882,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716330191882,
      "end": 1716330191882,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716330191882,
      "end": 1716330191882,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1716330191882,
      "end": 1716330191882,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716330191882,
      "end": 1716330191882,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716330191882,
      "end": 1716330191883,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716330191883,
      "end": 1716330191883,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716330191883,
      "end": 1716330191883,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716330191883,
      "end": 1716330191883,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716330191883,
      "end": 1716330191883,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716330191883,
      "end": 1716330191883,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716330191883,
      "end": 1716330191883,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716330191883,
      "end": 1716330191883,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716330191883,
      "end": 1716330191883,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716330191883,
      "end": 1716330191883,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716330191883,
      "end": 1716330191883,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716330191883,
      "end": 1716330191883,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { defineNuxtPlugin } from '#app/nuxt';\nimport { useAuthStore } from \"../stores/auth\"\n\nexport default defineNuxtPlugin((nuxtApp) => {\n  const AuthStore = useAuthStore()\n\n  nuxtApp.hook(\"apollo:auth\", ({ client, token }) => {\n    if (AuthStore.token) {\n      const storedToken = sessionStorage.getItem('authToken')\n      const refreshToken = sessionStorage.getItem('refreshToken')\n        console.log(\"Token set from sessionstorage:\", token.value)\n      \n      if (storedToken) {\n        token.value = storedToken\n        console.log(\"Token set from sessionstorage:\", token.value)\n      } \n      else {\n        console.error(\"Token not stored || found\")\n      }\n    }\n  })\n\n  nuxtApp.hook('apollo:error', (error) => {\n    console.error(\"Apollo error:\", error)\n  })\n})\n",
      "start": 1716330191883,
      "end": 1716330191883,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClzC,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;"
      }
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { defineNuxtPlugin } from '#app/nuxt';\nimport { useAuthStore } from \"../stores/auth\"\n\nexport default defineNuxtPlugin((nuxtApp) => {\n  const AuthStore = useAuthStore()\n\n  nuxtApp.hook(\"apollo:auth\", ({ client, token }) => {\n    if (AuthStore.token) {\n      const storedToken = sessionStorage.getItem('authToken')\n      const refreshToken = sessionStorage.getItem('refreshToken')\n        console.log(\"Token set from sessionstorage:\", token.value)\n      \n      if (storedToken) {\n        token.value = storedToken\n        console.log(\"Token set from sessionstorage:\", token.value)\n      } \n      else {\n        console.error(\"Token not stored || found\")\n      }\n    }\n  })\n\n  nuxtApp.hook('apollo:error', (error) => {\n    console.error(\"Apollo error:\", error)\n  })\n})\n",
      "start": 1716330191883,
      "end": 1716330191883,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClzC,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1716330191883,
      "end": 1716330191883,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716330191883,
      "end": 1716330191883,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716330191883,
      "end": 1716330191883,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716330191883,
      "end": 1716330191883,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1716330191883,
      "end": 1716330191883,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716330191883,
      "end": 1716330191883,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716330191883,
      "end": 1716330191883,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716330191883,
      "end": 1716330191883,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716330191883,
      "end": 1716330191883,
      "order": "normal"
    }
  ]
}
