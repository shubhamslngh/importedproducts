{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/node_modules/@apollo/client/react/hooks/useBackgroundQuery.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { __spreadArray } from \"tslib\";\nimport * as React from \"rehackt\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nimport { getSuspenseCache, unwrapQueryRef, updateWrappedQueryRef, wrapQueryRef, } from \"../internal/index.js\";\nimport { wrapHook } from \"./internal/index.js\";\nimport { useWatchQueryOptions } from \"./useSuspenseQuery.js\";\nimport { canonicalStringify } from \"../../cache/index.js\";\nexport function useBackgroundQuery(query, options) {\n    if (options === void 0) { options = Object.create(null); }\n    return wrapHook(\"useBackgroundQuery\", _useBackgroundQuery, useApolloClient(typeof options === \"object\" ? options.client : undefined))(query, options);\n}\nfunction _useBackgroundQuery(query, options) {\n    var client = useApolloClient(options.client);\n    var suspenseCache = getSuspenseCache(client);\n    var watchQueryOptions = useWatchQueryOptions({ client: client, query: query, options: options });\n    var fetchPolicy = watchQueryOptions.fetchPolicy, variables = watchQueryOptions.variables;\n    var _a = options.queryKey, queryKey = _a === void 0 ? [] : _a;\n    // This ref tracks the first time query execution is enabled to determine\n    // whether to return a query ref or `undefined`. When initialized\n    // in a skipped state (either via `skip: true` or `skipToken`) we return\n    // `undefined` for the `queryRef` until the query has been enabled. Once\n    // enabled, a query ref is always returned regardless of whether the query is\n    // skipped again later.\n    var didFetchResult = React.useRef(fetchPolicy !== \"standby\");\n    didFetchResult.current || (didFetchResult.current = fetchPolicy !== \"standby\");\n    var cacheKey = __spreadArray([\n        query,\n        canonicalStringify(variables)\n    ], [].concat(queryKey), true);\n    var queryRef = suspenseCache.getQueryRef(cacheKey, function () {\n        return client.watchQuery(watchQueryOptions);\n    });\n    var _b = React.useState(wrapQueryRef(queryRef)), wrappedQueryRef = _b[0], setWrappedQueryRef = _b[1];\n    if (unwrapQueryRef(wrappedQueryRef) !== queryRef) {\n        setWrappedQueryRef(wrapQueryRef(queryRef));\n    }\n    if (queryRef.didChangeOptions(watchQueryOptions)) {\n        var promise = queryRef.applyOptions(watchQueryOptions);\n        updateWrappedQueryRef(wrappedQueryRef, promise);\n    }\n    var fetchMore = React.useCallback(function (options) {\n        var promise = queryRef.fetchMore(options);\n        setWrappedQueryRef(wrapQueryRef(queryRef));\n        return promise;\n    }, [queryRef]);\n    var refetch = React.useCallback(function (variables) {\n        var promise = queryRef.refetch(variables);\n        setWrappedQueryRef(wrapQueryRef(queryRef));\n        return promise;\n    }, [queryRef]);\n    return [\n        didFetchResult.current ? wrappedQueryRef : void 0,\n        { fetchMore: fetchMore, refetch: refetch },\n    ];\n}\n//# sourceMappingURL=useBackgroundQuery.js.map",
      "start": 1716304642815,
      "end": 1716304642856,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716304642856,
      "end": 1716304642856,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716304642856,
      "end": 1716304642856,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716304642856,
      "end": 1716304642856,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716304642856,
      "end": 1716304642856,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1716304642856,
      "end": 1716304642856,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1716304642856,
      "end": 1716304642856,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716304642856,
      "end": 1716304642856,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716304642856,
      "end": 1716304642856,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716304642856,
      "end": 1716304642856,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716304642856,
      "end": 1716304642856,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716304642856,
      "end": 1716304642856,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1716304642856,
      "end": 1716304642856,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716304642856,
      "end": 1716304642856,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716304642856,
      "end": 1716304642856,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716304642856,
      "end": 1716304642856,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716304642856,
      "end": 1716304642856,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716304642856,
      "end": 1716304642856,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1716304642856,
      "end": 1716304642856,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716304642856,
      "end": 1716304642856,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716304642856,
      "end": 1716304642856,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716304642856,
      "end": 1716304642856,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716304642856,
      "end": 1716304642856,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716304642856,
      "end": 1716304642856,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716304642856,
      "end": 1716304642856,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716304642856,
      "end": 1716304642856,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716304642856,
      "end": 1716304642856,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716304642856,
      "end": 1716304642856,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716304642856,
      "end": 1716304642856,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716304642856,
      "end": 1716304642856,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716304642856,
      "end": 1716304642857,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716304642856,
      "end": 1716304642857,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716304642857,
      "end": 1716304642857,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716304642857,
      "end": 1716304642857,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716304642857,
      "end": 1716304642857,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716304642857,
      "end": 1716304642857,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716304642857,
      "end": 1716304642857,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716304642857,
      "end": 1716304642857,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1716304642857,
      "end": 1716304642857,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716304642857,
      "end": 1716304642857,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716304642857,
      "end": 1716304642857,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716304642857,
      "end": 1716304642857,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716304642857,
      "end": 1716304642857,
      "order": "normal"
    }
  ]
}
