{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/node_modules/@apollo/client/react/hooks/useMutation.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { __assign } from \"tslib\";\nimport * as React from \"rehackt\";\nimport { mergeOptions } from \"../../utilities/index.js\";\nimport { equal } from \"@wry/equality\";\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\n/**\n *\n *\n * > Refer to the [Mutations](https://www.apollographql.com/docs/react/data/mutations/) section for a more in-depth overview of `useMutation`.\n *\n * @example\n * ```jsx\n * import { gql, useMutation } from '@apollo/client';\n *\n * const ADD_TODO = gql`\n *   mutation AddTodo($type: String!) {\n *     addTodo(type: $type) {\n *       id\n *       type\n *     }\n *   }\n * `;\n *\n * function AddTodo() {\n *   let input;\n *   const [addTodo, { data }] = useMutation(ADD_TODO);\n *\n *   return (\n *     <div>\n *       <form\n *         onSubmit={e => {\n *           e.preventDefault();\n *           addTodo({ variables: { type: input.value } });\n *           input.value = '';\n *         }}\n *       >\n *         <input\n *           ref={node => {\n *             input = node;\n *           }}\n *         />\n *         <button type=\"submit\">Add Todo</button>\n *       </form>\n *     </div>\n *   );\n * }\n * ```\n * @since 3.0.0\n * @param mutation - A GraphQL mutation document parsed into an AST by `gql`.\n * @param options - Options to control how the mutation is executed.\n * @returns A tuple in the form of `[mutate, result]`\n */\nexport function useMutation(mutation, options) {\n    var client = useApolloClient(options === null || options === void 0 ? void 0 : options.client);\n    verifyDocumentType(mutation, DocumentType.Mutation);\n    var _a = React.useState({\n        called: false,\n        loading: false,\n        client: client,\n    }), result = _a[0], setResult = _a[1];\n    var ref = React.useRef({\n        result: result,\n        mutationId: 0,\n        isMounted: true,\n        client: client,\n        mutation: mutation,\n        options: options,\n    });\n    // TODO: Trying to assign these in a useEffect or useLayoutEffect breaks\n    // higher-order components.\n    {\n        Object.assign(ref.current, { client: client, options: options, mutation: mutation });\n    }\n    var execute = React.useCallback(function (executeOptions) {\n        if (executeOptions === void 0) { executeOptions = {}; }\n        var _a = ref.current, options = _a.options, mutation = _a.mutation;\n        var baseOptions = __assign(__assign({}, options), { mutation: mutation });\n        var client = executeOptions.client || ref.current.client;\n        if (!ref.current.result.loading &&\n            !baseOptions.ignoreResults &&\n            ref.current.isMounted) {\n            setResult((ref.current.result = {\n                loading: true,\n                error: void 0,\n                data: void 0,\n                called: true,\n                client: client,\n            }));\n        }\n        var mutationId = ++ref.current.mutationId;\n        var clientOptions = mergeOptions(baseOptions, executeOptions);\n        return client\n            .mutate(clientOptions)\n            .then(function (response) {\n            var _a, _b;\n            var data = response.data, errors = response.errors;\n            var error = errors && errors.length > 0 ?\n                new ApolloError({ graphQLErrors: errors })\n                : void 0;\n            var onError = executeOptions.onError || ((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onError);\n            if (error && onError) {\n                onError(error, clientOptions);\n            }\n            if (mutationId === ref.current.mutationId &&\n                !clientOptions.ignoreResults) {\n                var result_1 = {\n                    called: true,\n                    loading: false,\n                    data: data,\n                    error: error,\n                    client: client,\n                };\n                if (ref.current.isMounted && !equal(ref.current.result, result_1)) {\n                    setResult((ref.current.result = result_1));\n                }\n            }\n            var onCompleted = executeOptions.onCompleted || ((_b = ref.current.options) === null || _b === void 0 ? void 0 : _b.onCompleted);\n            if (!error) {\n                onCompleted === null || onCompleted === void 0 ? void 0 : onCompleted(response.data, clientOptions);\n            }\n            return response;\n        })\n            .catch(function (error) {\n            var _a;\n            if (mutationId === ref.current.mutationId && ref.current.isMounted) {\n                var result_2 = {\n                    loading: false,\n                    error: error,\n                    data: void 0,\n                    called: true,\n                    client: client,\n                };\n                if (!equal(ref.current.result, result_2)) {\n                    setResult((ref.current.result = result_2));\n                }\n            }\n            var onError = executeOptions.onError || ((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onError);\n            if (onError) {\n                onError(error, clientOptions);\n                // TODO(brian): why are we returning this here???\n                return { data: void 0, errors: error };\n            }\n            throw error;\n        });\n    }, []);\n    var reset = React.useCallback(function () {\n        if (ref.current.isMounted) {\n            var result_3 = { called: false, loading: false, client: client };\n            Object.assign(ref.current, { mutationId: 0, result: result_3 });\n            setResult(result_3);\n        }\n    }, []);\n    React.useEffect(function () {\n        ref.current.isMounted = true;\n        return function () {\n            ref.current.isMounted = false;\n        };\n    }, []);\n    return [execute, __assign({ reset: reset }, result)];\n}\n//# sourceMappingURL=useMutation.js.map",
      "start": 1716304642815,
      "end": 1716304642840,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716304642840,
      "end": 1716304642840,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716304642840,
      "end": 1716304642840,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716304642840,
      "end": 1716304642840,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716304642840,
      "end": 1716304642840,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1716304642840,
      "end": 1716304642840,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1716304642840,
      "end": 1716304642840,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716304642840,
      "end": 1716304642840,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716304642840,
      "end": 1716304642840,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716304642840,
      "end": 1716304642840,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716304642840,
      "end": 1716304642840,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716304642840,
      "end": 1716304642840,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1716304642840,
      "end": 1716304642840,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716304642840,
      "end": 1716304642840,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716304642840,
      "end": 1716304642840,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716304642840,
      "end": 1716304642840,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716304642840,
      "end": 1716304642840,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716304642840,
      "end": 1716304642840,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1716304642840,
      "end": 1716304642840,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716304642840,
      "end": 1716304642840,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716304642840,
      "end": 1716304642840,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716304642840,
      "end": 1716304642840,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { __assign } from \"tslib\";\nimport * as React from \"rehackt\";\nimport { mergeOptions } from \"../../utilities/index.js\";\nimport { equal } from \"@wry/equality\";\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nexport function useMutation(mutation, options) {\n  var client = useApolloClient(options === null || options === void 0 ? void 0 : options.client);\n  verifyDocumentType(mutation, DocumentType.Mutation);\n  var _a = React.useState({\n    called: false,\n    loading: false,\n    client\n  }), result = _a[0], setResult = _a[1];\n  var ref = React.useRef({\n    result,\n    mutationId: 0,\n    isMounted: true,\n    client,\n    mutation,\n    options\n  });\n  {\n    Object.assign(ref.current, { client, options, mutation });\n  }\n  var execute = React.useCallback(function(executeOptions) {\n    if (executeOptions === void 0) {\n      executeOptions = {};\n    }\n    var _a2 = ref.current, options2 = _a2.options, mutation2 = _a2.mutation;\n    var baseOptions = __assign(__assign({}, options2), { mutation: mutation2 });\n    var client2 = executeOptions.client || ref.current.client;\n    if (!ref.current.result.loading && !baseOptions.ignoreResults && ref.current.isMounted) {\n      setResult(ref.current.result = {\n        loading: true,\n        error: void 0,\n        data: void 0,\n        called: true,\n        client: client2\n      });\n    }\n    var mutationId = ++ref.current.mutationId;\n    var clientOptions = mergeOptions(baseOptions, executeOptions);\n    return client2.mutate(clientOptions).then(function(response) {\n      var _a3, _b;\n      var data = response.data, errors = response.errors;\n      var error = errors && errors.length > 0 ? new ApolloError({ graphQLErrors: errors }) : void 0;\n      var onError = executeOptions.onError || ((_a3 = ref.current.options) === null || _a3 === void 0 ? void 0 : _a3.onError);\n      if (error && onError) {\n        onError(error, clientOptions);\n      }\n      if (mutationId === ref.current.mutationId && !clientOptions.ignoreResults) {\n        var result_1 = {\n          called: true,\n          loading: false,\n          data,\n          error,\n          client: client2\n        };\n        if (ref.current.isMounted && !equal(ref.current.result, result_1)) {\n          setResult(ref.current.result = result_1);\n        }\n      }\n      var onCompleted = executeOptions.onCompleted || ((_b = ref.current.options) === null || _b === void 0 ? void 0 : _b.onCompleted);\n      if (!error) {\n        onCompleted === null || onCompleted === void 0 ? void 0 : onCompleted(response.data, clientOptions);\n      }\n      return response;\n    }).catch(function(error) {\n      var _a3;\n      if (mutationId === ref.current.mutationId && ref.current.isMounted) {\n        var result_2 = {\n          loading: false,\n          error,\n          data: void 0,\n          called: true,\n          client: client2\n        };\n        if (!equal(ref.current.result, result_2)) {\n          setResult(ref.current.result = result_2);\n        }\n      }\n      var onError = executeOptions.onError || ((_a3 = ref.current.options) === null || _a3 === void 0 ? void 0 : _a3.onError);\n      if (onError) {\n        onError(error, clientOptions);\n        return { data: void 0, errors: error };\n      }\n      throw error;\n    });\n  }, []);\n  var reset = React.useCallback(function() {\n    if (ref.current.isMounted) {\n      var result_3 = { called: false, loading: false, client };\n      Object.assign(ref.current, { mutationId: 0, result: result_3 });\n      setResult(result_3);\n    }\n  }, []);\n  React.useEffect(function() {\n    ref.current.isMounted = true;\n    return function() {\n      ref.current.isMounted = false;\n    };\n  }, []);\n  return [execute, __assign({ reset }, result)];\n}\n",
      "start": 1716304642840,
      "end": 1716304643222,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/shubhamsingh/namma/importedProds/node_modules/@apollo/client/react/hooks/useMutation.js\"],\n  \"sourcesContent\": [\"import { __assign } from \\\"tslib\\\";\\nimport * as React from \\\"rehackt\\\";\\nimport { mergeOptions } from \\\"../../utilities/index.js\\\";\\nimport { equal } from \\\"@wry/equality\\\";\\nimport { DocumentType, verifyDocumentType } from \\\"../parser/index.js\\\";\\nimport { ApolloError } from \\\"../../errors/index.js\\\";\\nimport { useApolloClient } from \\\"./useApolloClient.js\\\";\\n/**\\n *\\n *\\n * > Refer to the [Mutations](https://www.apollographql.com/docs/react/data/mutations/) section for a more in-depth overview of `useMutation`.\\n *\\n * @example\\n * ```jsx\\n * import { gql, useMutation } from '@apollo/client';\\n *\\n * const ADD_TODO = gql`\\n *   mutation AddTodo($type: String!) {\\n *     addTodo(type: $type) {\\n *       id\\n *       type\\n *     }\\n *   }\\n * `;\\n *\\n * function AddTodo() {\\n *   let input;\\n *   const [addTodo, { data }] = useMutation(ADD_TODO);\\n *\\n *   return (\\n *     <div>\\n *       <form\\n *         onSubmit={e => {\\n *           e.preventDefault();\\n *           addTodo({ variables: { type: input.value } });\\n *           input.value = '';\\n *         }}\\n *       >\\n *         <input\\n *           ref={node => {\\n *             input = node;\\n *           }}\\n *         />\\n *         <button type=\\\"submit\\\">Add Todo</button>\\n *       </form>\\n *     </div>\\n *   );\\n * }\\n * ```\\n * @since 3.0.0\\n * @param mutation - A GraphQL mutation document parsed into an AST by `gql`.\\n * @param options - Options to control how the mutation is executed.\\n * @returns A tuple in the form of `[mutate, result]`\\n */\\nexport function useMutation(mutation, options) {\\n    var client = useApolloClient(options === null || options === void 0 ? void 0 : options.client);\\n    verifyDocumentType(mutation, DocumentType.Mutation);\\n    var _a = React.useState({\\n        called: false,\\n        loading: false,\\n        client: client,\\n    }), result = _a[0], setResult = _a[1];\\n    var ref = React.useRef({\\n        result: result,\\n        mutationId: 0,\\n        isMounted: true,\\n        client: client,\\n        mutation: mutation,\\n        options: options,\\n    });\\n    // TODO: Trying to assign these in a useEffect or useLayoutEffect breaks\\n    // higher-order components.\\n    {\\n        Object.assign(ref.current, { client: client, options: options, mutation: mutation });\\n    }\\n    var execute = React.useCallback(function (executeOptions) {\\n        if (executeOptions === void 0) { executeOptions = {}; }\\n        var _a = ref.current, options = _a.options, mutation = _a.mutation;\\n        var baseOptions = __assign(__assign({}, options), { mutation: mutation });\\n        var client = executeOptions.client || ref.current.client;\\n        if (!ref.current.result.loading &&\\n            !baseOptions.ignoreResults &&\\n            ref.current.isMounted) {\\n            setResult((ref.current.result = {\\n                loading: true,\\n                error: void 0,\\n                data: void 0,\\n                called: true,\\n                client: client,\\n            }));\\n        }\\n        var mutationId = ++ref.current.mutationId;\\n        var clientOptions = mergeOptions(baseOptions, executeOptions);\\n        return client\\n            .mutate(clientOptions)\\n            .then(function (response) {\\n            var _a, _b;\\n            var data = response.data, errors = response.errors;\\n            var error = errors && errors.length > 0 ?\\n                new ApolloError({ graphQLErrors: errors })\\n                : void 0;\\n            var onError = executeOptions.onError || ((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onError);\\n            if (error && onError) {\\n                onError(error, clientOptions);\\n            }\\n            if (mutationId === ref.current.mutationId &&\\n                !clientOptions.ignoreResults) {\\n                var result_1 = {\\n                    called: true,\\n                    loading: false,\\n                    data: data,\\n                    error: error,\\n                    client: client,\\n                };\\n                if (ref.current.isMounted && !equal(ref.current.result, result_1)) {\\n                    setResult((ref.current.result = result_1));\\n                }\\n            }\\n            var onCompleted = executeOptions.onCompleted || ((_b = ref.current.options) === null || _b === void 0 ? void 0 : _b.onCompleted);\\n            if (!error) {\\n                onCompleted === null || onCompleted === void 0 ? void 0 : onCompleted(response.data, clientOptions);\\n            }\\n            return response;\\n        })\\n            .catch(function (error) {\\n            var _a;\\n            if (mutationId === ref.current.mutationId && ref.current.isMounted) {\\n                var result_2 = {\\n                    loading: false,\\n                    error: error,\\n                    data: void 0,\\n                    called: true,\\n                    client: client,\\n                };\\n                if (!equal(ref.current.result, result_2)) {\\n                    setResult((ref.current.result = result_2));\\n                }\\n            }\\n            var onError = executeOptions.onError || ((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onError);\\n            if (onError) {\\n                onError(error, clientOptions);\\n                // TODO(brian): why are we returning this here???\\n                return { data: void 0, errors: error };\\n            }\\n            throw error;\\n        });\\n    }, []);\\n    var reset = React.useCallback(function () {\\n        if (ref.current.isMounted) {\\n            var result_3 = { called: false, loading: false, client: client };\\n            Object.assign(ref.current, { mutationId: 0, result: result_3 });\\n            setResult(result_3);\\n        }\\n    }, []);\\n    React.useEffect(function () {\\n        ref.current.isMounted = true;\\n        return function () {\\n            ref.current.isMounted = false;\\n        };\\n    }, []);\\n    return [execute, __assign({ reset: reset }, result)];\\n}\\n//# sourceMappingURL=useMutation.js.map\"],\n  \"mappings\": \"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\",\n  \"names\": [\"_a\", \"options\", \"mutation\", \"client\"]\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1716304643222,
      "end": 1716304643222,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716304643222,
      "end": 1716304643222,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716304643222,
      "end": 1716304643222,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716304643222,
      "end": 1716304643222,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716304643222,
      "end": 1716304643222,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716304643222,
      "end": 1716304643222,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716304643222,
      "end": 1716304643222,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716304643222,
      "end": 1716304643223,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716304643222,
      "end": 1716304643223,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716304643223,
      "end": 1716304643223,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716304643223,
      "end": 1716304643223,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716304643223,
      "end": 1716304643223,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716304643223,
      "end": 1716304643223,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716304643223,
      "end": 1716304643223,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716304643223,
      "end": 1716304643223,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1716304643223,
      "end": 1716304643223,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716304643223,
      "end": 1716304643223,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716304643223,
      "end": 1716304643223,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716304643223,
      "end": 1716304643223,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716304643223,
      "end": 1716304643223,
      "order": "normal"
    }
  ]
}
