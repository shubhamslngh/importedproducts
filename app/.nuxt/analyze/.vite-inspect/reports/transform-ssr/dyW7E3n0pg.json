{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/node_modules/@apollo/client/utilities/graphql/getFromAST.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { invariant, newInvariantError } from \"../globals/index.js\";\nimport { valueToObjectRepresentation } from \"./storeUtils.js\";\n// Checks the document for errors and throws an exception if there is an error.\nexport function checkDocument(doc) {\n    invariant(doc && doc.kind === \"Document\", 74);\n    var operations = doc.definitions\n        .filter(function (d) { return d.kind !== \"FragmentDefinition\"; })\n        .map(function (definition) {\n        if (definition.kind !== \"OperationDefinition\") {\n            throw newInvariantError(75, definition.kind);\n        }\n        return definition;\n    });\n    invariant(operations.length <= 1, 76, operations.length);\n    return doc;\n}\nexport function getOperationDefinition(doc) {\n    checkDocument(doc);\n    return doc.definitions.filter(function (definition) {\n        return definition.kind === \"OperationDefinition\";\n    })[0];\n}\nexport function getOperationName(doc) {\n    return (doc.definitions\n        .filter(function (definition) {\n        return definition.kind === \"OperationDefinition\" && !!definition.name;\n    })\n        .map(function (x) { return x.name.value; })[0] || null);\n}\n// Returns the FragmentDefinitions from a particular document as an array\nexport function getFragmentDefinitions(doc) {\n    return doc.definitions.filter(function (definition) {\n        return definition.kind === \"FragmentDefinition\";\n    });\n}\nexport function getQueryDefinition(doc) {\n    var queryDef = getOperationDefinition(doc);\n    invariant(queryDef && queryDef.operation === \"query\", 77);\n    return queryDef;\n}\nexport function getFragmentDefinition(doc) {\n    invariant(doc.kind === \"Document\", 78);\n    invariant(doc.definitions.length <= 1, 79);\n    var fragmentDef = doc.definitions[0];\n    invariant(fragmentDef.kind === \"FragmentDefinition\", 80);\n    return fragmentDef;\n}\n/**\n * Returns the first operation definition found in this document.\n * If no operation definition is found, the first fragment definition will be returned.\n * If no definitions are found, an error will be thrown.\n */\nexport function getMainDefinition(queryDoc) {\n    checkDocument(queryDoc);\n    var fragmentDefinition;\n    for (var _i = 0, _a = queryDoc.definitions; _i < _a.length; _i++) {\n        var definition = _a[_i];\n        if (definition.kind === \"OperationDefinition\") {\n            var operation = definition.operation;\n            if (operation === \"query\" ||\n                operation === \"mutation\" ||\n                operation === \"subscription\") {\n                return definition;\n            }\n        }\n        if (definition.kind === \"FragmentDefinition\" && !fragmentDefinition) {\n            // we do this because we want to allow multiple fragment definitions\n            // to precede an operation definition.\n            fragmentDefinition = definition;\n        }\n    }\n    if (fragmentDefinition) {\n        return fragmentDefinition;\n    }\n    throw newInvariantError(81);\n}\nexport function getDefaultValues(definition) {\n    var defaultValues = Object.create(null);\n    var defs = definition && definition.variableDefinitions;\n    if (defs && defs.length) {\n        defs.forEach(function (def) {\n            if (def.defaultValue) {\n                valueToObjectRepresentation(defaultValues, def.variable.name, def.defaultValue);\n            }\n        });\n    }\n    return defaultValues;\n}\n//# sourceMappingURL=getFromAST.js.map",
      "start": 1713269988611,
      "end": 1713269988684,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1713269988684,
      "end": 1713269988684,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1713269988684,
      "end": 1713269988684,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1713269988684,
      "end": 1713269988684,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1713269988684,
      "end": 1713269988684,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1713269988684,
      "end": 1713269988684,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1713269988684,
      "end": 1713269988684,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1713269988684,
      "end": 1713269988684,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1713269988684,
      "end": 1713269988684,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1713269988684,
      "end": 1713269988684,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1713269988684,
      "end": 1713269988684,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1713269988684,
      "end": 1713269988684,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1713269988684,
      "end": 1713269988684,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1713269988684,
      "end": 1713269988684,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713269988684,
      "end": 1713269988684,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713269988684,
      "end": 1713269988684,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1713269988684,
      "end": 1713269988684,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1713269988684,
      "end": 1713269988684,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1713269988684,
      "end": 1713269988684,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1713269988684,
      "end": 1713269988684,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713269988684,
      "end": 1713269988684,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1713269988684,
      "end": 1713269988684,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { invariant, newInvariantError } from \"../globals/index.js\";\nimport { valueToObjectRepresentation } from \"./storeUtils.js\";\nexport function checkDocument(doc) {\n  invariant(doc && doc.kind === \"Document\", 74);\n  var operations = doc.definitions.filter(function(d) {\n    return d.kind !== \"FragmentDefinition\";\n  }).map(function(definition) {\n    if (definition.kind !== \"OperationDefinition\") {\n      throw newInvariantError(75, definition.kind);\n    }\n    return definition;\n  });\n  invariant(operations.length <= 1, 76, operations.length);\n  return doc;\n}\nexport function getOperationDefinition(doc) {\n  checkDocument(doc);\n  return doc.definitions.filter(function(definition) {\n    return definition.kind === \"OperationDefinition\";\n  })[0];\n}\nexport function getOperationName(doc) {\n  return doc.definitions.filter(function(definition) {\n    return definition.kind === \"OperationDefinition\" && !!definition.name;\n  }).map(function(x) {\n    return x.name.value;\n  })[0] || null;\n}\nexport function getFragmentDefinitions(doc) {\n  return doc.definitions.filter(function(definition) {\n    return definition.kind === \"FragmentDefinition\";\n  });\n}\nexport function getQueryDefinition(doc) {\n  var queryDef = getOperationDefinition(doc);\n  invariant(queryDef && queryDef.operation === \"query\", 77);\n  return queryDef;\n}\nexport function getFragmentDefinition(doc) {\n  invariant(doc.kind === \"Document\", 78);\n  invariant(doc.definitions.length <= 1, 79);\n  var fragmentDef = doc.definitions[0];\n  invariant(fragmentDef.kind === \"FragmentDefinition\", 80);\n  return fragmentDef;\n}\nexport function getMainDefinition(queryDoc) {\n  checkDocument(queryDoc);\n  var fragmentDefinition;\n  for (var _i = 0, _a = queryDoc.definitions; _i < _a.length; _i++) {\n    var definition = _a[_i];\n    if (definition.kind === \"OperationDefinition\") {\n      var operation = definition.operation;\n      if (operation === \"query\" || operation === \"mutation\" || operation === \"subscription\") {\n        return definition;\n      }\n    }\n    if (definition.kind === \"FragmentDefinition\" && !fragmentDefinition) {\n      fragmentDefinition = definition;\n    }\n  }\n  if (fragmentDefinition) {\n    return fragmentDefinition;\n  }\n  throw newInvariantError(81);\n}\nexport function getDefaultValues(definition) {\n  var defaultValues = /* @__PURE__ */ Object.create(null);\n  var defs = definition && definition.variableDefinitions;\n  if (defs && defs.length) {\n    defs.forEach(function(def) {\n      if (def.defaultValue) {\n        valueToObjectRepresentation(defaultValues, def.variable.name, def.defaultValue);\n      }\n    });\n  }\n  return defaultValues;\n}\n",
      "start": 1713269988684,
      "end": 1713269989229,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/shubhamsingh/namma/importedProds/node_modules/@apollo/client/utilities/graphql/getFromAST.js\"],\n  \"sourcesContent\": [\"import { invariant, newInvariantError } from \\\"../globals/index.js\\\";\\nimport { valueToObjectRepresentation } from \\\"./storeUtils.js\\\";\\n// Checks the document for errors and throws an exception if there is an error.\\nexport function checkDocument(doc) {\\n    invariant(doc && doc.kind === \\\"Document\\\", 74);\\n    var operations = doc.definitions\\n        .filter(function (d) { return d.kind !== \\\"FragmentDefinition\\\"; })\\n        .map(function (definition) {\\n        if (definition.kind !== \\\"OperationDefinition\\\") {\\n            throw newInvariantError(75, definition.kind);\\n        }\\n        return definition;\\n    });\\n    invariant(operations.length <= 1, 76, operations.length);\\n    return doc;\\n}\\nexport function getOperationDefinition(doc) {\\n    checkDocument(doc);\\n    return doc.definitions.filter(function (definition) {\\n        return definition.kind === \\\"OperationDefinition\\\";\\n    })[0];\\n}\\nexport function getOperationName(doc) {\\n    return (doc.definitions\\n        .filter(function (definition) {\\n        return definition.kind === \\\"OperationDefinition\\\" && !!definition.name;\\n    })\\n        .map(function (x) { return x.name.value; })[0] || null);\\n}\\n// Returns the FragmentDefinitions from a particular document as an array\\nexport function getFragmentDefinitions(doc) {\\n    return doc.definitions.filter(function (definition) {\\n        return definition.kind === \\\"FragmentDefinition\\\";\\n    });\\n}\\nexport function getQueryDefinition(doc) {\\n    var queryDef = getOperationDefinition(doc);\\n    invariant(queryDef && queryDef.operation === \\\"query\\\", 77);\\n    return queryDef;\\n}\\nexport function getFragmentDefinition(doc) {\\n    invariant(doc.kind === \\\"Document\\\", 78);\\n    invariant(doc.definitions.length <= 1, 79);\\n    var fragmentDef = doc.definitions[0];\\n    invariant(fragmentDef.kind === \\\"FragmentDefinition\\\", 80);\\n    return fragmentDef;\\n}\\n/**\\n * Returns the first operation definition found in this document.\\n * If no operation definition is found, the first fragment definition will be returned.\\n * If no definitions are found, an error will be thrown.\\n */\\nexport function getMainDefinition(queryDoc) {\\n    checkDocument(queryDoc);\\n    var fragmentDefinition;\\n    for (var _i = 0, _a = queryDoc.definitions; _i < _a.length; _i++) {\\n        var definition = _a[_i];\\n        if (definition.kind === \\\"OperationDefinition\\\") {\\n            var operation = definition.operation;\\n            if (operation === \\\"query\\\" ||\\n                operation === \\\"mutation\\\" ||\\n                operation === \\\"subscription\\\") {\\n                return definition;\\n            }\\n        }\\n        if (definition.kind === \\\"FragmentDefinition\\\" && !fragmentDefinition) {\\n            // we do this because we want to allow multiple fragment definitions\\n            // to precede an operation definition.\\n            fragmentDefinition = definition;\\n        }\\n    }\\n    if (fragmentDefinition) {\\n        return fragmentDefinition;\\n    }\\n    throw newInvariantError(81);\\n}\\nexport function getDefaultValues(definition) {\\n    var defaultValues = Object.create(null);\\n    var defs = definition && definition.variableDefinitions;\\n    if (defs && defs.length) {\\n        defs.forEach(function (def) {\\n            if (def.defaultValue) {\\n                valueToObjectRepresentation(defaultValues, def.variable.name, def.defaultValue);\\n            }\\n        });\\n    }\\n    return defaultValues;\\n}\\n//# sourceMappingURL=getFromAST.js.map\"],\n  \"mappings\": \"AAAA,SAAS,WAAW,yBAAyB;AAC7C,SAAS,mCAAmC;AAErC,gBAAS,cAAc,KAAK;AAC/B,YAAU,OAAO,IAAI,SAAS,YAAY,EAAE;AAC5C,MAAI,aAAa,IAAI,YAChB,OAAO,SAAU,GAAG;AAAE,WAAO,EAAE,SAAS;AAAA,EAAsB,CAAC,EAC/D,IAAI,SAAU,YAAY;AAC3B,QAAI,WAAW,SAAS,uBAAuB;AAC3C,YAAM,kBAAkB,IAAI,WAAW,IAAI;AAAA,IAC/C;AACA,WAAO;AAAA,EACX,CAAC;AACD,YAAU,WAAW,UAAU,GAAG,IAAI,WAAW,MAAM;AACvD,SAAO;AACX;AACO,gBAAS,uBAAuB,KAAK;AACxC,gBAAc,GAAG;AACjB,SAAO,IAAI,YAAY,OAAO,SAAU,YAAY;AAChD,WAAO,WAAW,SAAS;AAAA,EAC/B,CAAC,EAAE,CAAC;AACR;AACO,gBAAS,iBAAiB,KAAK;AAClC,SAAQ,IAAI,YACP,OAAO,SAAU,YAAY;AAC9B,WAAO,WAAW,SAAS,yBAAyB,CAAC,CAAC,WAAW;AAAA,EACrE,CAAC,EACI,IAAI,SAAU,GAAG;AAAE,WAAO,EAAE,KAAK;AAAA,EAAO,CAAC,EAAE,CAAC,KAAK;AAC1D;AAEO,gBAAS,uBAAuB,KAAK;AACxC,SAAO,IAAI,YAAY,OAAO,SAAU,YAAY;AAChD,WAAO,WAAW,SAAS;AAAA,EAC/B,CAAC;AACL;AACO,gBAAS,mBAAmB,KAAK;AACpC,MAAI,WAAW,uBAAuB,GAAG;AACzC,YAAU,YAAY,SAAS,cAAc,SAAS,EAAE;AACxD,SAAO;AACX;AACO,gBAAS,sBAAsB,KAAK;AACvC,YAAU,IAAI,SAAS,YAAY,EAAE;AACrC,YAAU,IAAI,YAAY,UAAU,GAAG,EAAE;AACzC,MAAI,cAAc,IAAI,YAAY,CAAC;AACnC,YAAU,YAAY,SAAS,sBAAsB,EAAE;AACvD,SAAO;AACX;AAMO,gBAAS,kBAAkB,UAAU;AACxC,gBAAc,QAAQ;AACtB,MAAI;AACJ,WAAS,KAAK,GAAG,KAAK,SAAS,aAAa,KAAK,GAAG,QAAQ,MAAM;AAC9D,QAAI,aAAa,GAAG,EAAE;AACtB,QAAI,WAAW,SAAS,uBAAuB;AAC3C,UAAI,YAAY,WAAW;AAC3B,UAAI,cAAc,WACd,cAAc,cACd,cAAc,gBAAgB;AAC9B,eAAO;AAAA,MACX;AAAA,IACJ;AACA,QAAI,WAAW,SAAS,wBAAwB,CAAC,oBAAoB;AAGjE,2BAAqB;AAAA,IACzB;AAAA,EACJ;AACA,MAAI,oBAAoB;AACpB,WAAO;AAAA,EACX;AACA,QAAM,kBAAkB,EAAE;AAC9B;AACO,gBAAS,iBAAiB,YAAY;AACzC,MAAI,gBAAgB,uBAAO,OAAO,IAAI;AACtC,MAAI,OAAO,cAAc,WAAW;AACpC,MAAI,QAAQ,KAAK,QAAQ;AACrB,SAAK,QAAQ,SAAU,KAAK;AACxB,UAAI,IAAI,cAAc;AAClB,oCAA4B,eAAe,IAAI,SAAS,MAAM,IAAI,YAAY;AAAA,MAClF;AAAA,IACJ,CAAC;AAAA,EACL;AACA,SAAO;AACX;\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1713269989229,
      "end": 1713269989229,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1713269989229,
      "end": 1713269989229,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1713269989229,
      "end": 1713269989229,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1713269989229,
      "end": 1713269989229,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1713269989229,
      "end": 1713269989230,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1713269989230,
      "end": 1713269989230,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1713269989230,
      "end": 1713269989230,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1713269989230,
      "end": 1713269989230,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1713269989230,
      "end": 1713269989230,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1713269989230,
      "end": 1713269989230,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1713269989230,
      "end": 1713269989230,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1713269989230,
      "end": 1713269989230,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1713269989230,
      "end": 1713269989230,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1713269989230,
      "end": 1713269989230,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1713269989230,
      "end": 1713269989230,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1713269989230,
      "end": 1713269989230,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1713269989230,
      "end": 1713269989230,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1713269989230,
      "end": 1713269989230,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1713269989230,
      "end": 1713269989230,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1713269989230,
      "end": 1713269989230,
      "order": "normal"
    }
  ]
}
