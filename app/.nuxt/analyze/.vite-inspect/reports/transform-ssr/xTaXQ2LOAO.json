{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/node_modules/@apollo/client/link/http/iterators/nodeStream.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/nodeStream.ts\n */\nimport { canUseAsyncIteratorSymbol } from \"../../../utilities/index.js\";\nexport default function nodeStreamIterator(stream) {\n    var cleanup = null;\n    var error = null;\n    var done = false;\n    var data = [];\n    var waiting = [];\n    function onData(chunk) {\n        if (error)\n            return;\n        if (waiting.length) {\n            var shiftedArr = waiting.shift();\n            if (Array.isArray(shiftedArr) && shiftedArr[0]) {\n                return shiftedArr[0]({ value: chunk, done: false });\n            }\n        }\n        data.push(chunk);\n    }\n    function onError(err) {\n        error = err;\n        var all = waiting.slice();\n        all.forEach(function (pair) {\n            pair[1](err);\n        });\n        !cleanup || cleanup();\n    }\n    function onEnd() {\n        done = true;\n        var all = waiting.slice();\n        all.forEach(function (pair) {\n            pair[0]({ value: undefined, done: true });\n        });\n        !cleanup || cleanup();\n    }\n    cleanup = function () {\n        cleanup = null;\n        stream.removeListener(\"data\", onData);\n        stream.removeListener(\"error\", onError);\n        stream.removeListener(\"end\", onEnd);\n        stream.removeListener(\"finish\", onEnd);\n        stream.removeListener(\"close\", onEnd);\n    };\n    stream.on(\"data\", onData);\n    stream.on(\"error\", onError);\n    stream.on(\"end\", onEnd);\n    stream.on(\"finish\", onEnd);\n    stream.on(\"close\", onEnd);\n    function getNext() {\n        return new Promise(function (resolve, reject) {\n            if (error)\n                return reject(error);\n            if (data.length)\n                return resolve({ value: data.shift(), done: false });\n            if (done)\n                return resolve({ value: undefined, done: true });\n            waiting.push([resolve, reject]);\n        });\n    }\n    var iterator = {\n        next: function () {\n            return getNext();\n        },\n    };\n    if (canUseAsyncIteratorSymbol) {\n        iterator[Symbol.asyncIterator] = function () {\n            return this;\n        };\n    }\n    return iterator;\n}\n//# sourceMappingURL=nodeStream.js.map",
      "start": 1713304786770,
      "end": 1713304786791,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1713304786791,
      "end": 1713304786791,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1713304786791,
      "end": 1713304786791,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1713304786791,
      "end": 1713304786791,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1713304786791,
      "end": 1713304786791,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1713304786791,
      "end": 1713304786791,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1713304786791,
      "end": 1713304786791,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1713304786791,
      "end": 1713304786791,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1713304786791,
      "end": 1713304786791,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1713304786791,
      "end": 1713304786791,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1713304786791,
      "end": 1713304786791,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1713304786791,
      "end": 1713304786791,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1713304786791,
      "end": 1713304786791,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1713304786791,
      "end": 1713304786791,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713304786791,
      "end": 1713304786791,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713304786791,
      "end": 1713304786791,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1713304786791,
      "end": 1713304786791,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1713304786791,
      "end": 1713304786791,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1713304786791,
      "end": 1713304786791,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1713304786791,
      "end": 1713304786791,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713304786791,
      "end": 1713304786791,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1713304786791,
      "end": 1713304786792,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1713304786792,
      "end": 1713304786792,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1713304786792,
      "end": 1713304786792,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1713304786792,
      "end": 1713304786792,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1713304786792,
      "end": 1713304786792,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1713304786792,
      "end": 1713304786792,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1713304786792,
      "end": 1713304786792,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1713304786792,
      "end": 1713304786792,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1713304786792,
      "end": 1713304786792,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1713304786792,
      "end": 1713304786792,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1713304786792,
      "end": 1713304786792,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1713304786792,
      "end": 1713304786792,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1713304786792,
      "end": 1713304786792,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1713304786792,
      "end": 1713304786792,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1713304786792,
      "end": 1713304786792,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1713304786792,
      "end": 1713304786792,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1713304786792,
      "end": 1713304786792,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1713304786792,
      "end": 1713304786792,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1713304786792,
      "end": 1713304786792,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1713304786792,
      "end": 1713304786792,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1713304786792,
      "end": 1713304786792,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1713304786792,
      "end": 1713304786792,
      "order": "normal"
    }
  ]
}
