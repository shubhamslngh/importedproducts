{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/composables/use-awesome-screen.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "export type ScreenSize = 'sm' | 'md' | 'lg' | 'xl'\n\n// { sm: '640px', md: '768px', lg: '1024px', xl: '1280px', '2xl': '1536px' }\nexport const defaultScreenConfig: {\n  [key in ScreenSize]: number\n} = {\n  sm: 640,\n  md: 768,\n  lg: 1024,\n  xl: 1280,\n}\n\nexport const useAwesomeScreen = () => {\n  const screenSize = reactive({\n    width: 0,\n    height: 0,\n  })\n\n  const current = ref<ScreenSize>('sm')\n\n  const getSize = (width?: number) => {\n    if (width === undefined) width = screenSize.width\n    const { sm, md, lg, xl } = defaultScreenConfig\n    if (width < Number(sm)) return 'sm'\n    if (width < Number(md)) return 'md'\n    if (width < Number(lg)) return 'lg'\n    if (width < Number(xl)) return 'xl'\n    return 'xl'\n  }\n\n  const onWindowResize = () => {\n    const { innerWidth, innerHeight } = window\n    screenSize.width = innerWidth\n    screenSize.height = innerHeight\n    current.value = getSize()\n  }\n\n  const higherThan = (size: ScreenSize, defScreenSize?: ScreenSize) => {\n    const { sm, md, lg, xl } = defaultScreenConfig\n    const width = defaultScreenConfig[defScreenSize || current.value]\n    if (size === 'sm') return width >= Number(sm)\n    if (size === 'md') return width >= Number(md)\n    if (size === 'lg') return width >= Number(lg)\n    if (size === 'xl') return width >= Number(xl)\n    return false\n  }\n\n  onMounted(() => {\n    if (typeof window === 'undefined') return\n    window.addEventListener('resize', onWindowResize)\n    current.value = getSize(window.innerWidth)\n  })\n\n  onUnmounted(() => {\n    if (typeof window === 'undefined') return\n    window.removeEventListener('resize', onWindowResize)\n  })\n\n  return {\n    getSize,\n    screenSize,\n    current,\n    higherThan,\n  }\n}\n",
      "start": 1746507072841,
      "end": 1746507072849,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1746507072849,
      "end": 1746507072849,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1746507072849,
      "end": 1746507072849,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1746507072849,
      "end": 1746507072849,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1746507072849,
      "end": 1746507072849,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1746507072849,
      "end": 1746507072849,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1746507072849,
      "end": 1746507072849,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1746507072849,
      "end": 1746507072849,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1746507072849,
      "end": 1746507072849,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "export const defaultScreenConfig = {\n  sm: 640,\n  md: 768,\n  lg: 1024,\n  xl: 1280\n};\nexport const useAwesomeScreen = () => {\n  const screenSize = reactive({\n    width: 0,\n    height: 0\n  });\n  const current = ref(\"sm\");\n  const getSize = (width) => {\n    if (width === void 0)\n      width = screenSize.width;\n    const { sm, md, lg, xl } = defaultScreenConfig;\n    if (width < Number(sm))\n      return \"sm\";\n    if (width < Number(md))\n      return \"md\";\n    if (width < Number(lg))\n      return \"lg\";\n    if (width < Number(xl))\n      return \"xl\";\n    return \"xl\";\n  };\n  const onWindowResize = () => {\n    const { innerWidth, innerHeight } = window;\n    screenSize.width = innerWidth;\n    screenSize.height = innerHeight;\n    current.value = getSize();\n  };\n  const higherThan = (size, defScreenSize) => {\n    const { sm, md, lg, xl } = defaultScreenConfig;\n    const width = defaultScreenConfig[defScreenSize || current.value];\n    if (size === \"sm\")\n      return width >= Number(sm);\n    if (size === \"md\")\n      return width >= Number(md);\n    if (size === \"lg\")\n      return width >= Number(lg);\n    if (size === \"xl\")\n      return width >= Number(xl);\n    return false;\n  };\n  onMounted(() => {\n    if (typeof window === \"undefined\")\n      return;\n    window.addEventListener(\"resize\", onWindowResize);\n    current.value = getSize(window.innerWidth);\n  });\n  onUnmounted(() => {\n    if (typeof window === \"undefined\")\n      return;\n    window.removeEventListener(\"resize\", onWindowResize);\n  });\n  return {\n    getSize,\n    screenSize,\n    current,\n    higherThan\n  };\n};\n",
      "start": 1746507072849,
      "end": 1746507072932,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/shubhamsingh/namma/importedProds/composables/use-awesome-screen.ts"
        ],
        "sourcesContent": [
          "export type ScreenSize = 'sm' | 'md' | 'lg' | 'xl'\n\n// { sm: '640px', md: '768px', lg: '1024px', xl: '1280px', '2xl': '1536px' }\nexport const defaultScreenConfig: {\n  [key in ScreenSize]: number\n} = {\n  sm: 640,\n  md: 768,\n  lg: 1024,\n  xl: 1280,\n}\n\nexport const useAwesomeScreen = () => {\n  const screenSize = reactive({\n    width: 0,\n    height: 0,\n  })\n\n  const current = ref<ScreenSize>('sm')\n\n  const getSize = (width?: number) => {\n    if (width === undefined) width = screenSize.width\n    const { sm, md, lg, xl } = defaultScreenConfig\n    if (width < Number(sm)) return 'sm'\n    if (width < Number(md)) return 'md'\n    if (width < Number(lg)) return 'lg'\n    if (width < Number(xl)) return 'xl'\n    return 'xl'\n  }\n\n  const onWindowResize = () => {\n    const { innerWidth, innerHeight } = window\n    screenSize.width = innerWidth\n    screenSize.height = innerHeight\n    current.value = getSize()\n  }\n\n  const higherThan = (size: ScreenSize, defScreenSize?: ScreenSize) => {\n    const { sm, md, lg, xl } = defaultScreenConfig\n    const width = defaultScreenConfig[defScreenSize || current.value]\n    if (size === 'sm') return width >= Number(sm)\n    if (size === 'md') return width >= Number(md)\n    if (size === 'lg') return width >= Number(lg)\n    if (size === 'xl') return width >= Number(xl)\n    return false\n  }\n\n  onMounted(() => {\n    if (typeof window === 'undefined') return\n    window.addEventListener('resize', onWindowResize)\n    current.value = getSize(window.innerWidth)\n  })\n\n  onUnmounted(() => {\n    if (typeof window === 'undefined') return\n    window.removeEventListener('resize', onWindowResize)\n  })\n\n  return {\n    getSize,\n    screenSize,\n    current,\n    higherThan,\n  }\n}\n"
        ],
        "mappings": "AAGO,aAAM,sBAET;AAAA,EACF,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AACN;AAEO,aAAM,mBAAmB,MAAM;AACpC,QAAM,aAAa,SAAS;AAAA,IAC1B,OAAO;AAAA,IACP,QAAQ;AAAA,EACV,CAAC;AAED,QAAM,UAAU,IAAgB,IAAI;AAEpC,QAAM,UAAU,CAAC,UAAmB;AAClC,QAAI,UAAU;AAAW,cAAQ,WAAW;AAC5C,UAAM,EAAE,IAAI,IAAI,IAAI,GAAG,IAAI;AAC3B,QAAI,QAAQ,OAAO,EAAE;AAAG,aAAO;AAC/B,QAAI,QAAQ,OAAO,EAAE;AAAG,aAAO;AAC/B,QAAI,QAAQ,OAAO,EAAE;AAAG,aAAO;AAC/B,QAAI,QAAQ,OAAO,EAAE;AAAG,aAAO;AAC/B,WAAO;AAAA,EACT;AAEA,QAAM,iBAAiB,MAAM;AAC3B,UAAM,EAAE,YAAY,YAAY,IAAI;AACpC,eAAW,QAAQ;AACnB,eAAW,SAAS;AACpB,YAAQ,QAAQ,QAAQ;AAAA,EAC1B;AAEA,QAAM,aAAa,CAAC,MAAkB,kBAA+B;AACnE,UAAM,EAAE,IAAI,IAAI,IAAI,GAAG,IAAI;AAC3B,UAAM,QAAQ,oBAAoB,iBAAiB,QAAQ,KAAK;AAChE,QAAI,SAAS;AAAM,aAAO,SAAS,OAAO,EAAE;AAC5C,QAAI,SAAS;AAAM,aAAO,SAAS,OAAO,EAAE;AAC5C,QAAI,SAAS;AAAM,aAAO,SAAS,OAAO,EAAE;AAC5C,QAAI,SAAS;AAAM,aAAO,SAAS,OAAO,EAAE;AAC5C,WAAO;AAAA,EACT;AAEA,YAAU,MAAM;AACd,QAAI,OAAO,WAAW;AAAa;AACnC,WAAO,iBAAiB,UAAU,cAAc;AAChD,YAAQ,QAAQ,QAAQ,OAAO,UAAU;AAAA,EAC3C,CAAC;AAED,cAAY,MAAM;AAChB,QAAI,OAAO,WAAW;AAAa;AACnC,WAAO,oBAAoB,UAAU,cAAc;AAAA,EACrD,CAAC;AAED,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1746507072932,
      "end": 1746507072932,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1746507072932,
      "end": 1746507072932,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1746507072932,
      "end": 1746507072932,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1746507072932,
      "end": 1746507072932,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746507072932,
      "end": 1746507072932,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746507072932,
      "end": 1746507072932,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1746507072932,
      "end": 1746507072932,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1746507072932,
      "end": 1746507072932,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1746507072932,
      "end": 1746507072932,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1746507072932,
      "end": 1746507072932,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746507072932,
      "end": 1746507072932,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1746507072932,
      "end": 1746507072933,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "export const defaultScreenConfig = {\n  sm: 640,\n  md: 768,\n  lg: 1024,\n  xl: 1280\n};\nexport const useAwesomeScreen = () => {\n  const screenSize = reactive({\n    width: 0,\n    height: 0\n  });\n  const current = ref(\"sm\");\n  const getSize = (width) => {\n    if (width === void 0)\n      width = screenSize.width;\n    const { sm, md, lg, xl } = defaultScreenConfig;\n    if (width < Number(sm))\n      return \"sm\";\n    if (width < Number(md))\n      return \"md\";\n    if (width < Number(lg))\n      return \"lg\";\n    if (width < Number(xl))\n      return \"xl\";\n    return \"xl\";\n  };\n  const onWindowResize = () => {\n    const { innerWidth, innerHeight } = void 0;\n    screenSize.width = innerWidth;\n    screenSize.height = innerHeight;\n    current.value = getSize();\n  };\n  const higherThan = (size, defScreenSize) => {\n    const { sm, md, lg, xl } = defaultScreenConfig;\n    const width = defaultScreenConfig[defScreenSize || current.value];\n    if (size === \"sm\")\n      return width >= Number(sm);\n    if (size === \"md\")\n      return width >= Number(md);\n    if (size === \"lg\")\n      return width >= Number(lg);\n    if (size === \"xl\")\n      return width >= Number(xl);\n    return false;\n  };\n  onMounted(() => {\n    if (true)\n      return;\n    (void 0).addEventListener(\"resize\", onWindowResize);\n    current.value = getSize((void 0).innerWidth);\n  });\n  onUnmounted(() => {\n    if (true)\n      return;\n    (void 0).removeEventListener(\"resize\", onWindowResize);\n  });\n  return {\n    getSize,\n    screenSize,\n    current,\n    higherThan\n  };\n};\n",
      "start": 1746507072933,
      "end": 1746507072950,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/shubhamsingh/namma/importedProds/composables/use-awesome-screen.ts\"],\n  \"sourcesContent\": [\"export const defaultScreenConfig = {\\n  sm: 640,\\n  md: 768,\\n  lg: 1024,\\n  xl: 1280\\n};\\nexport const useAwesomeScreen = () => {\\n  const screenSize = reactive({\\n    width: 0,\\n    height: 0\\n  });\\n  const current = ref(\\\"sm\\\");\\n  const getSize = (width) => {\\n    if (width === void 0)\\n      width = screenSize.width;\\n    const { sm, md, lg, xl } = defaultScreenConfig;\\n    if (width < Number(sm))\\n      return \\\"sm\\\";\\n    if (width < Number(md))\\n      return \\\"md\\\";\\n    if (width < Number(lg))\\n      return \\\"lg\\\";\\n    if (width < Number(xl))\\n      return \\\"xl\\\";\\n    return \\\"xl\\\";\\n  };\\n  const onWindowResize = () => {\\n    const { innerWidth, innerHeight } = window;\\n    screenSize.width = innerWidth;\\n    screenSize.height = innerHeight;\\n    current.value = getSize();\\n  };\\n  const higherThan = (size, defScreenSize) => {\\n    const { sm, md, lg, xl } = defaultScreenConfig;\\n    const width = defaultScreenConfig[defScreenSize || current.value];\\n    if (size === \\\"sm\\\")\\n      return width >= Number(sm);\\n    if (size === \\\"md\\\")\\n      return width >= Number(md);\\n    if (size === \\\"lg\\\")\\n      return width >= Number(lg);\\n    if (size === \\\"xl\\\")\\n      return width >= Number(xl);\\n    return false;\\n  };\\n  onMounted(() => {\\n    if (typeof window === \\\"undefined\\\")\\n      return;\\n    window.addEventListener(\\\"resize\\\", onWindowResize);\\n    current.value = getSize(window.innerWidth);\\n  });\\n  onUnmounted(() => {\\n    if (typeof window === \\\"undefined\\\")\\n      return;\\n    window.removeEventListener(\\\"resize\\\", onWindowResize);\\n  });\\n  return {\\n    getSize,\\n    screenSize,\\n    current,\\n    higherThan\\n  };\\n};\\n\"],\n  \"mappings\": \"AAAO,aAAM,sBAAsB;AAAA,EACjC,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AACN;AACO,aAAM,mBAAmB,MAAM;AACpC,QAAM,aAAa,SAAS;AAAA,IAC1B,OAAO;AAAA,IACP,QAAQ;AAAA,EACV,CAAC;AACD,QAAM,UAAU,IAAI,IAAI;AACxB,QAAM,UAAU,CAAC,UAAU;AACzB,QAAI,UAAU;AACZ,cAAQ,WAAW;AACrB,UAAM,EAAE,IAAI,IAAI,IAAI,GAAG,IAAI;AAC3B,QAAI,QAAQ,OAAO,EAAE;AACnB,aAAO;AACT,QAAI,QAAQ,OAAO,EAAE;AACnB,aAAO;AACT,QAAI,QAAQ,OAAO,EAAE;AACnB,aAAO;AACT,QAAI,QAAQ,OAAO,EAAE;AACnB,aAAO;AACT,WAAO;AAAA,EACT;AACA,QAAM,iBAAiB,MAAM;AAC3B,UAAM,EAAE,YAAY,YAAY,IAAI;AACpC,eAAW,QAAQ;AACnB,eAAW,SAAS;AACpB,YAAQ,QAAQ,QAAQ;AAAA,EAC1B;AACA,QAAM,aAAa,CAAC,MAAM,kBAAkB;AAC1C,UAAM,EAAE,IAAI,IAAI,IAAI,GAAG,IAAI;AAC3B,UAAM,QAAQ,oBAAoB,iBAAiB,QAAQ,KAAK;AAChE,QAAI,SAAS;AACX,aAAO,SAAS,OAAO,EAAE;AAC3B,QAAI,SAAS;AACX,aAAO,SAAS,OAAO,EAAE;AAC3B,QAAI,SAAS;AACX,aAAO,SAAS,OAAO,EAAE;AAC3B,QAAI,SAAS;AACX,aAAO,SAAS,OAAO,EAAE;AAC3B,WAAO;AAAA,EACT;AACA,YAAU,MAAM;AACd,QAAI;AACF;AACF,aAAO,iBAAiB,UAAU,cAAc;AAChD,YAAQ,QAAQ,QAAQ,SAAO,UAAU;AAAA,EAC3C,CAAC;AACD,cAAY,MAAM;AAChB,QAAI;AACF;AACF,aAAO,oBAAoB,UAAU,cAAc;AAAA,EACrD,CAAC;AACD,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1746507072950,
      "end": 1746507072950,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1746507072950,
      "end": 1746507072950,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1746507072950,
      "end": 1746507072950,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1746507072950,
      "end": 1746507072950,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1746507072950,
      "end": 1746507072950,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1746507072950,
      "end": 1746507072950,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1746507072950,
      "end": 1746507072950,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1746507072950,
      "end": 1746507072950,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1746507072950,
      "end": 1746507072950,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { reactive, ref, onMounted, onUnmounted } from 'vue';\nexport const defaultScreenConfig = {\n  sm: 640,\n  md: 768,\n  lg: 1024,\n  xl: 1280\n};\nexport const useAwesomeScreen = () => {\n  const screenSize = reactive({\n    width: 0,\n    height: 0\n  });\n  const current = ref(\"sm\");\n  const getSize = (width) => {\n    if (width === void 0)\n      width = screenSize.width;\n    const { sm, md, lg, xl } = defaultScreenConfig;\n    if (width < Number(sm))\n      return \"sm\";\n    if (width < Number(md))\n      return \"md\";\n    if (width < Number(lg))\n      return \"lg\";\n    if (width < Number(xl))\n      return \"xl\";\n    return \"xl\";\n  };\n  const onWindowResize = () => {\n    const { innerWidth, innerHeight } = void 0;\n    screenSize.width = innerWidth;\n    screenSize.height = innerHeight;\n    current.value = getSize();\n  };\n  const higherThan = (size, defScreenSize) => {\n    const { sm, md, lg, xl } = defaultScreenConfig;\n    const width = defaultScreenConfig[defScreenSize || current.value];\n    if (size === \"sm\")\n      return width >= Number(sm);\n    if (size === \"md\")\n      return width >= Number(md);\n    if (size === \"lg\")\n      return width >= Number(lg);\n    if (size === \"xl\")\n      return width >= Number(xl);\n    return false;\n  };\n  onMounted(() => {\n    if (true)\n      return;\n    (void 0).addEventListener(\"resize\", onWindowResize);\n    current.value = getSize((void 0).innerWidth);\n  });\n  onUnmounted(() => {\n    if (true)\n      return;\n    (void 0).removeEventListener(\"resize\", onWindowResize);\n  });\n  return {\n    getSize,\n    screenSize,\n    current,\n    higherThan\n  };\n};\n",
      "start": 1746507072950,
      "end": 1746507072950,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACbf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;"
      }
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { reactive, ref, onMounted, onUnmounted } from 'vue';\nexport const defaultScreenConfig = {\n  sm: 640,\n  md: 768,\n  lg: 1024,\n  xl: 1280\n};\nexport const useAwesomeScreen = () => {\n  const screenSize = reactive({\n    width: 0,\n    height: 0\n  });\n  const current = ref(\"sm\");\n  const getSize = (width) => {\n    if (width === void 0)\n      width = screenSize.width;\n    const { sm, md, lg, xl } = defaultScreenConfig;\n    if (width < Number(sm))\n      return \"sm\";\n    if (width < Number(md))\n      return \"md\";\n    if (width < Number(lg))\n      return \"lg\";\n    if (width < Number(xl))\n      return \"xl\";\n    return \"xl\";\n  };\n  const onWindowResize = () => {\n    const { innerWidth, innerHeight } = void 0;\n    screenSize.width = innerWidth;\n    screenSize.height = innerHeight;\n    current.value = getSize();\n  };\n  const higherThan = (size, defScreenSize) => {\n    const { sm, md, lg, xl } = defaultScreenConfig;\n    const width = defaultScreenConfig[defScreenSize || current.value];\n    if (size === \"sm\")\n      return width >= Number(sm);\n    if (size === \"md\")\n      return width >= Number(md);\n    if (size === \"lg\")\n      return width >= Number(lg);\n    if (size === \"xl\")\n      return width >= Number(xl);\n    return false;\n  };\n  onMounted(() => {\n    if (true)\n      return;\n    (void 0).addEventListener(\"resize\", onWindowResize);\n    current.value = getSize((void 0).innerWidth);\n  });\n  onUnmounted(() => {\n    if (true)\n      return;\n    (void 0).removeEventListener(\"resize\", onWindowResize);\n  });\n  return {\n    getSize,\n    screenSize,\n    current,\n    higherThan\n  };\n};\n",
      "start": 1746507072950,
      "end": 1746507072950,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACbf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1746507072950,
      "end": 1746507072950,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1746507072950,
      "end": 1746507072950,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1746507072950,
      "end": 1746507072950,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1746507072950,
      "end": 1746507072950,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1746507072950,
      "end": 1746507072950,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1746507072950,
      "end": 1746507072950,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "result": "import { reactive, ref, onMounted, onUnmounted } from 'vue';\nexport const defaultScreenConfig = {\n  sm: 640,\n  md: 768,\n  lg: 1024,\n  xl: 1280\n};\nexport const useAwesomeScreen = () => {\n  const screenSize = reactive({\n    width: 0,\n    height: 0\n  });\n  const current = ref(\"sm\");\n  const getSize = (width) => {\n    if (width === void 0)\n      width = screenSize.width;\n    const { sm, md, lg, xl } = defaultScreenConfig;\n    if (width < Number(sm))\n      return \"sm\";\n    if (width < Number(md))\n      return \"md\";\n    if (width < Number(lg))\n      return \"lg\";\n    if (width < Number(xl))\n      return \"xl\";\n    return \"xl\";\n  };\n  const onWindowResize = () => {\n    const { innerWidth, innerHeight } = void 0;\n    screenSize.width = innerWidth;\n    screenSize.height = innerHeight;\n    current.value = getSize();\n  };\n  const higherThan = (size, defScreenSize) => {\n    const { sm, md, lg, xl } = defaultScreenConfig;\n    const width = defaultScreenConfig[defScreenSize || current.value];\n    if (size === \"sm\")\n      return width >= Number(sm);\n    if (size === \"md\")\n      return width >= Number(md);\n    if (size === \"lg\")\n      return width >= Number(lg);\n    if (size === \"xl\")\n      return width >= Number(xl);\n    return false;\n  };\n   false && /*@__PURE__*/ onMounted(() => {\n    if (true)\n      return;\n    (void 0).addEventListener(\"resize\", onWindowResize);\n    current.value = getSize((void 0).innerWidth);\n  });\n  onUnmounted(() => {\n    if (true)\n      return;\n    (void 0).removeEventListener(\"resize\", onWindowResize);\n  });\n  return {\n    getSize,\n    screenSize,\n    current,\n    higherThan\n  };\n};\n",
      "start": 1746507072950,
      "end": 1746507072951,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC;AACJ,mCAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACbf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;"
      }
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1746507072951,
      "end": 1746507072951,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1746507072951,
      "end": 1746507072951,
      "order": "normal"
    }
  ]
}
