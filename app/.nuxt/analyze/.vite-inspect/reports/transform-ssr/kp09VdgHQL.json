{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/node_modules/@apollo/client/utilities/globals/global.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { maybe } from \"./maybe.js\";\nexport default (maybe(function () { return globalThis; }) ||\n    maybe(function () { return window; }) ||\n    maybe(function () { return self; }) ||\n    maybe(function () { return global; }) || // We don't expect the Function constructor ever to be invoked at runtime, as\n// long as at least one of globalThis, window, self, or global is defined, so\n// we are under no obligation to make it easy for static analysis tools to\n// detect syntactic usage of the Function constructor. If you think you can\n// improve your static analysis to detect this obfuscation, think again. This\n// is an arms race you cannot win, at least not in JavaScript.\nmaybe(function () {\n    return maybe.constructor(\"return this\")();\n}));\n//# sourceMappingURL=global.js.map",
      "start": 1746507072253,
      "end": 1746507072278,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1746507072278,
      "end": 1746507072278,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1746507072278,
      "end": 1746507072278,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1746507072278,
      "end": 1746507072278,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1746507072278,
      "end": 1746507072278,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1746507072278,
      "end": 1746507072278,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1746507072278,
      "end": 1746507072278,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1746507072278,
      "end": 1746507072278,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1746507072278,
      "end": 1746507072278,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1746507072278,
      "end": 1746507072278,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1746507072278,
      "end": 1746507072278,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1746507072278,
      "end": 1746507072278,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1746507072278,
      "end": 1746507072278,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1746507072278,
      "end": 1746507072278,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746507072278,
      "end": 1746507072278,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746507072278,
      "end": 1746507072278,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1746507072278,
      "end": 1746507072278,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1746507072278,
      "end": 1746507072278,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1746507072278,
      "end": 1746507072278,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1746507072278,
      "end": 1746507072278,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746507072278,
      "end": 1746507072278,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1746507072278,
      "end": 1746507072278,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { maybe } from \"./maybe.js\";\nexport default maybe(function() {\n  return globalThis;\n}) || maybe(function() {\n  return void 0;\n}) || maybe(function() {\n  return self;\n}) || maybe(function() {\n  return global;\n}) || // We don't expect the Function constructor ever to be invoked at runtime, as\n// long as at least one of globalThis, window, self, or global is defined, so\n// we are under no obligation to make it easy for static analysis tools to\n// detect syntactic usage of the Function constructor. If you think you can\n// improve your static analysis to detect this obfuscation, think again. This\n// is an arms race you cannot win, at least not in JavaScript.\nmaybe(function() {\n  return maybe.constructor(\"return this\")();\n});\n",
      "start": 1746507072278,
      "end": 1746507072610,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/shubhamsingh/namma/importedProds/node_modules/@apollo/client/utilities/globals/global.js\"],\n  \"sourcesContent\": [\"import { maybe } from \\\"./maybe.js\\\";\\nexport default (maybe(function () { return globalThis; }) ||\\n    maybe(function () { return window; }) ||\\n    maybe(function () { return self; }) ||\\n    maybe(function () { return global; }) || // We don't expect the Function constructor ever to be invoked at runtime, as\\n// long as at least one of globalThis, window, self, or global is defined, so\\n// we are under no obligation to make it easy for static analysis tools to\\n// detect syntactic usage of the Function constructor. If you think you can\\n// improve your static analysis to detect this obfuscation, think again. This\\n// is an arms race you cannot win, at least not in JavaScript.\\nmaybe(function () {\\n    return maybe.constructor(\\\"return this\\\")();\\n}));\\n//# sourceMappingURL=global.js.map\"],\n  \"mappings\": \"AAAA,SAAS,aAAa;AACtB,eAAgB,MAAM,WAAY;AAAE,SAAO;AAAY,CAAC,KACpD,MAAM,WAAY;AAAE,SAAO;AAAQ,CAAC,KACpC,MAAM,WAAY;AAAE,SAAO;AAAM,CAAC,KAClC,MAAM,WAAY;AAAE,SAAO;AAAQ,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAMxC,MAAM,WAAY;AACd,SAAO,MAAM,YAAY,aAAa,EAAE;AAC5C,CAAC;\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1746507072610,
      "end": 1746507072610,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1746507072610,
      "end": 1746507072610,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1746507072610,
      "end": 1746507072610,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1746507072610,
      "end": 1746507072610,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1746507072610,
      "end": 1746507072610,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1746507072610,
      "end": 1746507072610,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1746507072610,
      "end": 1746507072610,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1746507072610,
      "end": 1746507072610,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1746507072610,
      "end": 1746507072610,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1746507072610,
      "end": 1746507072610,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1746507072610,
      "end": 1746507072610,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1746507072610,
      "end": 1746507072610,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1746507072610,
      "end": 1746507072610,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1746507072610,
      "end": 1746507072610,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1746507072610,
      "end": 1746507072610,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1746507072610,
      "end": 1746507072610,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1746507072610,
      "end": 1746507072610,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1746507072610,
      "end": 1746507072610,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1746507072610,
      "end": 1746507072610,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1746507072611,
      "end": 1746507072611,
      "order": "normal"
    }
  ]
}
