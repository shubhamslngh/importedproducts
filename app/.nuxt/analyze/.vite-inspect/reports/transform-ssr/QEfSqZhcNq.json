{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/node_modules/@apollo/client/utilities/globals/invariantWrappers.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { invariant as originalInvariant, InvariantError } from \"ts-invariant\";\nimport { version } from \"../../version.js\";\nimport global from \"./global.js\";\nimport { stringifyForDisplay } from \"../common/stringifyForDisplay.js\";\nfunction wrap(fn) {\n    return function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (typeof message === \"number\") {\n            var arg0 = message;\n            message = getHandledErrorMsg(arg0);\n            if (!message) {\n                message = getFallbackErrorMsg(arg0, args);\n                args = [];\n            }\n        }\n        fn.apply(void 0, [message].concat(args));\n    };\n}\nvar invariant = Object.assign(function invariant(condition, message) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    if (!condition) {\n        originalInvariant(condition, getHandledErrorMsg(message, args) || getFallbackErrorMsg(message, args));\n    }\n}, {\n    debug: wrap(originalInvariant.debug),\n    log: wrap(originalInvariant.log),\n    warn: wrap(originalInvariant.warn),\n    error: wrap(originalInvariant.error),\n});\n/**\n * Returns an InvariantError.\n *\n * `message` can only be a string, a concatenation of strings, or a ternary statement\n * that results in a string. This will be enforced on build, where the message will\n * be replaced with a message number.\n * String substitutions with %s are supported and will also return\n * pretty-stringified objects.\n * Excess `optionalParams` will be swallowed.\n */\nfunction newInvariantError(message) {\n    var optionalParams = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        optionalParams[_i - 1] = arguments[_i];\n    }\n    return new InvariantError(getHandledErrorMsg(message, optionalParams) ||\n        getFallbackErrorMsg(message, optionalParams));\n}\nvar ApolloErrorMessageHandler = Symbol.for(\"ApolloErrorMessageHandler_\" + version);\nfunction stringify(arg) {\n    return typeof arg == \"string\" ? arg : (stringifyForDisplay(arg, 2).slice(0, 1000));\n}\nfunction getHandledErrorMsg(message, messageArgs) {\n    if (messageArgs === void 0) { messageArgs = []; }\n    if (!message)\n        return;\n    return (global[ApolloErrorMessageHandler] &&\n        global[ApolloErrorMessageHandler](message, messageArgs.map(stringify)));\n}\nfunction getFallbackErrorMsg(message, messageArgs) {\n    if (messageArgs === void 0) { messageArgs = []; }\n    if (!message)\n        return;\n    return \"An error occurred! For more details, see the full error text at https://go.apollo.dev/c/err#\".concat(encodeURIComponent(JSON.stringify({\n        version: version,\n        message: message,\n        args: messageArgs.map(stringify),\n    })));\n}\nexport { invariant, InvariantError, newInvariantError, ApolloErrorMessageHandler, };\n//# sourceMappingURL=invariantWrappers.js.map",
      "start": 1710863483875,
      "end": 1710863483879,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1710863483879,
      "end": 1710863483879,
      "order": "normal"
    }
  ]
}
