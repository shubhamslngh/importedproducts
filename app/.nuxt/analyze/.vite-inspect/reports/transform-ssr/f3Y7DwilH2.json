{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/node_modules/@apollo/client/utilities/common/maybeDeepFreeze.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { isNonNullObject } from \"./objects.js\";\nfunction deepFreeze(value) {\n    var workSet = new Set([value]);\n    workSet.forEach(function (obj) {\n        if (isNonNullObject(obj) && shallowFreeze(obj) === obj) {\n            Object.getOwnPropertyNames(obj).forEach(function (name) {\n                if (isNonNullObject(obj[name]))\n                    workSet.add(obj[name]);\n            });\n        }\n    });\n    return value;\n}\nfunction shallowFreeze(obj) {\n    if (globalThis.__DEV__ !== false && !Object.isFrozen(obj)) {\n        try {\n            Object.freeze(obj);\n        }\n        catch (e) {\n            // Some types like Uint8Array and Node.js's Buffer cannot be frozen, but\n            // they all throw a TypeError when you try, so we re-throw any exceptions\n            // that are not TypeErrors, since that would be unexpected.\n            if (e instanceof TypeError)\n                return null;\n            throw e;\n        }\n    }\n    return obj;\n}\nexport function maybeDeepFreeze(obj) {\n    if (globalThis.__DEV__ !== false) {\n        deepFreeze(obj);\n    }\n    return obj;\n}\n//# sourceMappingURL=maybeDeepFreeze.js.map",
      "start": 1716330192717,
      "end": 1716330192742,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716330192742,
      "end": 1716330192742,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716330192742,
      "end": 1716330192742,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716330192742,
      "end": 1716330192742,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716330192742,
      "end": 1716330192742,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1716330192742,
      "end": 1716330192742,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1716330192742,
      "end": 1716330192742,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716330192742,
      "end": 1716330192742,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716330192742,
      "end": 1716330192742,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716330192742,
      "end": 1716330192742,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716330192742,
      "end": 1716330192742,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716330192742,
      "end": 1716330192742,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1716330192742,
      "end": 1716330192742,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716330192742,
      "end": 1716330192742,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716330192742,
      "end": 1716330192742,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716330192742,
      "end": 1716330192742,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716330192742,
      "end": 1716330192742,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716330192742,
      "end": 1716330192742,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1716330192742,
      "end": 1716330192742,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716330192742,
      "end": 1716330192742,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716330192742,
      "end": 1716330192742,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716330192742,
      "end": 1716330192742,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { isNonNullObject } from \"./objects.js\";\nfunction deepFreeze(value) {\n  var workSet = /* @__PURE__ */ new Set([value]);\n  workSet.forEach(function(obj) {\n    if (isNonNullObject(obj) && shallowFreeze(obj) === obj) {\n      Object.getOwnPropertyNames(obj).forEach(function(name) {\n        if (isNonNullObject(obj[name]))\n          workSet.add(obj[name]);\n      });\n    }\n  });\n  return value;\n}\nfunction shallowFreeze(obj) {\n  if (globalThis.__DEV__ !== false && !Object.isFrozen(obj)) {\n    try {\n      Object.freeze(obj);\n    } catch (e) {\n      if (e instanceof TypeError)\n        return null;\n      throw e;\n    }\n  }\n  return obj;\n}\nexport function maybeDeepFreeze(obj) {\n  if (globalThis.__DEV__ !== false) {\n    deepFreeze(obj);\n  }\n  return obj;\n}\n",
      "start": 1716330192742,
      "end": 1716330193779,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/shubhamsingh/namma/importedProds/node_modules/@apollo/client/utilities/common/maybeDeepFreeze.js\"],\n  \"sourcesContent\": [\"import { isNonNullObject } from \\\"./objects.js\\\";\\nfunction deepFreeze(value) {\\n    var workSet = new Set([value]);\\n    workSet.forEach(function (obj) {\\n        if (isNonNullObject(obj) && shallowFreeze(obj) === obj) {\\n            Object.getOwnPropertyNames(obj).forEach(function (name) {\\n                if (isNonNullObject(obj[name]))\\n                    workSet.add(obj[name]);\\n            });\\n        }\\n    });\\n    return value;\\n}\\nfunction shallowFreeze(obj) {\\n    if (globalThis.__DEV__ !== false && !Object.isFrozen(obj)) {\\n        try {\\n            Object.freeze(obj);\\n        }\\n        catch (e) {\\n            // Some types like Uint8Array and Node.js's Buffer cannot be frozen, but\\n            // they all throw a TypeError when you try, so we re-throw any exceptions\\n            // that are not TypeErrors, since that would be unexpected.\\n            if (e instanceof TypeError)\\n                return null;\\n            throw e;\\n        }\\n    }\\n    return obj;\\n}\\nexport function maybeDeepFreeze(obj) {\\n    if (globalThis.__DEV__ !== false) {\\n        deepFreeze(obj);\\n    }\\n    return obj;\\n}\\n//# sourceMappingURL=maybeDeepFreeze.js.map\"],\n  \"mappings\": \"AAAA,SAAS,uBAAuB;AAChC,SAAS,WAAW,OAAO;AACvB,MAAI,UAAU,oBAAI,IAAI,CAAC,KAAK,CAAC;AAC7B,UAAQ,QAAQ,SAAU,KAAK;AAC3B,QAAI,gBAAgB,GAAG,KAAK,cAAc,GAAG,MAAM,KAAK;AACpD,aAAO,oBAAoB,GAAG,EAAE,QAAQ,SAAU,MAAM;AACpD,YAAI,gBAAgB,IAAI,IAAI,CAAC;AACzB,kBAAQ,IAAI,IAAI,IAAI,CAAC;AAAA,MAC7B,CAAC;AAAA,IACL;AAAA,EACJ,CAAC;AACD,SAAO;AACX;AACA,SAAS,cAAc,KAAK;AACxB,MAAI,WAAW,YAAY,SAAS,CAAC,OAAO,SAAS,GAAG,GAAG;AACvD,QAAI;AACA,aAAO,OAAO,GAAG;AAAA,IACrB,SACO,GAAG;AAIN,UAAI,aAAa;AACb,eAAO;AACX,YAAM;AAAA,IACV;AAAA,EACJ;AACA,SAAO;AACX;AACO,gBAAS,gBAAgB,KAAK;AACjC,MAAI,WAAW,YAAY,OAAO;AAC9B,eAAW,GAAG;AAAA,EAClB;AACA,SAAO;AACX;\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1716330193779,
      "end": 1716330193779,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716330193779,
      "end": 1716330193779,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716330193779,
      "end": 1716330193779,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716330193779,
      "end": 1716330193779,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716330193779,
      "end": 1716330193779,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716330193779,
      "end": 1716330193779,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716330193779,
      "end": 1716330193779,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716330193779,
      "end": 1716330193779,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716330193779,
      "end": 1716330193779,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716330193779,
      "end": 1716330193779,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716330193779,
      "end": 1716330193779,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716330193779,
      "end": 1716330193779,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716330193779,
      "end": 1716330193779,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716330193779,
      "end": 1716330193779,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716330193779,
      "end": 1716330193779,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1716330193779,
      "end": 1716330193779,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716330193779,
      "end": 1716330193779,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716330193779,
      "end": 1716330193779,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716330193779,
      "end": 1716330193779,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716330193779,
      "end": 1716330193779,
      "order": "normal"
    }
  ]
}
