{
  "resolvedId": "/Users/shubhamsingh/namma/importedProds/node_modules/@apollo/client/utilities/graphql/directives.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { invariant } from \"../globals/index.js\";\nimport { visit, BREAK } from \"graphql\";\nexport function shouldInclude(_a, variables) {\n    var directives = _a.directives;\n    if (!directives || !directives.length) {\n        return true;\n    }\n    return getInclusionDirectives(directives).every(function (_a) {\n        var directive = _a.directive, ifArgument = _a.ifArgument;\n        var evaledValue = false;\n        if (ifArgument.value.kind === \"Variable\") {\n            evaledValue =\n                variables && variables[ifArgument.value.name.value];\n            invariant(evaledValue !== void 0, 67, directive.name.value);\n        }\n        else {\n            evaledValue = ifArgument.value.value;\n        }\n        return directive.name.value === \"skip\" ? !evaledValue : evaledValue;\n    });\n}\nexport function getDirectiveNames(root) {\n    var names = [];\n    visit(root, {\n        Directive: function (node) {\n            names.push(node.name.value);\n        },\n    });\n    return names;\n}\nexport var hasAnyDirectives = function (names, root) {\n    return hasDirectives(names, root, false);\n};\nexport var hasAllDirectives = function (names, root) {\n    return hasDirectives(names, root, true);\n};\nexport function hasDirectives(names, root, all) {\n    var nameSet = new Set(names);\n    var uniqueCount = nameSet.size;\n    visit(root, {\n        Directive: function (node) {\n            if (nameSet.delete(node.name.value) && (!all || !nameSet.size)) {\n                return BREAK;\n            }\n        },\n    });\n    // If we found all the names, nameSet will be empty. If we only care about\n    // finding some of them, the < condition is sufficient.\n    return all ? !nameSet.size : nameSet.size < uniqueCount;\n}\nexport function hasClientExports(document) {\n    return document && hasDirectives([\"client\", \"export\"], document, true);\n}\nfunction isInclusionDirective(_a) {\n    var value = _a.name.value;\n    return value === \"skip\" || value === \"include\";\n}\nexport function getInclusionDirectives(directives) {\n    var result = [];\n    if (directives && directives.length) {\n        directives.forEach(function (directive) {\n            if (!isInclusionDirective(directive))\n                return;\n            var directiveArguments = directive.arguments;\n            var directiveName = directive.name.value;\n            invariant(directiveArguments && directiveArguments.length === 1, 68, directiveName);\n            var ifArgument = directiveArguments[0];\n            invariant(ifArgument.name && ifArgument.name.value === \"if\", 69, directiveName);\n            var ifValue = ifArgument.value;\n            // means it has to be a variable value if this is a valid @skip or @include directive\n            invariant(ifValue &&\n                (ifValue.kind === \"Variable\" || ifValue.kind === \"BooleanValue\"), 70, directiveName);\n            result.push({ directive: directive, ifArgument: ifArgument });\n        });\n    }\n    return result;\n}\n//# sourceMappingURL=directives.js.map",
      "start": 1716330192678,
      "end": 1716330192725,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716330192725,
      "end": 1716330192725,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716330192725,
      "end": 1716330192725,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716330192725,
      "end": 1716330192725,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716330192725,
      "end": 1716330192725,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1716330192725,
      "end": 1716330192725,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1716330192725,
      "end": 1716330192725,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716330192725,
      "end": 1716330192725,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716330192725,
      "end": 1716330192725,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716330192725,
      "end": 1716330192725,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716330192725,
      "end": 1716330192725,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716330192725,
      "end": 1716330192725,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1716330192725,
      "end": 1716330192725,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716330192725,
      "end": 1716330192725,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716330192725,
      "end": 1716330192725,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716330192725,
      "end": 1716330192725,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716330192725,
      "end": 1716330192725,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716330192725,
      "end": 1716330192725,
      "order": "normal"
    },
    {
      "name": "graphql",
      "start": 1716330192725,
      "end": 1716330192725,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716330192725,
      "end": 1716330192725,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716330192725,
      "end": 1716330192725,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716330192725,
      "end": 1716330192725,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { invariant } from \"../globals/index.js\";\nimport { visit, BREAK } from \"graphql\";\nexport function shouldInclude(_a, variables) {\n  var directives = _a.directives;\n  if (!directives || !directives.length) {\n    return true;\n  }\n  return getInclusionDirectives(directives).every(function(_a2) {\n    var directive = _a2.directive, ifArgument = _a2.ifArgument;\n    var evaledValue = false;\n    if (ifArgument.value.kind === \"Variable\") {\n      evaledValue = variables && variables[ifArgument.value.name.value];\n      invariant(evaledValue !== void 0, 67, directive.name.value);\n    } else {\n      evaledValue = ifArgument.value.value;\n    }\n    return directive.name.value === \"skip\" ? !evaledValue : evaledValue;\n  });\n}\nexport function getDirectiveNames(root) {\n  var names = [];\n  visit(root, {\n    Directive: function(node) {\n      names.push(node.name.value);\n    }\n  });\n  return names;\n}\nexport var hasAnyDirectives = function(names, root) {\n  return hasDirectives(names, root, false);\n};\nexport var hasAllDirectives = function(names, root) {\n  return hasDirectives(names, root, true);\n};\nexport function hasDirectives(names, root, all) {\n  var nameSet = new Set(names);\n  var uniqueCount = nameSet.size;\n  visit(root, {\n    Directive: function(node) {\n      if (nameSet.delete(node.name.value) && (!all || !nameSet.size)) {\n        return BREAK;\n      }\n    }\n  });\n  return all ? !nameSet.size : nameSet.size < uniqueCount;\n}\nexport function hasClientExports(document) {\n  return document && hasDirectives([\"client\", \"export\"], document, true);\n}\nfunction isInclusionDirective(_a) {\n  var value = _a.name.value;\n  return value === \"skip\" || value === \"include\";\n}\nexport function getInclusionDirectives(directives) {\n  var result = [];\n  if (directives && directives.length) {\n    directives.forEach(function(directive) {\n      if (!isInclusionDirective(directive))\n        return;\n      var directiveArguments = directive.arguments;\n      var directiveName = directive.name.value;\n      invariant(directiveArguments && directiveArguments.length === 1, 68, directiveName);\n      var ifArgument = directiveArguments[0];\n      invariant(ifArgument.name && ifArgument.name.value === \"if\", 69, directiveName);\n      var ifValue = ifArgument.value;\n      invariant(ifValue && (ifValue.kind === \"Variable\" || ifValue.kind === \"BooleanValue\"), 70, directiveName);\n      result.push({ directive, ifArgument });\n    });\n  }\n  return result;\n}\n",
      "start": 1716330192725,
      "end": 1716330193768,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/shubhamsingh/namma/importedProds/node_modules/@apollo/client/utilities/graphql/directives.js\"],\n  \"sourcesContent\": [\"import { invariant } from \\\"../globals/index.js\\\";\\nimport { visit, BREAK } from \\\"graphql\\\";\\nexport function shouldInclude(_a, variables) {\\n    var directives = _a.directives;\\n    if (!directives || !directives.length) {\\n        return true;\\n    }\\n    return getInclusionDirectives(directives).every(function (_a) {\\n        var directive = _a.directive, ifArgument = _a.ifArgument;\\n        var evaledValue = false;\\n        if (ifArgument.value.kind === \\\"Variable\\\") {\\n            evaledValue =\\n                variables && variables[ifArgument.value.name.value];\\n            invariant(evaledValue !== void 0, 67, directive.name.value);\\n        }\\n        else {\\n            evaledValue = ifArgument.value.value;\\n        }\\n        return directive.name.value === \\\"skip\\\" ? !evaledValue : evaledValue;\\n    });\\n}\\nexport function getDirectiveNames(root) {\\n    var names = [];\\n    visit(root, {\\n        Directive: function (node) {\\n            names.push(node.name.value);\\n        },\\n    });\\n    return names;\\n}\\nexport var hasAnyDirectives = function (names, root) {\\n    return hasDirectives(names, root, false);\\n};\\nexport var hasAllDirectives = function (names, root) {\\n    return hasDirectives(names, root, true);\\n};\\nexport function hasDirectives(names, root, all) {\\n    var nameSet = new Set(names);\\n    var uniqueCount = nameSet.size;\\n    visit(root, {\\n        Directive: function (node) {\\n            if (nameSet.delete(node.name.value) && (!all || !nameSet.size)) {\\n                return BREAK;\\n            }\\n        },\\n    });\\n    // If we found all the names, nameSet will be empty. If we only care about\\n    // finding some of them, the < condition is sufficient.\\n    return all ? !nameSet.size : nameSet.size < uniqueCount;\\n}\\nexport function hasClientExports(document) {\\n    return document && hasDirectives([\\\"client\\\", \\\"export\\\"], document, true);\\n}\\nfunction isInclusionDirective(_a) {\\n    var value = _a.name.value;\\n    return value === \\\"skip\\\" || value === \\\"include\\\";\\n}\\nexport function getInclusionDirectives(directives) {\\n    var result = [];\\n    if (directives && directives.length) {\\n        directives.forEach(function (directive) {\\n            if (!isInclusionDirective(directive))\\n                return;\\n            var directiveArguments = directive.arguments;\\n            var directiveName = directive.name.value;\\n            invariant(directiveArguments && directiveArguments.length === 1, 68, directiveName);\\n            var ifArgument = directiveArguments[0];\\n            invariant(ifArgument.name && ifArgument.name.value === \\\"if\\\", 69, directiveName);\\n            var ifValue = ifArgument.value;\\n            // means it has to be a variable value if this is a valid @skip or @include directive\\n            invariant(ifValue &&\\n                (ifValue.kind === \\\"Variable\\\" || ifValue.kind === \\\"BooleanValue\\\"), 70, directiveName);\\n            result.push({ directive: directive, ifArgument: ifArgument });\\n        });\\n    }\\n    return result;\\n}\\n//# sourceMappingURL=directives.js.map\"],\n  \"mappings\": \"AAAA,SAAS,iBAAiB;AAC1B,SAAS,OAAO,aAAa;AACtB,gBAAS,cAAc,IAAI,WAAW;AACzC,MAAI,aAAa,GAAG;AACpB,MAAI,CAAC,cAAc,CAAC,WAAW,QAAQ;AACnC,WAAO;AAAA,EACX;AACA,SAAO,uBAAuB,UAAU,EAAE,MAAM,SAAUA,KAAI;AAC1D,QAAI,YAAYA,IAAG,WAAW,aAAaA,IAAG;AAC9C,QAAI,cAAc;AAClB,QAAI,WAAW,MAAM,SAAS,YAAY;AACtC,oBACI,aAAa,UAAU,WAAW,MAAM,KAAK,KAAK;AACtD,gBAAU,gBAAgB,QAAQ,IAAI,UAAU,KAAK,KAAK;AAAA,IAC9D,OACK;AACD,oBAAc,WAAW,MAAM;AAAA,IACnC;AACA,WAAO,UAAU,KAAK,UAAU,SAAS,CAAC,cAAc;AAAA,EAC5D,CAAC;AACL;AACO,gBAAS,kBAAkB,MAAM;AACpC,MAAI,QAAQ,CAAC;AACb,QAAM,MAAM;AAAA,IACR,WAAW,SAAU,MAAM;AACvB,YAAM,KAAK,KAAK,KAAK,KAAK;AAAA,IAC9B;AAAA,EACJ,CAAC;AACD,SAAO;AACX;AACO,WAAI,mBAAmB,SAAU,OAAO,MAAM;AACjD,SAAO,cAAc,OAAO,MAAM,KAAK;AAC3C;AACO,WAAI,mBAAmB,SAAU,OAAO,MAAM;AACjD,SAAO,cAAc,OAAO,MAAM,IAAI;AAC1C;AACO,gBAAS,cAAc,OAAO,MAAM,KAAK;AAC5C,MAAI,UAAU,IAAI,IAAI,KAAK;AAC3B,MAAI,cAAc,QAAQ;AAC1B,QAAM,MAAM;AAAA,IACR,WAAW,SAAU,MAAM;AACvB,UAAI,QAAQ,OAAO,KAAK,KAAK,KAAK,MAAM,CAAC,OAAO,CAAC,QAAQ,OAAO;AAC5D,eAAO;AAAA,MACX;AAAA,IACJ;AAAA,EACJ,CAAC;AAGD,SAAO,MAAM,CAAC,QAAQ,OAAO,QAAQ,OAAO;AAChD;AACO,gBAAS,iBAAiB,UAAU;AACvC,SAAO,YAAY,cAAc,CAAC,UAAU,QAAQ,GAAG,UAAU,IAAI;AACzE;AACA,SAAS,qBAAqB,IAAI;AAC9B,MAAI,QAAQ,GAAG,KAAK;AACpB,SAAO,UAAU,UAAU,UAAU;AACzC;AACO,gBAAS,uBAAuB,YAAY;AAC/C,MAAI,SAAS,CAAC;AACd,MAAI,cAAc,WAAW,QAAQ;AACjC,eAAW,QAAQ,SAAU,WAAW;AACpC,UAAI,CAAC,qBAAqB,SAAS;AAC/B;AACJ,UAAI,qBAAqB,UAAU;AACnC,UAAI,gBAAgB,UAAU,KAAK;AACnC,gBAAU,sBAAsB,mBAAmB,WAAW,GAAG,IAAI,aAAa;AAClF,UAAI,aAAa,mBAAmB,CAAC;AACrC,gBAAU,WAAW,QAAQ,WAAW,KAAK,UAAU,MAAM,IAAI,aAAa;AAC9E,UAAI,UAAU,WAAW;AAEzB,gBAAU,YACL,QAAQ,SAAS,cAAc,QAAQ,SAAS,iBAAiB,IAAI,aAAa;AACvF,aAAO,KAAK,EAAE,WAAsB,WAAuB,CAAC;AAAA,IAChE,CAAC;AAAA,EACL;AACA,SAAO;AACX;\",\n  \"names\": [\"_a\"]\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1716330193768,
      "end": 1716330193768,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716330193768,
      "end": 1716330193768,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716330193768,
      "end": 1716330193768,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716330193768,
      "end": 1716330193768,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716330193768,
      "end": 1716330193768,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716330193768,
      "end": 1716330193768,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716330193768,
      "end": 1716330193768,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716330193768,
      "end": 1716330193768,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716330193768,
      "end": 1716330193768,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716330193768,
      "end": 1716330193768,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716330193768,
      "end": 1716330193768,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716330193768,
      "end": 1716330193768,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716330193768,
      "end": 1716330193768,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716330193768,
      "end": 1716330193768,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716330193768,
      "end": 1716330193768,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1716330193768,
      "end": 1716330193768,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716330193768,
      "end": 1716330193768,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716330193768,
      "end": 1716330193768,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716330193768,
      "end": 1716330193768,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716330193768,
      "end": 1716330193768,
      "order": "normal"
    }
  ]
}
