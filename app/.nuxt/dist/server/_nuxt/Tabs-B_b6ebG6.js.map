{"version":3,"file":"Tabs-B_b6ebG6.js","sources":["../../../../../components/awesome/Tabs.vue"],"sourcesContent":["<script lang=\"ts\" setup>\n// types\ninterface TabItem {\n  name: string\n  title: string\n}\n\n// composables\nconst slots = useSlots()\ndefineEmits(['click'])\n\n// vars\nconst tabs = ref<HTMLDivElement>()\nconst tabHeaderIndicator = ref<HTMLDivElement>()\nconst tabItems = ref<TabItem[]>([])\nconst activeTab = ref<string>()\n\n// provides\nprovide('activeTab', activeTab)\n\n// methods\nconst updateIndicator = () => {\n  if (!tabs.value || !tabHeaderIndicator.value) return\n\n  // dom\n  const dom = tabHeaderIndicator.value\n  // get header tab item dom\n  const currentActiveIndex = tabItems.value.findIndex(\n    ({ name }) => name === activeTab.value,\n  )\n  const tabItem = tabs.value.querySelectorAll('.tabs-header-item')[\n    currentActiveIndex\n  ] as HTMLDivElement\n  if (!tabItem) return\n\n  // set dom position and size to tab item\n  const padding = 24\n  const diff = 30\n  dom.style.width = `${tabItem.offsetWidth + diff}px`\n  dom.style.left = `${tabItem.offsetLeft - padding - diff / 2}px`\n}\n\n// watchs\nwatch(tabItems, () => updateIndicator())\nwatch(activeTab, () => updateIndicator())\n\n// lifecycle\nonBeforeMount(() => {\n  if (slots.default) {\n    slots.default().forEach((element, i) => {\n      const tab = element.props as TabItem\n      tabItems.value.push(tab)\n      if (i === 0) activeTab.value = tab.name\n    })\n  }\n})\nonMounted(() => {\n  ;(async () => {\n    while (\n      typeof tabHeaderIndicator.value === 'undefined' ||\n      typeof tabs.value === 'undefined'\n    ) {\n      await new Promise((resolve) => setTimeout(resolve, 10))\n    }\n    setTimeout(() => {\n      updateIndicator()\n    }, 350)\n  })()\n})\n</script>\n\n<template>\n  <div ref=\"tabs\" class=\"tabs\">\n    <ClientOnly>\n      <div\n        class=\"tabs-header relative overflow-hidden flex space-x-6 text-sm font-bold text-gray-300 bg-primary-700 rounded-t-lg px-5 py-3\"\n      >\n        <div\n          v-for=\"item in tabItems\"\n          :key=\"item.name\"\n          :class=\"{\n            'tabs-header-item': true,\n            'text-white': activeTab === item.name,\n          }\"\n          :style=\"{\n            zIndex: 2,\n          }\"\n          @click=\"activeTab = item.name\"\n        >\n          <a href=\"#\" @click.prevent=\"$emit('click')\">\n            {{ item.title }}\n          </a>\n        </div>\n        <span\n          ref=\"tabHeaderIndicator\"\n          class=\"absolute flex h-full top-0 left-0 p-1 py-1.5 overflow-hidden transition-all duration-300\"\n          :style=\"{ zIndex: 1 }\"\n        >\n          <span class=\"flex-1 bg-gray-500/40 rounded-lg\" />\n        </span>\n      </div>\n    </ClientOnly>\n    <div\n      class=\"tabs-body relative text-gray-800 dark:text-white bg-gray-200 dark:bg-gray-800 shadow rounded-b-lg\"\n    >\n      <slot />\n    </div>\n  </div>\n</template>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQc,aAAS;AAIvB,UAAM,OAAO;AACb,UAAM,qBAAqB;AACrB,UAAA,WAAW,IAAe,CAAA,CAAE;AAClC,UAAM,YAAY;AAGlB,YAAQ,aAAa,SAAS;AAG9B,UAAM,kBAAkB,MAAM;AAC5B,UAAI,CAAC,KAAK,SAAS,CAAC,mBAAmB;AAAO;AAG9C,YAAM,MAAM,mBAAmB;AAEzB,YAAA,qBAAqB,SAAS,MAAM;AAAA,QACxC,CAAC,EAAE,KAAK,MAAM,SAAS,UAAU;AAAA,MAAA;AAEnC,YAAM,UAAU,KAAK,MAAM,iBAAiB,mBAAmB,EAC7D,kBACF;AACA,UAAI,CAAC;AAAS;AAGd,YAAM,UAAU;AAChB,YAAM,OAAO;AACb,UAAI,MAAM,QAAQ,GAAG,QAAQ,cAAc,IAAI;AAC/C,UAAI,MAAM,OAAO,GAAG,QAAQ,aAAa,UAAU,OAAO,CAAC;AAAA,IAAA;AAIvD,UAAA,UAAU,MAAM,gBAAA,CAAiB;AACjC,UAAA,WAAW,MAAM,gBAAA,CAAiB;;;;;;;;;;;;;;;;;;;;;"}