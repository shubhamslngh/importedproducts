{"version":3,"file":"Cases-Bm5HKJ3p.js","sources":["../../../../../components/awesome/Cases.vue"],"sourcesContent":["<template>\n  <div v-if=\"data\" class=\"swiper\">\n              <h1  class=\"mb-10 text-center text-2xl font-bold\">IPHONE MAGSAFE COMPATIBLE CASES</h1>\n\n    <div class=\"swiper-wrapper\">\n      <div\n        v-for=\"(product, index) in data.products.edges\"\n        :key=\"index\"\n        class=\"swiper-slide\"\n        :id=\"product.node.name\"\n      >\n        <div>\n          <img\n            @click=\"handleClick(product.node.databaseId)\"\n            :src=\"product.node.image ? product.node.image.link : ''\"\n            alt=\"Product Image\"\n            class=\"transition-all ease-in-out\"\n          />\n          <h3 class=\"grid text-wrap text-center text-[0.75rem]/5 font-MONO font-semibold hover:font-bold\">\n            {{ product.node.name }}\n          </h3>\n\n          <template v-if=\"selectedProductId === product.node.databaseId\">\n            <div class=\"swiper-container grid m-5 mt-12 \">\n              {{ console.log(selectedProductId) }}\n              <AwesomeVariations :productId=\"selectedProductId\" />\n              <!-- <AwesomeCardstest :productId=\"selectedProductId\" /> -->\n            </div>\n          </template>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from \"vue\";\nimport { cartItem } from \"../../utils/cart\";\nimport Swiper from \"swiper\";\nimport \"swiper/swiper-bundle.css\";\nimport gql from \"graphql-tag\";\nconst selectedProductId = ref(0);\n// const { Data1 } = await useAsyncQuery(cartItem);\n// console.log(\"cart\",Data1)\nconst query = gql`\n  query MyQuery {\n    products(where: { category: \"cases\" }) {\n      edges {\n        node {\n          image {\n            link\n          }\n          name\n          id\n          databaseId\n        }\n      }\n    }\n  }\n`;\n\nconst initializeSwiper = () => {\n  const swiper = new Swiper(\".swiper\", {\n    slidesPerView: 5,\n    spaceBetween: 40,\n    pagination: {\n      el: \".swiper-pagination\",\n      clickable: true,\n    },\n    breakpoints: {\n      420: {\n        slidesPerView: 1,\n        spaceBetween: 20,\n      },\n      720: {\n        slidesPerView: 5,\n        spaceBetween: 10,\n      },\n      1440: {\n        slidesPerView: 5,\n        spaceBetween: 40,\n      },\n    },\n  });\n  return swiper;\n};\n\nconst products = ref([]);\nonMounted(() => {\n  initializeSwiper();\n});\n\nconst { data } = await useAsyncQuery(query);\n// console.log(data._value.products.edges, \"here in cards\");\nproducts.value = data._value.products.edges.map((edges) => ({\n  name: edges.node.name,\n  img: edges.node.image.link,\n}));\nconsole.log(products.value, \"cases is obj\");\n\nconst handleClick = (productId) => {\n  selectedProductId.value = productId;\n};\n</script>\n\n<style scoped>\n.swiper-slide {\n  width: cover;\n  height: cover;\n  text-align: center;\n  font-size: 10px;\n  display: grid;\n  justify-content: center;\n  align-items: center;\n}\n.swiper-container {\n  width: auto;\n  height: auto;\n}\n</style>\n"],"names":["_withAsyncContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA,UAAM,oBAAoB,IAAI,CAAC;AAG/B,UAAM,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2Cd,UAAM,WAAW,IAAI,CAAA,CAAE;AAKvB,UAAM,EAAE,KAAM,KAAG,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAM,cAAc,KAAK,CAAA;AAE1C,aAAS,QAAQ,KAAK,OAAO,SAAS,MAAM,IAAI,CAAC,WAAW;AAAA,MAC1D,MAAM,MAAM,KAAK;AAAA,MACjB,KAAK,MAAM,KAAK,MAAM;AAAA,IACxB,EAAE;AACF,YAAQ,IAAI,SAAS,OAAO,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}