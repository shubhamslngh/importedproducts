{"version":3,"file":"Item-WKVZeniT.js","sources":["../../../../../composables/use-navbar-parser.ts","../../../../../components/layouts/Page/NavbarMenu/Item.vue"],"sourcesContent":["import type { RouteLocationRaw } from '#vue-router'\n\nexport function useNavbarParser() {\n  return {\n    parseMenuTitle: function parseMenuTitle(\n      title?: string | ((nuxt: any) => string),\n    ) {\n      return typeof title === 'function' ? title(useNuxtApp()) : title || ''\n    },\n    parseMenuRoute: function parseMenuRoute(\n      to?: RouteLocationRaw | ((nuxt: any) => RouteLocationRaw),\n    ) {\n      return typeof to === 'function' ? to(useNuxtApp()) : to\n    },\n  }\n}\n","<script lang=\"ts\" setup>\nconst nuxtApp = useNuxtApp();\nconst { parseMenuRoute, parseMenuTitle } = useNavbarParser();\n\nconst props = defineProps({\n  menu: {\n    type: Object as () =>\n      | AwesomeLayoutPageNavbarMenu\n      | AwesomeLayoutPageNavbarMenuDropdownItem,\n    required: true,\n  },\n  isDropdown: {\n    type: Boolean,\n    default: false,\n  },\n});\n</script>\n\n<template>\n  <template v-if=\"menu?.type === 'link' && isDropdown\">\n    <NuxtLink :to=\"parseMenuRoute(menu?.to)\" #=\"{ isActive }\">\n      <div\n        :class=\"[\n          'transition-all duration-300 hover:bg-gray-100 dark:hover:bg-gray-800 px-4 py-2 rounded-lg w-full',\n          isActive\n            ? 'text-gray-900 dark:text-gray-100 font-bold'\n            : 'text-gray-700 dark:text-gray-300',\n        ]\"\n      >\n        {{ parseMenuTitle(menu?.title) }}\n      </div>\n    </NuxtLink>\n  </template>\n  <template v-else-if=\"menu?.type === 'link'\">\n    <NuxtLink :to=\"parseMenuRoute(menu?.to)\" #=\"{ isActive }\">\n      <span\n        :class=\"{\n          'text-gray-900 dark:text-gray-100 font-bold': isActive,\n          'text-gray-700 dark:text-gray-300': !isActive,\n        }\"\n        >{{ parseMenuTitle(menu?.title) }}</span\n      >\n    </NuxtLink>\n  </template>\n  <template v-else-if=\"menu?.type === 'button'\">\n    <AwesomeButton\n      :text=\"parseMenuTitle(menu?.title)\"\n      size=\"xs\"\n      :to=\"parseMenuRoute(menu.to)\"\n    />\n  </template>\n</template>\n"],"names":[],"mappings":";;;;;;AAEO,SAAS,kBAAkB;AACzB,SAAA;AAAA,IACL,gBAAgB,SAAS,eACvB,OACA;AACA,aAAO,OAAO,UAAU,aAAa,MAAM,YAAY,IAAI,SAAS;AAAA,IACtE;AAAA,IACA,gBAAgB,SAAS,eACvB,IACA;AACA,aAAO,OAAO,OAAO,aAAa,GAAG,WAAA,CAAY,IAAI;AAAA,IACvD;AAAA,EAAA;AAEJ;;;;;;;;;;;;;;;ACbA,UAAM,EAAE,gBAAgB,eAAe,IAAI,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}