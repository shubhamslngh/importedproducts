{"version":3,"file":"Cases-62H0gYPI.js","sources":["../../../../../components/awesome/Cases.vue"],"sourcesContent":["<template>\n  <div v-if=\"data.products.edges\" class=\"swiper\">\n<AwesomeWelcome :name=\"category\" class=\"text-sm\"/>\n\n    <div class=\"swiper-wrapper\">\n      <div\n        v-for=\"(product, index) in data.products.edges\"\n        :key=\"index\"\n        class=\"swiper-slide\"\n        :id=\"product.node.name\"\n      >\n        <div>\n          <img\n            @click=\"handleClick(product.node.databaseId)\"\n            :src=\"product.node.image ? product.node.image.link : ''\"\n            alt=\"Product Image\"\n            class=\"transition-all ease-in-out\"\n          />\n          <h3\n            class=\"grid text-wrap text-center text-[0.75rem]/5 font-MONO font-semibold hover:font-bold\"\n          >\n            {{ product.node.name }}\n          </h3>\n          <template v-if=\"selectedProductId === product.node.databaseId\">\n            <div\n              class=\"swiper-container overscroll-auto focus:overscroll-contain grid m-5 mt-12\"\n            >\n              {{ console.log(selectedProductId) }}\n              <AwesomeVariations :productId=\"selectedProductId\" />\n              <!-- <AwesomeCardstest :productId=\"selectedProductId\" /> -->\n            </div>\n          </template>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div v-else>\n    <div class=\"swiper-lazy-preloader swiper-lazy-preloader-black\">Loading...</div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, watch } from \"vue\";\nimport Swiper from \"swiper\";\nimport \"swiper/swiper-bundle.css\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@vue/apollo-composable\";\n\nconst props = defineProps({\n  category: {\n    type: String,\n    required: true,\n    default: \"Cases\",\n  },\n});\n\nconst selectedProductId = ref(0);\n\nconst query = gql`\n  query GetProducts($category: String!) {\n    products(where: { category: $category }) {\n      edges {\n        node {\n          image {\n            link\n          }\n          name\n          id\n          databaseId\n        }\n      }\n    }\n  }\n`;\n\nconst { result: data, refetch } = useQuery(query, () => ({\n  category: props.category,\n}));\n\nwatch(\n  () => props.category,\n  (newVal) => {\n    if (newVal) refetch();\n  }\n);\n\nonMounted(() => {\n  new Swiper(\".swiper\", {\n    slidesPerView: 5,\n    rewind: true,\n    spaceBetween: 40,\n    autoplay: true,\n    loop: true,\n    resizeObserver: true,\n    grabCursor: true,\n    pagination: {\n      el: \".swiper-pagination\",\n      type: \"bullets\",\n      clickable: true,\n    },\n    navigation: {\n      nextEl: \".swiper-button-next\",\n      prevEl: \".swiper-button-prev\",\n    },\n    breakpoints: {\n      0: { slidesPerView: 1, spaceBetween: 10 },\n      630: { slidesPerView: 3, spaceBetween: 10 },\n      720: { slidesPerView: 4, spaceBetween: 10 },\n      1440: { slidesPerView: 5, spaceBetween: 40 },\n    },\n  });\n});\n\nconst handleClick = (productId) => {\n  selectedProductId.value = productId;\n};\n</script>\n\n<style scoped>\n.swiper-slide {\n  width: cover;\n  height: cover;\n  text-align: center;\n  font-size: 10px;\n  display: grid;\n  justify-content: center;\n  align-items: center;\n}\n.swiper-container {\n  width: auto;\n  height: auto;\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA,UAAM,QAAQ;AAQd,UAAM,oBAAoB,IAAI,CAAC;AAE/B,UAAM,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBd,UAAM,EAAE,QAAQ,MAAM,QAAS,IAAG,SAAS,OAAO,OAAO;AAAA,MACvD,UAAU,MAAM;AAAA,IAClB,EAAE;AAEF;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,WAAW;AACV,YAAI;AAAQ;MACb;AAAA,IACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}