{"version":3,"file":"cart-CRQWliXk.js","sources":["../../../../../utils/cart.js"],"sourcesContent":["import { gql } from \"@apollo/client/core\";\nimport { setContext } from '@apollo/client/link/context';\n  \nexport const AddCart = gql`\n  mutation AddToCart($productId: Int!, $quantity: Int!, $variationId: Int!) {\n    addToCart(input: {productId: $productId, quantity: $quantity, variationId: $variationId}) {\n      clientMutationId\n    }\n  }\n`;\n\nexport const getVariation = gql`\nquery MyQuery ($productId: ID!){\n  variableProduct( id: $productId, idType: DATABASE_ID) {\n    productId\n    variations(first: 100){\n      nodes {\n        databaseId\n        image {\n          link\n        }\n        name\n        price\n        attributes {\n          nodes {\n            value\n            label\n            id\n          }\n        }\n      }\n    }\n  }\n}`;\n\nexport const cartItem = gql`\nquery NewQuery {\n  cart {\n    total\n    isEmpty\n    contents {\n      nodes {\n        product {\n          node {\n            image {\n              link\n            }\n            name\n          }\n        }\n      }\n    }\n  }\n}`\nexport const signup= gql`\nmutation signup {\n    createUser(\n    input: {username: \"\", lastName: \"\", firstName: \"\", email: \"\", password: \"\"}\n  ) {\n    user {\n      auth {\n        authToken\n        refreshToken\n      }\n    }\n  }\n}\n`"],"names":[],"mappings":";AAGY,MAAC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQX,MAAC,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBZ,MAAC,SAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;"}