{"version":3,"file":"Graphql-C5EqM4Di.js","sources":["../../../../../components/awesome/Graphql.vue"],"sourcesContent":["<template>\n  <div class=\"box\" background-color-black>\n    <div id=\"wrapperSwiper\" class=\"div lg:w-[200vw] md:w-[200vw] sm:w-[100vw]\">\n      <div\n        id=\"gridWrapper\"\n        class=\"grid lg:grid-cols-8 md:grid-cols-8 sm:grid-cols-1 transition-all duration-200\"\n      >\n        <div\n          v-for=\"(product, index) in Data1._value.products.edges\"\n          :key=\"index\"\n          class=\"transition-[width] duration-200 ease-in-out\"\n          :id=\"product.node.name\"\n        >\n          <div class=\"snap-x\">\n            <div class=\"snap-center\">\n              <img\n                :src=\"product.node.image ? product.node.image.link : ''\"\n                alt=\"Product Image\"\n                class=\"transition-all ease-in-out\"\n              />\n              <h3 class=\"box text-wrap font-semibold hover:font-bold\">\n                {{ product.node.name }}\n              </h3>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script setup>\nimport { ref } from \"vue\";\nimport gql from \"graphql-tag\";\n\nconst Data1 = ref([]); // Initialize Data1 as a reactive reference\n\n// function removeTypename(obj) {\n//   if (!obj || typeof obj !== \"object\") {\n//     return obj;\n//   }\n\n//   if (Array.isArray(obj)) {\n//     return obj.map(removeTypename);\n//   }\n\n//   const newObj = {};\n//   for (const key in obj) {\n//     if (key !== \"__typename\") {\n//       newObj[key] = removeTypename(obj[key]);\n//     }\n//   }\n//   return newObj;\n// }\n\nconst query = gql`\n  query MyQuery {\n    products(where: { category: \"cases\" }) {\n      edges {\n        node {\n          image {\n            link\n          }\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst { data } = await useAsyncQuery(query);\n\nif (data) {\n  // const parsedData = removeTypename(data);\n  // console.log(data, \"parsed OP \");\n  Data1.value = data; // Update Data1 with the parsed data\n  console.log(Data1.value, \"Graphql data\");\n}\n</script>\n"],"names":["_withAsyncContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,UAAM,QAAQ,IAAI,CAAA,CAAE;AAoBpB,UAAM,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAed,UAAM,EAAE,KAAM,KAAG,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAM,cAAc,KAAK,CAAA;AAE1C,QAAI,MAAM;AAGR,YAAM,QAAQ;AACd,cAAQ,IAAI,MAAM,OAAO,cAAc;AAAA,IACzC;;;;;;;;;;;;;;;;;;;"}