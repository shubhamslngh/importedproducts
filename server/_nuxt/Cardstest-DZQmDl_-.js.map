{"version":3,"file":"Cardstest-DZQmDl_-.js","sources":["../../../../../components/awesome/Cardstest.vue"],"sourcesContent":["<template>\n  <swiper\n    :effect=\"'cards'\"\n    :grabCursor=\"true\"\n    :modules=\"modules\"\n    :loop=\"true\"\n    class=\"mySwiper\"\n  >\n    <swiper-slide\n      v-for=\"(product, index) in products\"\n      :key=\"index\"\n      :style=\"{\n        'background-image': `url(${product.img})`,\n      }\"\n    >\n      <div class=\"bg-transparent\">\n        <img\n          :src=\"product.img ? product.img : ''\"\n          alt=\"Product Image\"\n          class=\"bg-transparent transition-all ease-in-out\"\n        />\n      </div>\n    </swiper-slide>\n  </swiper>\n</template>\n\n<script>\nimport { ref, onMounted } from \"vue\";\nimport gql from \"graphql-tag\";\nconst selectedProductId = ref(0);\nimport { Swiper, SwiperSlide } from \"swiper/vue\";\nimport \"swiper/css\";\nimport \"swiper/css/effect-cards\";\nimport { EffectCards } from \"swiper/modules\";\nexport default {\n  components: {\n    Swiper,\n    SwiperSlide,\n  },\n\n  setup() {\n    const products = ref([]);\n    const fetchData = async () => {\n      const query = gql`\n        query MyQuery {\n          products(where: { category: \"cases\" }) {\n            edges {\n              node {\n                image {\n                  link\n                }\n                name\n                id\n                databaseId\n              }\n            }\n          }\n        }\n      `;\n      const data = useQuery(query);\n      console.log(data.result, \"hi here is dfata\");\n      if (data) {\n        products.value = data.result._value.products.edges.map((edges) => ({\n          name: edges.node.name,\n          img: edges.node.image.link,\n        }));\n        console.log(products.value, \"hi here is object\");\n      }\n    };\n    onMounted(() => {\n      fetchData();\n    });\n    return {\n      modules: [EffectCards],\n      products,\n    };\n  },\n};\n</script>\n\n<style scoped>\n.img {\n  background-color: none;\n}\n\n.swiper {\n  width: 240px;\n  height: 320px;\n  background: none !important;\n}\n.swiper-slide-shadow {\n  background: none;\n}\n.swiper-3d .swiper-slide-shadow {\n  background: none !;\n}\n\n.swiper-cards {\n  border: none;\n  background: none;\n}\n.swiper-slide-shadow .swiper-slide-shadow-cards {\n  background: none;\n}\n.swiper-slide {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 22px;\n  font-weight: bold;\n}\n</style>\n"],"names":["_ssrRenderComponent","_mergeProps","_withCtx","_push","_parent","_ssrRenderList","_","_scopeId","_ssrRenderAttr","_createVNode","_openBlock","_createBlock","_Fragment","_renderList"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6B0B,IAAI,CAAC;AAK/B,MAAK,YAAU;AAAA,EACb,YAAY;AAAA,IACV;AAAA,IACA;AAAA,EACD;AAAA,EAED,QAAQ;AACN,UAAM,WAAW,IAAI,CAAA,CAAE;AA+BvB,WAAO;AAAA,MACL,SAAS,CAAC,WAAW;AAAA,MACrB;AAAA;EAEH;AACH;;;;AA7EA,QAAAA,mBAAA,mBAAAC,WAAA;AAAA,IAEK,QAAQ;AAAA,IACR,YAAY;AAAA,IACZ,SAAS,OAAO;AAAA,IAChB,MAAM;AAAA,IACP,OAAM;AAAA,EANV,GAAA,MAAA,GAAA;AAAA,IAAA,SAAAC,QACE,CAsBS,GAAAC,QAAAC,UAAA,aAAA;AAvBX,UAAAD,QAAA;AAAA,QAAAA,OAAA,UAAA;AAAAE,sBASiC,OAAQ,UATzC,CASc,SAAS,UAAK;AAT5B,UAAAF,OAAAH,mBAAA,yBAAA;AAAA,YAUO,KAAK;AAAA,YACL,OAAK;AAAA,cAAuC,oBAAA,OAAA,QAAQ,GAAG;AAAA;;YAX9D,SAAAE,QAQI,CAceI,IAAAH,QAAAC,UAAAG,cAAA;AAtBnB,kBAAAJ,QAAA;AAAA,gBAAAA,OAAA,8CAAAI,iBAAAC,cAiBW,OAAK,QAAQ,MAAM,QAAQ,MAAG,EAAA,0FAjBzCD;;;kBAeME,YAMM,OAAA,EAND,OAAM,iBAAgB,GAAA;AAAA,oBACzBA,YAIE,OAAA;AAAA,sBAHC,KAAK,QAAQ,MAAM,QAAQ,MAAG;AAAA,sBAC/B,KAAI;AAAA,sBACJ,OAAM;AAAA;;;;;YAnBhB,GAAA;AAAA;;AAAA,QAAAN,OAAA,UAAA;AAAA;;WAQIO,UAAA,IAAA,GAAAC,YAceC,gBAtBnBC,WASiC,OAAA,UATjC,CASc,SAAS,UAAK;gCADxBF,YAce,yBAAA;AAAA,cAZZ,KAAK;AAAA,cACL,OAAK;AAAA,gBAAuC,oBAAA,OAAA,QAAQ,GAAG;AAAA;;cAX9D,SAAAT,QAeM,MAMM;AAAA,gBANNO,YAMM,OAAA,EAND,OAAM,iBAAgB,GAAA;AAAA,kBACzBA,YAIE,OAAA;AAAA,oBAHC,KAAK,QAAQ,MAAM,QAAQ,MAAG;AAAA,oBAC/B,KAAI;AAAA,oBACJ,OAAM;AAAA;;;cAnBhB,GAAA;AAAA;;;;;IAAA,GAAA;AAAA;;;;;;;;;"}